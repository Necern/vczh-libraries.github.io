<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.collections.FromIteratorEnumerable`2">
    <SymbolTree NamespaceUrlName="vl.collections">
      <SymbolParentMapping>
        <Map From="::vl::collections::FromIteratorEnumerable`2::T" To="::vl::collections::FromIteratorEnumerable`2" />
        <Map From="::vl::collections::FromIteratorEnumerable`2::I" To="::vl::collections::FromIteratorEnumerable`2" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2" DisplayName="FromIteratorEnumerable class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator" DisplayName="Enumerator class" Doc="false">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::begin" DisplayName="begin field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::end" DisplayName="end field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::current" DisplayName="current field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::Enumerator(I,I,I)" DisplayName="Enumerator constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::Clone()const" DisplayName="Clone method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::Current()const" DisplayName="Current method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::Index()const" DisplayName="Index method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::Next()" DisplayName="Next method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::Reset()" DisplayName="Reset method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::Enumerator::Evaluated()const" DisplayName="Evaluated method" Doc="false" />
        </Symbol>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::begin" DisplayName="begin field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::end" DisplayName="end field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::CreateEnumerator()const" DisplayName="CreateEnumerator method" Doc="false" />
        <Overloads DisplayName="FromIteratorEnumerable constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::FromIteratorEnumerable(I,I)" DisplayName="FromIteratorEnumerable constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::FromIteratorEnumerable`2::FromIteratorEnumerable(&amp; const FromIteratorEnumerable&lt;T, I&gt;)" DisplayName="FromIteratorEnumerable constructor" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>