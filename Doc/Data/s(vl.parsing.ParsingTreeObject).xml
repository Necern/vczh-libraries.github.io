<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.parsing.ParsingTreeObject">
    <ClassDecl Access="Public" Name="ParsingTreeObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject" OverloadKey="::vl::parsing::ParsingTreeObject" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Representing an object node in a abstract syntax tree.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Protected" Name="NodeMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::NodeMap" OverloadKey="::vl::parsing::ParsingTreeObject::NodeMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Protected" Name="NameList" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::NameList" OverloadKey="::vl::parsing::ParsingTreeObject::NameList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::SortedList" Name="SortedList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::SortedList`2@s:vl.collections.SortedList`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Protected" Name="RuleList" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::RuleList" OverloadKey="::vl::parsing::ParsingTreeObject::RuleList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Protected" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::type" OverloadKey="::vl::parsing::ParsingTreeObject::type" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="members" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::members" OverloadKey="::vl::parsing::ParsingTreeObject::members" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject::NodeMap" Name="NodeMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::ParsingTreeObject::NodeMap@s:vl.parsing.ParsingTreeObject" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="rules" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::rules" OverloadKey="::vl::parsing::ParsingTreeObject::rules" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject::RuleList" Name="RuleList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::ParsingTreeObject::RuleList@s:vl.parsing.ParsingTreeObject" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="GetSubNodesInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::GetSubNodesInternal" OverloadKey="::vl::parsing::ParsingTreeObject::GetSubNodesInternal()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode::NodeList" Name="NodeList">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeNode::NodeList@s:vl.parsing.ParsingTreeNode" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ParsingTreeObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::ParsingTreeObject" OverloadKey="::vl::parsing::ParsingTreeObject::ParsingTreeObject(&amp; const WString,&amp; const ParsingTextRange)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::ParsingTreeObject::_type" OverloadKey="::vl::parsing::ParsingTreeObject::ParsingTreeObject(&amp; const WString,&amp; const ParsingTextRange)::_type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_codeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::ParsingTreeObject::_codeRange" OverloadKey="::vl::parsing::ParsingTreeObject::ParsingTreeObject(&amp; const WString,&amp; const ParsingTextRange)::_codeRange" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~ParsingTreeObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::~ParsingTreeObject" OverloadKey="::vl::parsing::ParsingTreeObject::~ParsingTreeObject()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Accept" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::Accept" OverloadKey="::vl::parsing::ParsingTreeObject::Accept(* IVisitor)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="visitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::Accept::visitor" OverloadKey="::vl::parsing::ParsingTreeObject::Accept(* IVisitor)::visitor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode::IVisitor" Name="IVisitor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeNode::IVisitor@s:vl.parsing.ParsingTreeNode" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Clone" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::Clone" OverloadKey="::vl::parsing::ParsingTreeObject::Clone()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::GetType" OverloadKey="::vl::parsing::ParsingTreeObject::GetType()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the type name of the object.&lt;/summary&gt;
  &lt;returns&gt;The type name of the object.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::SetType" OverloadKey="::vl::parsing::ParsingTreeObject::SetType(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::SetType::_type" OverloadKey="::vl::parsing::ParsingTreeObject::SetType(&amp; const WString)::_type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMembers" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::GetMembers" OverloadKey="::vl::parsing::ParsingTreeObject::GetMembers()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all fields of the object.&lt;/summary&gt;
  &lt;returns&gt;All fields of the object.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject::NodeMap" Name="NodeMap">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeObject::NodeMap@s:vl.parsing.ParsingTreeObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::GetMember" OverloadKey="::vl::parsing::ParsingTreeObject::GetMember(&amp; const WString)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get a field of the object by the field name.&lt;/summary&gt;
  &lt;returns&gt;The field of the object.&lt;/returns&gt;
  &lt;param name="name"&gt;The field name.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::GetMember::name" OverloadKey="::vl::parsing::ParsingTreeObject::GetMember(&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::SetMember" OverloadKey="::vl::parsing::ParsingTreeObject::SetMember(&amp; const WString,Ptr&lt;ParsingTreeNode&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::SetMember::name" OverloadKey="::vl::parsing::ParsingTreeObject::SetMember(&amp; const WString,Ptr&lt;ParsingTreeNode&gt;)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::SetMember::node" OverloadKey="::vl::parsing::ParsingTreeObject::SetMember(&amp; const WString,Ptr&lt;ParsingTreeNode&gt;)::node" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RemoveMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::RemoveMember" OverloadKey="::vl::parsing::ParsingTreeObject::RemoveMember(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::RemoveMember::name" OverloadKey="::vl::parsing::ParsingTreeObject::RemoveMember(&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMemberNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::GetMemberNames" OverloadKey="::vl::parsing::ParsingTreeObject::GetMemberNames()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all field names.&lt;/summary&gt;
  &lt;returns&gt;All field names of the object.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject::NameList" Name="NameList">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeObject::NameList@s:vl.parsing.ParsingTreeObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCreatorRules" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeObject::GetCreatorRules" OverloadKey="::vl::parsing::ParsingTreeObject::GetCreatorRules()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get names of all rules that return this object.&lt;/summary&gt;
  &lt;returns&gt;Names of all rules.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject::RuleList" Name="RuleList">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeObject::RuleList@s:vl.parsing.ParsingTreeObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>