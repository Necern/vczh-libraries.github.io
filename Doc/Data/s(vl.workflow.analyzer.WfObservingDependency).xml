<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.WfObservingDependency">
    <ClassDecl Access="Public" Name="WfObservingDependency" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency" OverloadKey="::vl::workflow::analyzer::WfObservingDependency" ClassType="Class">
      <Children>
        <TypedefDecl Access="Private" Name="DependencyGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::DependencyGroup" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::DependencyGroup">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Group" Name="Group">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Group`4@s:vl.collections.Group`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ObserveList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::ObserveList" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::ObserveList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Public" Name="inputObserves" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::inputObserves" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::inputObserves" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfObservingDependency::ObserveList" Name="ObserveList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfObservingDependency::ObserveList@s:vl.workflow.analyzer.WfObservingDependency" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="outputObserves" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::outputObserves" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::outputObserves" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfObservingDependency::ObserveList" Name="ObserveList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfObservingDependency::ObserveList@s:vl.workflow.analyzer.WfObservingDependency" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="dependencies" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::dependencies" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::dependencies" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="LeftRef">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfObservingDependency::DependencyGroup" Name="DependencyGroup">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfObservingDependency::DependencyGroup@s:vl.workflow.analyzer.WfObservingDependency" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="WfObservingDependency" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency(&amp; WfObservingDependency)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="dependency" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency::dependency" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency(&amp; WfObservingDependency)::dependency" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfObservingDependency" Name="WfObservingDependency">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfObservingDependency@s:vl.workflow.analyzer.WfObservingDependency" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WfObservingDependency" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency(&amp; DependencyGroup)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_dependencies" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency::_dependencies" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency(&amp; DependencyGroup)::_dependencies" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfObservingDependency::DependencyGroup" Name="DependencyGroup">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfObservingDependency::DependencyGroup@s:vl.workflow.analyzer.WfObservingDependency" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WfObservingDependency" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency(&amp; DependencyGroup,&amp; ObserveList)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_dependencies" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency::_dependencies" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency(&amp; DependencyGroup,&amp; ObserveList)::_dependencies" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfObservingDependency::DependencyGroup" Name="DependencyGroup">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfObservingDependency::DependencyGroup@s:vl.workflow.analyzer.WfObservingDependency" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_inputObserves" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency::_inputObserves" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::WfObservingDependency(&amp; DependencyGroup,&amp; ObserveList)::_inputObserves" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfObservingDependency::ObserveList" Name="ObserveList">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfObservingDependency::ObserveList@s:vl.workflow.analyzer.WfObservingDependency" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Prepare" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::Prepare" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::Prepare(* WfExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="observe" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::Prepare::observe" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::Prepare(* WfExpression)::observe" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::AddInternal" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::AddInternal(* WfExpression,* WfExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="observe" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::AddInternal::observe" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::AddInternal(* WfExpression,* WfExpression)::observe" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="dependedObserve" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::AddInternal::dependedObserve" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::AddInternal(* WfExpression,* WfExpression)::dependedObserve" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Add" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::Add" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::Add(* WfExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="observe" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::Add::observe" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::Add(* WfExpression)::observe" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Add" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::Add" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::Add(* WfExpression,&amp; WfObservingDependency)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="observe" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::Add::observe" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::Add(* WfExpression,&amp; WfObservingDependency)::observe" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="dependency" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::Add::dependency" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::Add(* WfExpression,&amp; WfObservingDependency)::dependency" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfObservingDependency" Name="WfObservingDependency">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfObservingDependency@s:vl.workflow.analyzer.WfObservingDependency" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TurnToInput" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::TurnToInput" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::TurnToInput()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Cleanup" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfObservingDependency::Cleanup" OverloadKey="::vl::workflow::analyzer::WfObservingDependency::Cleanup()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>