<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.BoxValue`1(&amp; const T,^ ITypeDescriptor)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Box an reflectable object. Its type cannot be generic.&lt;/summary&gt;
  &lt;returns&gt;The boxed value.&lt;/returns&gt;
  &lt;typeparam name="T"&gt;Type of the object.&lt;/typeparam&gt;
  &lt;param name="object"&gt;The object to box.&lt;/param&gt;
  &lt;param name="typeDescriptor"&gt;The type descriptor of the object (optional).&lt;/param&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::BoxValue`1(&amp; const T,* ITypeDescriptor)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="BoxValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::BoxValue" OverloadKey="::vl::reflection::description::BoxValue`1(&amp; const T,* ITypeDescriptor)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="object" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::BoxValue::object" OverloadKey="::vl::reflection::description::BoxValue`1(&amp; const T,* ITypeDescriptor)::object" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::BoxValue`1(&amp; const T,* ITypeDescriptor)::T@s:vl.reflection.description.BoxValue`1(&amp; const T,^ ITypeDescriptor)" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::BoxValue::typeDescriptor" OverloadKey="::vl::reflection::description::BoxValue`1(&amp; const T,* ITypeDescriptor)::typeDescriptor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>