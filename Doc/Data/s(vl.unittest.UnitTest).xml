<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.unittest.UnitTest">
    <ClassDecl Access="Public" Name="UnitTest" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest" OverloadKey="::vl::unittest::UnitTest" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
A static class containing all unit test operations. In order to run test cases, you should do the following:
1) Write test cases in cpp files like this
TEST_CASE(&amp;lt;Name of the test case, which should be a legal C++ identifier&amp;gt;)
{
	&amp;lt;Use TEST_ASSERT(condition) to test&amp;gt;
	&amp;lt;Use TEST_ERROR(expression) if you know "expression" will cause a fatal error by using the CHECK_ERROR macro.&amp;gt;
	&amp;lt;Use TEST_EXCEPTION(expression, exceptionType, assertFunction) if you know "expression" will throw an expression of "exceptionType", and then you can provide "assertFunction" to check the information provided in the exception.&amp;gt;
	&amp;lt;Use TEST_PRINT(message) to print whatever to the command line window.&amp;gt;
}
You should call &lt;links&gt;&lt;link cref="::vl::unittest::UnitTest::RunAndDisposeTests()@s:vl.unittest.UnitTest" /&gt;&lt;/links&gt; in your main function to run all test cases.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Public" Name="TestProc" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::TestProc" OverloadKey="::vl::unittest::UnitTest::TestProc">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </TypedefDecl>
        <FuncDecl Access="Public" Name="PrintMessage" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::PrintMessage" OverloadKey="::vl::unittest::UnitTest::PrintMessage(&amp; const WString)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Print a green message.&lt;/summary&gt;
  &lt;param name="string"&gt;The content.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::PrintMessage::string" OverloadKey="::vl::unittest::UnitTest::PrintMessage(&amp; const WString)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PrintInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::PrintInfo" OverloadKey="::vl::unittest::UnitTest::PrintInfo(&amp; const WString)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Print a white information.&lt;/summary&gt;
  &lt;param name="string"&gt;The content.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::PrintInfo::string" OverloadKey="::vl::unittest::UnitTest::PrintInfo(&amp; const WString)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PrintError" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::PrintError" OverloadKey="::vl::unittest::UnitTest::PrintError(&amp; const WString)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Print a red error.&lt;/summary&gt;
  &lt;param name="string"&gt;The content.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::PrintError::string" OverloadKey="::vl::unittest::UnitTest::PrintError(&amp; const WString)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PushTest" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::PushTest" OverloadKey="::vl::unittest::UnitTest::PushTest(TestProc)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="testProc" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::PushTest::testProc" OverloadKey="::vl::unittest::UnitTest::PushTest(TestProc)::testProc" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::unittest::UnitTest::TestProc" Name="TestProc">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::unittest::UnitTest::TestProc@s:vl.unittest.UnitTest" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RunAndDisposeTests" Tags="x64, Windows;x86, Windows" NameKey="::vl::unittest::UnitTest::RunAndDisposeTests" OverloadKey="::vl::unittest::UnitTest::RunAndDisposeTests()" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Run all test cases.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>