<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::workflow::runtime::IWfBreakPointAction">
    <ClassDecl Access="Public" Name="IWfBreakPointAction" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::IWfBreakPointAction" OverloadKey="::vl::workflow::runtime::IWfBreakPointAction" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Break point action.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="EvaluateCondition" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::IWfBreakPointAction::EvaluateCondition" OverloadKey="::vl::workflow::runtime::IWfBreakPointAction::EvaluateCondition(* WfDebugger)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called a break point is about to activate.&lt;/summary&gt;
  &lt;returns&gt;Returns false to skip this break point.&lt;/returns&gt;
  &lt;param name="debugger"&gt;The current attached debugger.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="debugger" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::IWfBreakPointAction::EvaluateCondition::debugger" OverloadKey="::vl::workflow::runtime::IWfBreakPointAction::EvaluateCondition(* WfDebugger)::debugger" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger" Name="WfDebugger">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfDebugger@s:vl.workflow.runtime.WfDebugger" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PostAction" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::IWfBreakPointAction::PostAction" OverloadKey="::vl::workflow::runtime::IWfBreakPointAction::PostAction(* WfDebugger)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when a break point is about to activate, even &lt;links&gt;&lt;link cref="::vl::workflow::runtime::IWfBreakPointAction::EvaluateCondition(* WfDebugger)@s:vl.workflow.runtime.IWfBreakPointAction" /&gt;&lt;/links&gt; returns false.&lt;/summary&gt;
  &lt;param name="debugger"&gt;The current attached debugger.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="debugger" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::IWfBreakPointAction::PostAction::debugger" OverloadKey="::vl::workflow::runtime::IWfBreakPointAction::PostAction(* WfDebugger)::debugger" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger" Name="WfDebugger">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfDebugger@s:vl.workflow.runtime.WfDebugger" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Interface" Name="Interface">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Interface@s:vl.Interface" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>