<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::stream::StringReader">
    <ClassDecl Access="Public" Name="StringReader" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader" OverloadKey="::vl::stream::StringReader" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Text reader from a string.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::string" OverloadKey="::vl::stream::StringReader::string" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="current" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::current" OverloadKey="::vl::stream::StringReader::current" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="lastCallIsReadLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::lastCallIsReadLine" OverloadKey="::vl::stream::StringReader::lastCallIsReadLine" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="PrepareIfLastCallIsReadLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::PrepareIfLastCallIsReadLine" OverloadKey="::vl::stream::StringReader::PrepareIfLastCallIsReadLine()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StringReader" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::StringReader" OverloadKey="::vl::stream::StringReader::StringReader(&amp; const WString)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a text reader.&lt;/summary&gt;
  &lt;param name="_string"&gt;The string to read.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_string" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::StringReader::_string" OverloadKey="::vl::stream::StringReader::StringReader(&amp; const WString)::_string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsEnd" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::IsEnd" OverloadKey="::vl::stream::StringReader::IsEnd()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadChar" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::ReadChar" OverloadKey="::vl::stream::StringReader::ReadChar()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="wchar_t" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadString" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::ReadString" OverloadKey="::vl::stream::StringReader::ReadString(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::ReadString::length" OverloadKey="::vl::stream::StringReader::ReadString(vint)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::ReadLine" OverloadKey="::vl::stream::StringReader::ReadLine()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadToEnd" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StringReader::ReadToEnd" OverloadKey="::vl::stream::StringReader::ReadToEnd()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::stream::TextReader" Name="TextReader">
              <ReferencingOverloadKeys>
                <Key Value="::vl::stream::TextReader@s:vl.stream.TextReader" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>