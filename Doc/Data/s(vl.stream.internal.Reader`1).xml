<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.stream.internal.Reader`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::stream::internal::T" OverloadKey="::vl::stream::internal::Reader`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="Reader" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::Reader" OverloadKey="::vl::stream::internal::Reader`1" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::Reader::input" OverloadKey="::vl::stream::internal::Reader`1::input" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::stream" Name="stream">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream@ns:vl.stream" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::Reader::context" OverloadKey="::vl::stream::internal::Reader`1::context" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::stream::internal::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::stream::internal::Reader`1::T@s:vl.stream.internal.Reader`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="Reader" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::Reader::Reader" OverloadKey="::vl::stream::internal::Reader`1::Reader(&amp; stream::IStream)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_input" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::Reader::Reader::_input" OverloadKey="::vl::stream::internal::Reader`1::Reader(&amp; stream::IStream)::_input" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::stream" Name="stream">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::stream@ns:vl.stream" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>