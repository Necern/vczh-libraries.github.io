<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::reflection::description::EventInfoImpl">
    <ClassDecl Access="Public" Name="EventInfoImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl" OverloadKey="::vl::reflection::description::EventInfoImpl" ClassType="Class">
      <Children>
        <TypedefDecl Access="Protected" Name="EventHandlerList" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerList" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Protected" Name="EventHandlerListInternalPropertyName" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerListInternalPropertyName" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerListInternalPropertyName" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl Name="wchar_t" />
                  </Element>
                </DecorateTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <ClassDecl Access="Protected" Name="EventHandlerImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="ownerEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::ownerEvent" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::ownerEvent" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::EventInfoImpl" Name="EventInfoImpl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::EventInfoImpl@s:vl.reflection.description.EventInfoImpl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="ownerObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::ownerObject" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::ownerObject" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="handler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::handler" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::handler" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueFunctionProxy" Name="IValueFunctionProxy">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IValueFunctionProxy@s:vl.reflection.description.IValueFunctionProxy" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="descriptableTag" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::descriptableTag" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::descriptableTag" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="objectTag" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::objectTag" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::objectTag" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Object@s:vl.Object" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="attached" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::attached" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::attached" Static="False">
              <Type>
                <RefTypeDecl Name="bool" />
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="EventHandlerImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::EventHandlerImpl" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::EventHandlerImpl(* EventInfoImpl,* DescriptableObject,Ptr&lt;IValueFunctionProxy&gt;)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_ownerEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::EventHandlerImpl::_ownerEvent" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::EventHandlerImpl(* EventInfoImpl,* DescriptableObject,Ptr&lt;IValueFunctionProxy&gt;)::_ownerEvent" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::EventInfoImpl" Name="EventInfoImpl">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::EventInfoImpl@s:vl.reflection.description.EventInfoImpl" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_ownerObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::EventHandlerImpl::_ownerObject" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::EventHandlerImpl(* EventInfoImpl,* DescriptableObject,Ptr&lt;IValueFunctionProxy&gt;)::_ownerObject" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_handler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::EventHandlerImpl::_handler" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::EventHandlerImpl(* EventInfoImpl,* DescriptableObject,Ptr&lt;IValueFunctionProxy&gt;)::_handler" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueFunctionProxy" Name="IValueFunctionProxy">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IValueFunctionProxy@s:vl.reflection.description.IValueFunctionProxy" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="~EventHandlerImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::~EventHandlerImpl" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::~EventHandlerImpl()" Virtual="Normal" Function="Destructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetOwnerEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::GetOwnerEvent" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::GetOwnerEvent()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo" Name="IEventInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IEventInfo@s:vl.reflection.description.IEventInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetOwnerObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::GetOwnerObject" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::GetOwnerObject()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="IsAttached" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::IsAttached" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::IsAttached()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Detach" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::Detach" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::Detach()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Invoke" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::Invoke" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::Invoke(&amp; const Value,&amp; collections::Array&lt;Value&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::Invoke::thisObject" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::Invoke(&amp; const Value,&amp; collections::Array&lt;Value&gt;)::thisObject" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::Invoke::arguments" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::Invoke(&amp; const Value,&amp; collections::Array&lt;Value&gt;)::arguments" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetDescriptableTag" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::GetDescriptableTag" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::GetDescriptableTag()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="SetDescriptableTag" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::SetDescriptableTag" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::SetDescriptableTag(Ptr&lt;DescriptableObject&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_tag" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::SetDescriptableTag::_tag" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::SetDescriptableTag(Ptr&lt;DescriptableObject&gt;)::_tag" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetObjectTag" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::GetObjectTag" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::GetObjectTag()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Object@s:vl.Object" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="SetObjectTag" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::SetObjectTag" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::SetObjectTag(Ptr&lt;Object&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_tag" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::SetObjectTag::_tag" OverloadKey="::vl::reflection::description::EventInfoImpl::EventHandlerImpl::SetObjectTag(Ptr&lt;Object&gt;)::_tag" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Object@s:vl.Object" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <VarDecl Access="Protected" Name="ownerTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::ownerTypeDescriptor" OverloadKey="::vl::reflection::description::EventInfoImpl::ownerTypeDescriptor" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="observingProperties" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::observingProperties" OverloadKey="::vl::reflection::description::EventInfoImpl::observingProperties" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo" Name="IPropertyInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IPropertyInfo@s:vl.reflection.description.IPropertyInfo" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::name" OverloadKey="::vl::reflection::description::EventInfoImpl::name" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="handlerType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::handlerType" OverloadKey="::vl::reflection::description::EventInfoImpl::handlerType" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="AttachInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::AttachInternal" OverloadKey="::vl::reflection::description::EventInfoImpl::AttachInternal(* DescriptableObject,* IEventHandler)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::AttachInternal::thisObject" OverloadKey="::vl::reflection::description::EventInfoImpl::AttachInternal(* DescriptableObject,* IEventHandler)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="eventHandler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::AttachInternal::eventHandler" OverloadKey="::vl::reflection::description::EventInfoImpl::AttachInternal(* DescriptableObject,* IEventHandler)::eventHandler" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="DetachInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::DetachInternal" OverloadKey="::vl::reflection::description::EventInfoImpl::DetachInternal(* DescriptableObject,* IEventHandler)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::DetachInternal::thisObject" OverloadKey="::vl::reflection::description::EventInfoImpl::DetachInternal(* DescriptableObject,* IEventHandler)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="eventHandler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::DetachInternal::eventHandler" OverloadKey="::vl::reflection::description::EventInfoImpl::DetachInternal(* DescriptableObject,* IEventHandler)::eventHandler" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="InvokeInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::InvokeInternal" OverloadKey="::vl::reflection::description::EventInfoImpl::InvokeInternal(* DescriptableObject,&amp; collections::Array&lt;Value&gt;)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::InvokeInternal::thisObject" OverloadKey="::vl::reflection::description::EventInfoImpl::InvokeInternal(* DescriptableObject,&amp; collections::Array&lt;Value&gt;)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::InvokeInternal::arguments" OverloadKey="::vl::reflection::description::EventInfoImpl::InvokeInternal(* DescriptableObject,&amp; collections::Array&lt;Value&gt;)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="GetHandlerTypeInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::GetHandlerTypeInternal" OverloadKey="::vl::reflection::description::EventInfoImpl::GetHandlerTypeInternal()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="AddEventHandler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::AddEventHandler" OverloadKey="::vl::reflection::description::EventInfoImpl::AddEventHandler(* DescriptableObject,Ptr&lt;IEventHandler&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::AddEventHandler::thisObject" OverloadKey="::vl::reflection::description::EventInfoImpl::AddEventHandler(* DescriptableObject,Ptr&lt;IEventHandler&gt;)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="eventHandler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::AddEventHandler::eventHandler" OverloadKey="::vl::reflection::description::EventInfoImpl::AddEventHandler(* DescriptableObject,Ptr&lt;IEventHandler&gt;)::eventHandler" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="RemoveEventHandler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::RemoveEventHandler" OverloadKey="::vl::reflection::description::EventInfoImpl::RemoveEventHandler(* DescriptableObject,* IEventHandler)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::RemoveEventHandler::thisObject" OverloadKey="::vl::reflection::description::EventInfoImpl::RemoveEventHandler(* DescriptableObject,* IEventHandler)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="eventHandler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::RemoveEventHandler::eventHandler" OverloadKey="::vl::reflection::description::EventInfoImpl::RemoveEventHandler(* DescriptableObject,* IEventHandler)::eventHandler" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="EventInfoImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventInfoImpl" OverloadKey="::vl::reflection::description::EventInfoImpl::EventInfoImpl(* ITypeDescriptor,&amp; const WString)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_ownerTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventInfoImpl::_ownerTypeDescriptor" OverloadKey="::vl::reflection::description::EventInfoImpl::EventInfoImpl(* ITypeDescriptor,&amp; const WString)::_ownerTypeDescriptor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_name" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::EventInfoImpl::_name" OverloadKey="::vl::reflection::description::EventInfoImpl::EventInfoImpl(* ITypeDescriptor,&amp; const WString)::_name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~EventInfoImpl" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::~EventInfoImpl" OverloadKey="::vl::reflection::description::EventInfoImpl::~EventInfoImpl()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetOwnerTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::GetOwnerTypeDescriptor" OverloadKey="::vl::reflection::description::EventInfoImpl::GetOwnerTypeDescriptor()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetName" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::GetName" OverloadKey="::vl::reflection::description::EventInfoImpl::GetName()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetHandlerType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::GetHandlerType" OverloadKey="::vl::reflection::description::EventInfoImpl::GetHandlerType()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetObservingPropertyCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::GetObservingPropertyCount" OverloadKey="::vl::reflection::description::EventInfoImpl::GetObservingPropertyCount()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetObservingProperty" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::GetObservingProperty" OverloadKey="::vl::reflection::description::EventInfoImpl::GetObservingProperty(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo" Name="IPropertyInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IPropertyInfo@s:vl.reflection.description.IPropertyInfo" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::GetObservingProperty::index" OverloadKey="::vl::reflection::description::EventInfoImpl::GetObservingProperty(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Attach" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::Attach" OverloadKey="::vl::reflection::description::EventInfoImpl::Attach(&amp; const Value,Ptr&lt;IValueFunctionProxy&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::Attach::thisObject" OverloadKey="::vl::reflection::description::EventInfoImpl::Attach(&amp; const Value,Ptr&lt;IValueFunctionProxy&gt;)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="handler" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::Attach::handler" OverloadKey="::vl::reflection::description::EventInfoImpl::Attach(&amp; const Value,Ptr&lt;IValueFunctionProxy&gt;)::handler" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueFunctionProxy" Name="IValueFunctionProxy">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IValueFunctionProxy@s:vl.reflection.description.IValueFunctionProxy" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Invoke" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::Invoke" OverloadKey="::vl::reflection::description::EventInfoImpl::Invoke(&amp; const Value,&amp; collections::Array&lt;Value&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::Invoke::thisObject" OverloadKey="::vl::reflection::description::EventInfoImpl::Invoke(&amp; const Value,&amp; collections::Array&lt;Value&gt;)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::EventInfoImpl::Invoke::arguments" OverloadKey="::vl::reflection::description::EventInfoImpl::Invoke(&amp; const Value,&amp; collections::Array&lt;Value&gt;)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo" Name="IEventInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::IEventInfo@s:vl.reflection.description.IEventInfo" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>