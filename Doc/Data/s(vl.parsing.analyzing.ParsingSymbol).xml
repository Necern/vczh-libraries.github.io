<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.parsing.analyzing.ParsingSymbol">
    <ClassDecl Access="Public" Name="ParsingSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol" ClassType="Class">
      <Children>
        <TypedefDecl Access="Private" Name="ParsingSymbolMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbolMap" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbolMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ParsingSymbolList" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbolList" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbolList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <EnumDecl Access="Public" Name="SymbolType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType" EnumClass="False">
          <Children>
            <EnumItemDecl Access="Public" Name="Global" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::Global" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::Global" />
            <EnumItemDecl Access="Public" Name="EnumType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::EnumType" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::EnumType" />
            <EnumItemDecl Access="Public" Name="ClassType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::ClassType" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::ClassType" />
            <EnumItemDecl Access="Public" Name="ArrayType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::ArrayType" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::ArrayType" />
            <EnumItemDecl Access="Public" Name="TokenType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::TokenType" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::TokenType" />
            <EnumItemDecl Access="Public" Name="EnumItem" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::EnumItem" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::EnumItem" />
            <EnumItemDecl Access="Public" Name="ClassField" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::ClassField" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::ClassField" />
            <EnumItemDecl Access="Public" Name="TokenDef" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::TokenDef" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::TokenDef" />
            <EnumItemDecl Access="Public" Name="RuleDef" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::RuleDef" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType::RuleDef" />
          </Children>
        </EnumDecl>
        <VarDecl Access="Protected" Name="manager" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::manager" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::manager" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager" Name="ParsingSymbolManager">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::ParsingSymbolManager@s:vl.parsing.analyzing.ParsingSymbolManager" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::type" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::type" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType" Name="SymbolType">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::ParsingSymbol::SymbolType@s:vl.parsing.analyzing.ParsingSymbol" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::name" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::name" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="descriptorSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::descriptorSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::descriptorSymbol" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="descriptorString" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::descriptorString" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::descriptorString" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="parentSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::parentSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::parentSymbol" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="arrayTypeSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::arrayTypeSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::arrayTypeSymbol" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="subSymbolList" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::subSymbolList" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::subSymbolList" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbolList" Name="ParsingSymbolList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbolList@s:vl.parsing.analyzing.ParsingSymbol" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="subSymbolMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::subSymbolMap" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::subSymbolMap" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbolMap" Name="ParsingSymbolMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbolMap@s:vl.parsing.analyzing.ParsingSymbol" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="AddSubSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::AddSubSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::AddSubSymbol(* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="subSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::AddSubSymbol::subSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::AddSubSymbol(* ParsingSymbol)::subSymbol" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="ParsingSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol(* ParsingSymbolManager,SymbolType,&amp; const WString,* ParsingSymbol,&amp; const WString)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_manager" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol::_manager" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol(* ParsingSymbolManager,SymbolType,&amp; const WString,* ParsingSymbol,&amp; const WString)::_manager" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager" Name="ParsingSymbolManager">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbolManager@s:vl.parsing.analyzing.ParsingSymbolManager" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol::_type" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol(* ParsingSymbolManager,SymbolType,&amp; const WString,* ParsingSymbol,&amp; const WString)::_type" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType" Name="SymbolType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol::SymbolType@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol::_name" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol(* ParsingSymbolManager,SymbolType,&amp; const WString,* ParsingSymbol,&amp; const WString)::_name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_descriptorSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol::_descriptorSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol(* ParsingSymbolManager,SymbolType,&amp; const WString,* ParsingSymbol,&amp; const WString)::_descriptorSymbol" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_descriptorString" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol::_descriptorString" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::ParsingSymbol(* ParsingSymbolManager,SymbolType,&amp; const WString,* ParsingSymbol,&amp; const WString)::_descriptorString" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~ParsingSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::~ParsingSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::~ParsingSymbol()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetManager" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetManager()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager" Name="ParsingSymbolManager">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbolManager@s:vl.parsing.analyzing.ParsingSymbolManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetType" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetType()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol::SymbolType" Name="SymbolType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::ParsingSymbol::SymbolType@s:vl.parsing.analyzing.ParsingSymbol" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetName" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetName" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetName()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetSubSymbolCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbolCount" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbolCount()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetSubSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbol(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbol::index" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbol(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetSubSymbolByName" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbolByName" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbolByName(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbolByName::name" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetSubSymbolByName(&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetDescriptorSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetDescriptorSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetDescriptorSymbol()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetDescriptorString" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetDescriptorString" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetDescriptorString()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetParentSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::GetParentSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::GetParentSymbol()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::IsType" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::IsType()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SearchClassSubSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SearchClassSubSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SearchClassSubSymbol(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SearchClassSubSymbol::name" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SearchClassSubSymbol(&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SearchCommonBaseClass" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SearchCommonBaseClass" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SearchCommonBaseClass(* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="classType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbol::SearchCommonBaseClass::classType" OverloadKey="::vl::parsing::analyzing::ParsingSymbol::SearchCommonBaseClass(* ParsingSymbol)::classType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>