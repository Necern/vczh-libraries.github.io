<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.regex_internal.Transition">
    <ClassDecl Access="Public" Name="Transition" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition" OverloadKey="::vl::regex_internal::Transition" ClassType="Class">
      <Children>
        <EnumDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type" OverloadKey="::vl::regex_internal::Transition::Type" EnumClass="False">
          <Children>
            <EnumItemDecl Access="Public" Name="Chars" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::Chars" OverloadKey="::vl::regex_internal::Transition::Type::Chars" />
            <EnumItemDecl Access="Public" Name="Epsilon" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::Epsilon" OverloadKey="::vl::regex_internal::Transition::Type::Epsilon" />
            <EnumItemDecl Access="Public" Name="BeginString" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::BeginString" OverloadKey="::vl::regex_internal::Transition::Type::BeginString" />
            <EnumItemDecl Access="Public" Name="EndString" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::EndString" OverloadKey="::vl::regex_internal::Transition::Type::EndString" />
            <EnumItemDecl Access="Public" Name="Nop" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::Nop" OverloadKey="::vl::regex_internal::Transition::Type::Nop" />
            <EnumItemDecl Access="Public" Name="Capture" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::Capture" OverloadKey="::vl::regex_internal::Transition::Type::Capture" />
            <EnumItemDecl Access="Public" Name="Match" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::Match" OverloadKey="::vl::regex_internal::Transition::Type::Match" />
            <EnumItemDecl Access="Public" Name="Positive" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::Positive" OverloadKey="::vl::regex_internal::Transition::Type::Positive" />
            <EnumItemDecl Access="Public" Name="Negative" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::Negative" OverloadKey="::vl::regex_internal::Transition::Type::Negative" />
            <EnumItemDecl Access="Public" Name="NegativeFail" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::NegativeFail" OverloadKey="::vl::regex_internal::Transition::Type::NegativeFail" />
            <EnumItemDecl Access="Public" Name="End" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::Type::End" OverloadKey="::vl::regex_internal::Transition::Type::End" />
          </Children>
        </EnumDecl>
        <VarDecl Access="Public" Name="source" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::source" OverloadKey="::vl::regex_internal::Transition::source" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::regex_internal::State" Name="State">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::regex_internal::State@s:vl.regex_internal.State" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="target" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::target" OverloadKey="::vl::regex_internal::Transition::target" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::regex_internal::State" Name="State">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::regex_internal::State@s:vl.regex_internal.State" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="range" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::range" OverloadKey="::vl::regex_internal::Transition::range" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::regex_internal::CharRange" Name="CharRange">
              <ReferencingOverloadKeys>
                <Key Value="::vl::regex_internal::CharRange@s:vl.regex_internal.CharRange" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::type" OverloadKey="::vl::regex_internal::Transition::type" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::regex_internal::Transition::Type" Name="Type">
              <ReferencingOverloadKeys>
                <Key Value="::vl::regex_internal::Transition::Type@s:vl.regex_internal.Transition" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="capture" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::capture" OverloadKey="::vl::regex_internal::Transition::capture" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::Transition::index" OverloadKey="::vl::regex_internal::Transition::index" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>