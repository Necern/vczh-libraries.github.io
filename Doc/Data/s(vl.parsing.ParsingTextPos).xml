<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::parsing::ParsingTextPos">
    <ClassDecl Access="Public" Name="ParsingTextPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos" OverloadKey="::vl::parsing::ParsingTextPos" ClassType="Struct">
      <Document>&lt;Document&gt;
  &lt;summary&gt;A type representing text position.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="UnknownValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::UnknownValue" OverloadKey="::vl::parsing::ParsingTextPos::UnknownValue" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::index" OverloadKey="::vl::parsing::ParsingTextPos::index" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Character index, begins at 0.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="row" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::row" OverloadKey="::vl::parsing::ParsingTextPos::row" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Row number, begins at 0.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="column" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::column" OverloadKey="::vl::parsing::ParsingTextPos::column" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Column number, begins at 0.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="ParsingTextPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ParsingTextPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos(vint)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_index" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos::_index" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos(vint)::_index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ParsingTextPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos(vint,vint)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_row" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos::_row" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos(vint,vint)::_row" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_column" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos::_column" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos(vint,vint)::_column" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ParsingTextPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos(vint,vint,vint)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_index" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos::_index" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos(vint,vint,vint)::_index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_row" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos::_row" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos(vint,vint,vint)::_row" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_column" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::ParsingTextPos::_column" OverloadKey="::vl::parsing::ParsingTextPos::ParsingTextPos(vint,vint,vint)::_column" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsInvalid" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::IsInvalid" OverloadKey="::vl::parsing::ParsingTextPos::IsInvalid()const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test if this position a valid position.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this position is a valid position.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Compare" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::Compare" OverloadKey="::vl::parsing::ParsingTextPos::Compare(&amp; const ParsingTextPos,&amp; const ParsingTextPos)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::Compare::a" OverloadKey="::vl::parsing::ParsingTextPos::Compare(&amp; const ParsingTextPos,&amp; const ParsingTextPos)::a" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextPos" Name="ParsingTextPos">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTextPos@s:vl.parsing.ParsingTextPos" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::Compare::b" OverloadKey="::vl::parsing::ParsingTextPos::Compare(&amp; const ParsingTextPos,&amp; const ParsingTextPos)::b" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextPos" Name="ParsingTextPos">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTextPos@s:vl.parsing.ParsingTextPos" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator ==" OverloadKey="::vl::parsing::ParsingTextPos::operator ==(&amp; const ParsingTextPos)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator ==::pos" OverloadKey="::vl::parsing::ParsingTextPos::operator ==(&amp; const ParsingTextPos)const::pos" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextPos" Name="ParsingTextPos">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTextPos@s:vl.parsing.ParsingTextPos" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator !=" OverloadKey="::vl::parsing::ParsingTextPos::operator !=(&amp; const ParsingTextPos)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator !=::pos" OverloadKey="::vl::parsing::ParsingTextPos::operator !=(&amp; const ParsingTextPos)const::pos" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextPos" Name="ParsingTextPos">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTextPos@s:vl.parsing.ParsingTextPos" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &lt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator &lt;" OverloadKey="::vl::parsing::ParsingTextPos::operator &lt;(&amp; const ParsingTextPos)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator &lt;::pos" OverloadKey="::vl::parsing::ParsingTextPos::operator &lt;(&amp; const ParsingTextPos)const::pos" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextPos" Name="ParsingTextPos">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTextPos@s:vl.parsing.ParsingTextPos" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &lt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator &lt;=" OverloadKey="::vl::parsing::ParsingTextPos::operator &lt;=(&amp; const ParsingTextPos)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator &lt;=::pos" OverloadKey="::vl::parsing::ParsingTextPos::operator &lt;=(&amp; const ParsingTextPos)const::pos" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextPos" Name="ParsingTextPos">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTextPos@s:vl.parsing.ParsingTextPos" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &gt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator &gt;" OverloadKey="::vl::parsing::ParsingTextPos::operator &gt;(&amp; const ParsingTextPos)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator &gt;::pos" OverloadKey="::vl::parsing::ParsingTextPos::operator &gt;(&amp; const ParsingTextPos)const::pos" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextPos" Name="ParsingTextPos">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTextPos@s:vl.parsing.ParsingTextPos" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &gt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator &gt;=" OverloadKey="::vl::parsing::ParsingTextPos::operator &gt;=(&amp; const ParsingTextPos)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="pos" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTextPos::operator &gt;=::pos" OverloadKey="::vl::parsing::ParsingTextPos::operator &gt;=(&amp; const ParsingTextPos)const::pos" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextPos" Name="ParsingTextPos">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTextPos@s:vl.parsing.ParsingTextPos" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>