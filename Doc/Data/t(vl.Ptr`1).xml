<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::Ptr`1">
    <SymbolTree NamespaceUrlName="vl">
      <SymbolParentMapping>
        <Map From="::vl::Ptr`1::Ptr`1(&amp; const Ptr&lt;C&gt;)::C" To="::vl::Ptr`1::Ptr`1(&amp; const Ptr&lt;C&gt;)" />
        <Map From="::vl::Ptr`1::Cast`1()const::C" To="::vl::Ptr`1::Cast`1()const" />
        <Map From="::vl::Ptr`1::operator =`1(&amp; const Ptr&lt;C&gt;)::C" To="::vl::Ptr`1::operator =`1(&amp; const Ptr&lt;C&gt;)" />
        <Map From="::vl::Ptr`1::T" To="::vl::Ptr`1" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1" DisplayName="Ptr class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Destructor" DisplayName="Destructor typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::counter" DisplayName="counter field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::reference" DisplayName="reference field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::originalReference" DisplayName="originalReference field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::originalDestructor" DisplayName="originalDestructor field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Inc()" DisplayName="Inc method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Dec()" DisplayName="Dec method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Counter()const" DisplayName="Counter method" Doc="false" />
        <Overloads DisplayName="Ptr constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Ptr(* volatile vint,* T,* void,Destructor)" DisplayName="Ptr constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Ptr()" DisplayName="Ptr constructor" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Ptr(* T)" DisplayName="Ptr constructor" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Ptr(&amp; const Ptr&lt;T&gt;)" DisplayName="Ptr constructor" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Ptr(&amp;&amp; Ptr&lt;T&gt;)" DisplayName="Ptr constructor" Doc="true" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Ptr`1(&amp; const Ptr&lt;C&gt;)" DisplayName="Ptr function" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::~Ptr()" DisplayName="~Ptr destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Cast`1()const" DisplayName="Cast function" Doc="true" />
        <Overloads DisplayName="operator = method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator =(* T)" DisplayName="operator = method" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator =(&amp; const Ptr&lt;T&gt;)" DisplayName="operator = method" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator =(&amp;&amp; Ptr&lt;T&gt;)" DisplayName="operator = method" Doc="true" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator =`1(&amp; const Ptr&lt;C&gt;)" DisplayName="operator = function" Doc="true" />
        <Overloads DisplayName="operator == method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator ==(* const T)const" DisplayName="operator == method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator ==(&amp; const Ptr&lt;T&gt;)const" DisplayName="operator == method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator != method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator !=(* const T)const" DisplayName="operator != method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator !=(&amp; const Ptr&lt;T&gt;)const" DisplayName="operator != method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &gt; method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator &gt;(* const T)const" DisplayName="operator &gt; method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator &gt;(&amp; const Ptr&lt;T&gt;)const" DisplayName="operator &gt; method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &gt;= method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator &gt;=(* const T)const" DisplayName="operator &gt;= method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator &gt;=(&amp; const Ptr&lt;T&gt;)const" DisplayName="operator &gt;= method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &lt; method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator &lt;(* const T)const" DisplayName="operator &lt; method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator &lt;(&amp; const Ptr&lt;T&gt;)const" DisplayName="operator &lt; method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &lt;= method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator &lt;=(* const T)const" DisplayName="operator &lt;= method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator &lt;=(&amp; const Ptr&lt;T&gt;)const" DisplayName="operator &lt;= method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator()const" DisplayName="operator method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::Obj()const" DisplayName="Obj method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Ptr`1::operator -&gt;()const" DisplayName="operator -&gt; method" Doc="true" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>