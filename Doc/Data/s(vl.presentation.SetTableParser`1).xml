<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::presentation::SetTableParser`1(&amp; const WString,&amp; const WString,* function (&amp; const WString, Ptr&lt;Table&gt;, &amp; collections::List&lt;Ptr&lt;parsing::ParsingError&gt;&gt;, vint) : Ptr&lt;T&gt;)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::presentation::T" OverloadKey="::vl::presentation::SetTableParser`1(&amp; const WString,&amp; const WString,* function (&amp; const WString, Ptr&lt;Table&gt;, &amp; collections::List&lt;Ptr&lt;parsing::ParsingError&gt;&gt;, vint) : Ptr&lt;T&gt;)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="SetTableParser" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::SetTableParser" OverloadKey="::vl::presentation::SetTableParser`1(&amp; const WString,&amp; const WString,* function (&amp; const WString, Ptr&lt;Table&gt;, &amp; collections::List&lt;Ptr&lt;parsing::ParsingError&gt;&gt;, vint) : Ptr&lt;T&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <ClassMemberTypeDecl>
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                  <ClassType>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::IGuiParserManager" Name="IGuiParserManager">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::IGuiParserManager@s:vl.presentation.IGuiParserManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ClassType>
                </ClassMemberTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tableName" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::SetTableParser::tableName" OverloadKey="::vl::presentation::SetTableParser`1(&amp; const WString,&amp; const WString,* function (&amp; const WString, Ptr&lt;Table&gt;, &amp; collections::List&lt;Ptr&lt;parsing::ParsingError&gt;&gt;, vint) : Ptr&lt;T&gt;)::tableName" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="parserName" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::SetTableParser::parserName" OverloadKey="::vl::presentation::SetTableParser`1(&amp; const WString,&amp; const WString,* function (&amp; const WString, Ptr&lt;Table&gt;, &amp; collections::List&lt;Ptr&lt;parsing::ParsingError&gt;&gt;, vint) : Ptr&lt;T&gt;)::parserName" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="function" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::SetTableParser::function" OverloadKey="::vl::presentation::SetTableParser`1(&amp; const WString,&amp; const WString,* function (&amp; const WString, Ptr&lt;Table&gt;, &amp; collections::List&lt;Ptr&lt;parsing::ParsingError&gt;&gt;, vint) : Ptr&lt;T&gt;)::function" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <FunctionTypeDecl CallingConvention="Default" Const="False">
                          <ReturnType>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::SetTableParser`1(&amp; const WString,&amp; const WString,* function (&amp; const WString, Ptr&lt;Table&gt;, &amp; collections::List&lt;Ptr&lt;parsing::ParsingError&gt;&gt;, vint) : Ptr&lt;T&gt;)::T@s:vl.presentation.SetTableParser`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </ReturnType>
                          <Parameters>
                            <VarDecl Access="Public" Static="False">
                              <Type>
                                <DecorateTypeDecl Decoration="LeftRef">
                                  <Element>
                                    <DecorateTypeDecl Decoration="Const">
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::WString@s:vl.WString" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                    </DecorateTypeDecl>
                                  </Element>
                                </DecorateTypeDecl>
                              </Type>
                            </VarDecl>
                            <VarDecl Access="Public" Static="False">
                              <Type>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl Name="Table">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::presentation::IGuiParserManager::Table@s:vl.presentation.IGuiParserManager" />
                                        <Key Value="::vl::presentation::GuiStrongTypedTableParser`1::Table@s:vl.presentation.GuiStrongTypedTableParser`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Type>
                            </VarDecl>
                            <VarDecl Access="Public" Static="False">
                              <Type>
                                <DecorateTypeDecl Decoration="LeftRef">
                                  <Element>
                                    <GenericTypeDecl>
                                      <Element>
                                        <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                                          </ReferencingOverloadKeys>
                                          <Parent>
                                            <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                              <ReferencingOverloadKeys>
                                                <Key Value="::vl::collections@ns:vl.collections" />
                                              </ReferencingOverloadKeys>
                                            </RefTypeDecl>
                                          </Parent>
                                        </SubTypeDecl>
                                      </Element>
                                      <TypeArguments>
                                        <GenericTypeDecl>
                                          <Element>
                                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                              <ReferencingOverloadKeys>
                                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                              </ReferencingOverloadKeys>
                                            </RefTypeDecl>
                                          </Element>
                                          <TypeArguments>
                                            <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                                              <ReferencingOverloadKeys>
                                                <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                                              </ReferencingOverloadKeys>
                                              <Parent>
                                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                                  <ReferencingOverloadKeys>
                                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                                  </ReferencingOverloadKeys>
                                                </RefTypeDecl>
                                              </Parent>
                                            </SubTypeDecl>
                                          </TypeArguments>
                                        </GenericTypeDecl>
                                      </TypeArguments>
                                    </GenericTypeDecl>
                                  </Element>
                                </DecorateTypeDecl>
                              </Type>
                            </VarDecl>
                            <VarDecl Access="Public" Static="False">
                              <Type>
                                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::vint@s:vl.vint" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Type>
                            </VarDecl>
                          </Parameters>
                        </FunctionTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>