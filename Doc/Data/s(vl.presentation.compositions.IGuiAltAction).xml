<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.compositions.IGuiAltAction">
    <ClassDecl Access="Public" Name="IGuiAltAction" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction" OverloadKey="::vl::presentation::compositions::IGuiAltAction" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;IGuiAltAction is the handler when an alt-combined shortcut key is activated.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="Identifier" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction::Identifier" OverloadKey="::vl::presentation::compositions::IGuiAltAction::Identifier" Static="True">
          <Document>&lt;Document&gt;
  &lt;summary&gt;The identifier for this service.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl Name="wchar_t" />
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="IsLegalAlt" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction::IsLegalAlt" OverloadKey="::vl::presentation::compositions::IGuiAltAction::IsLegalAlt(&amp; const WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="alt" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction::IsLegalAlt::alt" OverloadKey="::vl::presentation::compositions::IGuiAltAction::IsLegalAlt(&amp; const WString)::alt" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAlt" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction::GetAlt" OverloadKey="::vl::presentation::compositions::IGuiAltAction::GetAlt()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsAltEnabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction::IsAltEnabled" OverloadKey="::vl::presentation::compositions::IGuiAltAction::IsAltEnabled()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsAltAvailable" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction::IsAltAvailable" OverloadKey="::vl::presentation::compositions::IGuiAltAction::IsAltAvailable()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAltComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction::GetAltComposition" OverloadKey="::vl::presentation::compositions::IGuiAltAction::GetAltComposition()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetActivatingAltHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction::GetActivatingAltHost" OverloadKey="::vl::presentation::compositions::IGuiAltAction::GetActivatingAltHost()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiAltActionHost" Name="IGuiAltActionHost">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::IGuiAltActionHost@s:vl.presentation.compositions.IGuiAltActionHost" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="OnActiveAlt" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::IGuiAltAction::OnActiveAlt" OverloadKey="::vl::presentation::compositions::IGuiAltAction::OnActiveAlt()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>