<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::stream::LzwDecoder">
    <ClassDecl Access="Public" Name="LzwDecoder" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder" OverloadKey="::vl::stream::LzwDecoder" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;An decoder to decompress using Lzw algorithm.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="stream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::stream" OverloadKey="::vl::stream::LzwDecoder::stream" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="dictionary" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::dictionary" OverloadKey="::vl::stream::LzwDecoder::dictionary" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::stream::lzw::Code" Name="Code">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::stream::lzw::Code@s:vl.stream.lzw.Code" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::lzw" Name="lzw">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::lzw@ns:vl.stream.lzw" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="lastCode" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::lastCode" OverloadKey="::vl::stream::LzwDecoder::lastCode" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::stream::lzw::Code" Name="Code">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::stream::lzw::Code@s:vl.stream.lzw.Code" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::stream::lzw" Name="lzw">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::stream::lzw@ns:vl.stream.lzw" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="inputBuffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::inputBuffer" OverloadKey="::vl::stream::LzwDecoder::inputBuffer" Static="False">
          <Type>
            <ArrayTypeDecl Expression="lzw : : BufferSize">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vuint8_t" Name="vuint8_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint8_t@s:vl.vuint8_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </ArrayTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="inputBufferSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::inputBufferSize" OverloadKey="::vl::stream::LzwDecoder::inputBufferSize" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="inputBufferUsedBits" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::inputBufferUsedBits" OverloadKey="::vl::stream::LzwDecoder::inputBufferUsedBits" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="outputBuffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::outputBuffer" OverloadKey="::vl::stream::LzwDecoder::outputBuffer" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::vuint8_t" Name="vuint8_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint8_t@s:vl.vuint8_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="outputBufferSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::outputBufferSize" OverloadKey="::vl::stream::LzwDecoder::outputBufferSize" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="outputBufferUsedBytes" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::outputBufferUsedBytes" OverloadKey="::vl::stream::LzwDecoder::outputBufferUsedBytes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="ReadNumber" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::ReadNumber" OverloadKey="::vl::stream::LzwDecoder::ReadNumber(&amp; vint,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="number" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::ReadNumber::number" OverloadKey="::vl::stream::LzwDecoder::ReadNumber(&amp; vint,vint)::number" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="bitSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::ReadNumber::bitSize" OverloadKey="::vl::stream::LzwDecoder::ReadNumber(&amp; vint,vint)::bitSize" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="PrepareOutputBuffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::PrepareOutputBuffer" OverloadKey="::vl::stream::LzwDecoder::PrepareOutputBuffer(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::PrepareOutputBuffer::size" OverloadKey="::vl::stream::LzwDecoder::PrepareOutputBuffer(vint)::size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="ExpandCodeToOutputBuffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::ExpandCodeToOutputBuffer" OverloadKey="::vl::stream::LzwDecoder::ExpandCodeToOutputBuffer(* lzw::Code)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="code" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::ExpandCodeToOutputBuffer::code" OverloadKey="::vl::stream::LzwDecoder::ExpandCodeToOutputBuffer(* lzw::Code)::code" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::stream::lzw::Code" Name="Code">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::lzw::Code@s:vl.stream.lzw.Code" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::stream::lzw" Name="lzw">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::stream::lzw@ns:vl.stream.lzw" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="LzwDecoder" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::LzwDecoder" OverloadKey="::vl::stream::LzwDecoder::LzwDecoder()" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create an decoder.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="LzwDecoder" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::LzwDecoder" OverloadKey="::vl::stream::LzwDecoder::LzwDecoder(&amp; array[256] bool)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create an decoder and tell it which byte will never appear in the data before compression.&lt;/summary&gt;
  &lt;param name="existingBytes"&gt;An array to tell the encoder which byte will never appear in the data before compression.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="existingBytes" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::LzwDecoder::existingBytes" OverloadKey="::vl::stream::LzwDecoder::LzwDecoder(&amp; array[256] bool)::existingBytes" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <ArrayTypeDecl Expression="256">
                          <Element>
                            <RefTypeDecl Name="bool" />
                          </Element>
                        </ArrayTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~LzwDecoder" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::~LzwDecoder" OverloadKey="::vl::stream::LzwDecoder::~LzwDecoder()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Setup" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::Setup" OverloadKey="::vl::stream::LzwDecoder::Setup(* IStream)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_stream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::Setup::_stream" OverloadKey="::vl::stream::LzwDecoder::Setup(* IStream)::_stream" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Close" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::Close" OverloadKey="::vl::stream::LzwDecoder::Close()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Read" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::Read" OverloadKey="::vl::stream::LzwDecoder::Read(* void,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::Read::_buffer" OverloadKey="::vl::stream::LzwDecoder::Read(* void,vint)::_buffer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="void" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::LzwDecoder::Read::_size" OverloadKey="::vl::stream::LzwDecoder::Read(* void,vint)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::stream::LzwBase" Name="LzwBase">
              <ReferencingOverloadKeys>
                <Key Value="::vl::stream::LzwBase@s:vl.stream.LzwBase" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::stream::IDecoder" Name="IDecoder">
              <ReferencingOverloadKeys>
                <Key Value="::vl::stream::IDecoder@s:vl.stream.IDecoder" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>