<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.regex_internal.NfaToDfa(Automaton.Ref,&amp; collections.Group{^ State, ^ State})">
    <FuncDecl Access="Public" Name="NfaToDfa" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::NfaToDfa" OverloadKey="::vl::regex_internal::NfaToDfa(Automaton::Ref,&amp; collections::Group&lt;* State, * State&gt;)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <SubTypeDecl ReferencingNameKey="::vl::regex_internal::Automaton::Ref" Name="Ref">
              <ReferencingOverloadKeys>
                <Key Value="::vl::regex_internal::Automaton::Ref@s:vl.regex_internal.Automaton" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::regex_internal::Automaton" Name="Automaton">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::regex_internal::Automaton@s:vl.regex_internal.Automaton" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="source" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::NfaToDfa::source" OverloadKey="::vl::regex_internal::NfaToDfa(Automaton::Ref,&amp; collections::Group&lt;* State, * State&gt;)::source" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::regex_internal::Automaton::Ref" Name="Ref">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::regex_internal::Automaton::Ref@s:vl.regex_internal.Automaton" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::regex_internal::Automaton" Name="Automaton">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex_internal::Automaton@s:vl.regex_internal.Automaton" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="dfaStateMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::NfaToDfa::dfaStateMap" OverloadKey="::vl::regex_internal::NfaToDfa(Automaton::Ref,&amp; collections::Group&lt;* State, * State&gt;)::dfaStateMap" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <GenericTypeDecl>
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::collections::Group" Name="Group">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Group`4@s:vl.collections.Group`4" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections@ns:vl.collections" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                      <TypeArguments>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::regex_internal::State" Name="State">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex_internal::State@s:vl.regex_internal.State" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::regex_internal::State" Name="State">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex_internal::State@s:vl.regex_internal.State" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>