<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;" DisplayName="ValueAccessor struct" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;::BoxValue(&amp; const Value,* ITypeDescriptor)" DisplayName="BoxValue method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)" DisplayName="UnboxValue method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;" DisplayName="ValueAccessor struct" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;::BoxValue(&amp; const VoidValue,* ITypeDescriptor)" DisplayName="BoxValue method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)" DisplayName="UnboxValue method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>