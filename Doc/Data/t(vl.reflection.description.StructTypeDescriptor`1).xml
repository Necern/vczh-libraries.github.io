<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::reflection::description::StructTypeDescriptor`1">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping>
        <Map From="::vl::reflection::description::StructTypeDescriptor`1::TSerializer" To="::vl::reflection::description::StructTypeDescriptor`1" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::StructTypeDescriptor`1" DisplayName="StructTypeDescriptor class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::StructTypeDescriptor`1::typedSerializer" DisplayName="typedSerializer field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::StructTypeDescriptor`1::StructTypeDescriptor()" DisplayName="StructTypeDescriptor constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::StructTypeDescriptor`1::GetPropertyCount()" DisplayName="GetPropertyCount method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::StructTypeDescriptor`1::GetProperty(vint)" DisplayName="GetProperty method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::StructTypeDescriptor`1::IsPropertyExists(&amp; const WString,bool)" DisplayName="IsPropertyExists method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::StructTypeDescriptor`1::GetPropertyByName(&amp; const WString,bool)" DisplayName="GetPropertyByName method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>