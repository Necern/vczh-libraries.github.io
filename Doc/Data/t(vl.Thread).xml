<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::Thread">
    <SymbolTree NamespaceUrlName="vl">
      <SymbolParentMapping>
        <Map From="::vl::Thread::ThreadState::NotStarted" To="::vl::Thread::ThreadState" />
        <Map From="::vl::Thread::ThreadState::Running" To="::vl::Thread::ThreadState" />
        <Map From="::vl::Thread::ThreadState::Stopped" To="::vl::Thread::ThreadState" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread" DisplayName="Thread class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::ThreadState" DisplayName="ThreadState enum" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::ThreadProcedure" DisplayName="ThreadProcedure typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::internalData" DisplayName="internalData field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::threadState" DisplayName="threadState field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::Run()" DisplayName="Run method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::Thread()" DisplayName="Thread constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::~Thread()" DisplayName="~Thread destructor" Doc="false" />
        <Overloads DisplayName="CreateAndStart method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::CreateAndStart(ThreadProcedure,* void,bool)" DisplayName="CreateAndStart method" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::CreateAndStart(&amp; const Func&lt;function () : void&gt;,bool)" DisplayName="CreateAndStart method" Doc="true" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::Sleep(vint)" DisplayName="Sleep method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::GetCPUCount()" DisplayName="GetCPUCount method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::GetCurrentThreadId()" DisplayName="GetCurrentThreadId method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::Start()" DisplayName="Start method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::Stop()" DisplayName="Stop method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::GetState()" DisplayName="GetState method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Thread::SetCPU(vint)" DisplayName="SetCPU method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>