<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.collections.IntersectExceptEnumerator`2">
    <SymbolTree NamespaceUrlName="vl.collections">
      <SymbolParentMapping>
        <Map From="::vl::collections::IntersectExceptEnumerator`2::T" To="::vl::collections::IntersectExceptEnumerator`2" />
        <Map From="::vl::collections::IntersectExceptEnumerator`2::Intersect" To="::vl::collections::IntersectExceptEnumerator`2" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2" DisplayName="IntersectExceptEnumerator class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::enumerator" DisplayName="enumerator field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::reference" DisplayName="reference field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::index" DisplayName="index field" Doc="false" />
        <Overloads DisplayName="IntersectExceptEnumerator constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::IntersectExceptEnumerator(* IEnumerator&lt;T&gt;,&amp; const IEnumerable&lt;T&gt;)" DisplayName="IntersectExceptEnumerator constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::IntersectExceptEnumerator(&amp; const IntersectExceptEnumerator)" DisplayName="IntersectExceptEnumerator constructor" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::~IntersectExceptEnumerator()" DisplayName="~IntersectExceptEnumerator destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::Clone()const" DisplayName="Clone method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::Current()const" DisplayName="Current method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::Index()const" DisplayName="Index method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::Next()" DisplayName="Next method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::IntersectExceptEnumerator`2::Reset()" DisplayName="Reset method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>