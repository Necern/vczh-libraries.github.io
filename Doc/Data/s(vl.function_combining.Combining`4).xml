<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.function_combining.Combining`4{function (... TArgs) # R1,function (... TArgs) # R2,function (R1, R2) # R}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="R1" Tags="x86, Windows" NameKey="::vl::function_combining::R1" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R1" />
        <TypeParameterDecl Access="Public" Name="R2" Tags="x86, Windows" NameKey="::vl::function_combining::R2" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R2" />
        <TypeParameterDecl Access="Public" Name="R" Tags="x86, Windows" NameKey="::vl::function_combining::R" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R" />
        <TypeParameterDecl Access="Public" Name="TArgs" Tags="x86, Windows" NameKey="::vl::function_combining::TArgs" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs" />
      </TypeParameters>
      <Specialization>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::function_combining::R1" Name="R1">
              <ReferencingOverloadKeys>
                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R1@s:vl.function_combining.Combining`4" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Static="False">
              <Type>
                <VariadicArgumentTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </VariadicArgumentTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::function_combining::R2" Name="R2">
              <ReferencingOverloadKeys>
                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R2@s:vl.function_combining.Combining`4" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Static="False">
              <Type>
                <VariadicArgumentTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </VariadicArgumentTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::function_combining::R" Name="R">
              <ReferencingOverloadKeys>
                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R@s:vl.function_combining.Combining`4" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::function_combining::R1" Name="R1">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R1@s:vl.function_combining.Combining`4" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::function_combining::R2" Name="R2">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R2@s:vl.function_combining.Combining`4" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="Combining" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="function1" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::function1" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::function1" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl ReferencingNameKey="::vl::function_combining::R1" Name="R1">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R1@s:vl.function_combining.Combining`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Static="False">
                          <Type>
                            <VariadicArgumentTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </VariadicArgumentTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="function2" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::function2" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::function2" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl ReferencingNameKey="::vl::function_combining::R2" Name="R2">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R2@s:vl.function_combining.Combining`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Static="False">
                          <Type>
                            <VariadicArgumentTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </VariadicArgumentTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="converter" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::converter" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::converter" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl ReferencingNameKey="::vl::function_combining::R" Name="R">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R@s:vl.function_combining.Combining`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Static="False">
                          <Type>
                            <RefTypeDecl ReferencingNameKey="::vl::function_combining::R1" Name="R1">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R1@s:vl.function_combining.Combining`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Type>
                        </VarDecl>
                        <VarDecl Access="Public" Static="False">
                          <Type>
                            <RefTypeDecl ReferencingNameKey="::vl::function_combining::R2" Name="R2">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R2@s:vl.function_combining.Combining`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="FirstFunctionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::FirstFunctionType" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::FirstFunctionType">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::function_combining::R1" Name="R1">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R1@s:vl.function_combining.Combining`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="SecondFunctionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::SecondFunctionType" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::SecondFunctionType">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::function_combining::R2" Name="R2">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R2@s:vl.function_combining.Combining`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ConverterFunctionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::ConverterFunctionType" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::ConverterFunctionType">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::function_combining::R" Name="R">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R@s:vl.function_combining.Combining`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::function_combining::R1" Name="R1">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R1@s:vl.function_combining.Combining`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::function_combining::R2" Name="R2">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R2@s:vl.function_combining.Combining`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="FinalFunctionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::FinalFunctionType" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::FinalFunctionType">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::function_combining::R" Name="R">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R@s:vl.function_combining.Combining`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="Combining" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::Combining" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::Combining(&amp; const Func&lt;function (... TArgs) : R1&gt;,&amp; const Func&lt;function (... TArgs) : R2&gt;,&amp; const Func&lt;function (R1, R2) : R&gt;)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_function1" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::Combining::_function1" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::Combining(&amp; const Func&lt;function (... TArgs) : R1&gt;,&amp; const Func&lt;function (... TArgs) : R2&gt;,&amp; const Func&lt;function (R1, R2) : R&gt;)::_function1" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                                      <ReturnType>
                                        <RefTypeDecl ReferencingNameKey="::vl::function_combining::R1" Name="R1">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R1@s:vl.function_combining.Combining`4" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </ReturnType>
                                      <Parameters>
                                        <VarDecl Access="Public" Static="False">
                                          <Type>
                                            <VariadicArgumentTypeDecl>
                                              <Element>
                                                <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                                                  <ReferencingOverloadKeys>
                                                    <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                                                  </ReferencingOverloadKeys>
                                                </RefTypeDecl>
                                              </Element>
                                            </VariadicArgumentTypeDecl>
                                          </Type>
                                        </VarDecl>
                                      </Parameters>
                                    </FunctionTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_function2" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::Combining::_function2" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::Combining(&amp; const Func&lt;function (... TArgs) : R1&gt;,&amp; const Func&lt;function (... TArgs) : R2&gt;,&amp; const Func&lt;function (R1, R2) : R&gt;)::_function2" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                                      <ReturnType>
                                        <RefTypeDecl ReferencingNameKey="::vl::function_combining::R2" Name="R2">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R2@s:vl.function_combining.Combining`4" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </ReturnType>
                                      <Parameters>
                                        <VarDecl Access="Public" Static="False">
                                          <Type>
                                            <VariadicArgumentTypeDecl>
                                              <Element>
                                                <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                                                  <ReferencingOverloadKeys>
                                                    <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                                                  </ReferencingOverloadKeys>
                                                </RefTypeDecl>
                                              </Element>
                                            </VariadicArgumentTypeDecl>
                                          </Type>
                                        </VarDecl>
                                      </Parameters>
                                    </FunctionTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_converter" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::Combining::_converter" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::Combining(&amp; const Func&lt;function (... TArgs) : R1&gt;,&amp; const Func&lt;function (... TArgs) : R2&gt;,&amp; const Func&lt;function (R1, R2) : R&gt;)::_converter" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                                      <ReturnType>
                                        <RefTypeDecl ReferencingNameKey="::vl::function_combining::R" Name="R">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R@s:vl.function_combining.Combining`4" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </ReturnType>
                                      <Parameters>
                                        <VarDecl Access="Public" Static="False">
                                          <Type>
                                            <RefTypeDecl ReferencingNameKey="::vl::function_combining::R1" Name="R1">
                                              <ReferencingOverloadKeys>
                                                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R1@s:vl.function_combining.Combining`4" />
                                              </ReferencingOverloadKeys>
                                            </RefTypeDecl>
                                          </Type>
                                        </VarDecl>
                                        <VarDecl Access="Public" Static="False">
                                          <Type>
                                            <RefTypeDecl ReferencingNameKey="::vl::function_combining::R2" Name="R2">
                                              <ReferencingOverloadKeys>
                                                <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R2@s:vl.function_combining.Combining`4" />
                                              </ReferencingOverloadKeys>
                                            </RefTypeDecl>
                                          </Type>
                                        </VarDecl>
                                      </Parameters>
                                    </FunctionTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator ()" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::operator ()" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::operator ()(... &amp;&amp; TArgs)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::function_combining::R" Name="R">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::R@s:vl.function_combining.Combining`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="args" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_combining::Combining::operator ()::args" OverloadKey="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::operator ()(... &amp;&amp; TArgs)const::args" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <DecorateTypeDecl Decoration="RightRef">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::function_combining::TArgs" Name="TArgs">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::function_combining::Combining`4&lt;function (... TArgs) : R1,function (... TArgs) : R2,function (R1, R2) : R&gt;::TArgs@s:vl.function_combining.Combining`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>