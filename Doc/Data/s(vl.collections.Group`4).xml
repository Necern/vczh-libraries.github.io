<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::collections::Group`4">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Group, which is similar to an dictionary, but a group can associate multiple values with a key.&lt;/summary&gt;
  &lt;typeparam name="KT"&gt;Type of keys.&lt;/typeparam&gt;
  &lt;typeparam name="VT"&gt;Type of values.&lt;/typeparam&gt;
  &lt;typeparam name="KK"&gt;Type of the key type of keys.&lt;/typeparam&gt;
  &lt;typeparam name="VK"&gt;Type of the key type of values.&lt;/typeparam&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="KT" Tags="x86, Windows" NameKey="::vl::collections::KT" OverloadKey="::vl::collections::Group`4::KT" />
        <TypeParameterDecl Access="Public" Name="VT" Tags="x86, Windows" NameKey="::vl::collections::VT" OverloadKey="::vl::collections::Group`4::VT" />
        <TypeParameterDecl Access="Public" Name="KK" Tags="x86, Windows" NameKey="::vl::collections::KK" OverloadKey="::vl::collections::Group`4::KK" />
        <TypeParameterDecl Access="Public" Name="VK" Tags="x86, Windows" NameKey="::vl::collections::VK" OverloadKey="::vl::collections::Group`4::VK" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="Group" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group" OverloadKey="::vl::collections::Group`4" ClassType="Class">
          <Children>
            <TypedefDecl Access="Private" Name="KeyContainer" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::KeyContainer" OverloadKey="::vl::collections::Group`4::KeyContainer">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::SortedList" Name="SortedList">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::SortedList`2@s:vl.collections.SortedList`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::KK" Name="KK">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Group`4::KK@s:vl.collections.Group`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Private" Name="ValueContainer" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::ValueContainer" OverloadKey="::vl::collections::Group`4::ValueContainer">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::VK" Name="VK">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Group`4::VK@s:vl.collections.Group`4" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <ClassDecl Access="Protected" Name="Enumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator" OverloadKey="::vl::collections::Group`4::Enumerator" ClassType="Class">
              <Children>
                <VarDecl Access="Private" Name="container" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::container" OverloadKey="::vl::collections::Group`4::Enumerator::container" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::Group" Name="Group">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KK" Name="KK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::VK" Name="VK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::VK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Private" Name="keyIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::keyIndex" OverloadKey="::vl::collections::Group`4::Enumerator::keyIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Private" Name="valueIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::valueIndex" OverloadKey="::vl::collections::Group`4::Enumerator::valueIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Private" Name="current" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::current" OverloadKey="::vl::collections::Group`4::Enumerator::current" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
                <FuncDecl Access="Private" Name="UpdateCurrent" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::UpdateCurrent" OverloadKey="::vl::collections::Group`4::Enumerator::UpdateCurrent()" Virtual="Normal" Function="Function">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl Name="void" />
                      </ReturnType>
                      <Parameters />
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
                <FuncDecl Access="Public" Name="Enumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::Enumerator" OverloadKey="::vl::collections::Group`4::Enumerator::Enumerator(* const Group&lt;KT, VT, KK, VK&gt;,vint,vint)" Virtual="Normal" Function="Constructor">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl Name="void" />
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Name="_container" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::Enumerator::_container" OverloadKey="::vl::collections::Group`4::Enumerator::Enumerator(* const Group&lt;KT, VT, KK, VK&gt;,vint,vint)::_container" Static="False">
                          <Type>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <DecorateTypeDecl Decoration="Const">
                                  <Element>
                                    <GenericTypeDecl>
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::collections::Group" Name="Group">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::collections::Group`4@s:vl.collections.Group`4" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                      <TypeArguments>
                                        <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                        <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                        <RefTypeDecl ReferencingNameKey="::vl::collections::KK" Name="KK">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::collections::Group`4::KK@s:vl.collections.Group`4" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                        <RefTypeDecl ReferencingNameKey="::vl::collections::VK" Name="VK">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::collections::Group`4::VK@s:vl.collections.Group`4" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </TypeArguments>
                                    </GenericTypeDecl>
                                  </Element>
                                </DecorateTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Type>
                        </VarDecl>
                        <VarDecl Access="Public" Name="_keyIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::Enumerator::_keyIndex" OverloadKey="::vl::collections::Group`4::Enumerator::Enumerator(* const Group&lt;KT, VT, KK, VK&gt;,vint,vint)::_keyIndex" Static="False">
                          <Type>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Type>
                        </VarDecl>
                        <VarDecl Access="Public" Name="_valueIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::Enumerator::_valueIndex" OverloadKey="::vl::collections::Group`4::Enumerator::Enumerator(* const Group&lt;KT, VT, KK, VK&gt;,vint,vint)::_valueIndex" Static="False">
                          <Type>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
                <FuncDecl Access="Public" Name="Clone" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::Clone" OverloadKey="::vl::collections::Group`4::Enumerator::Clone()const" Virtual="Normal" Function="Function">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="True">
                      <ReturnType>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::IEnumerator" Name="IEnumerator">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::IEnumerator`1@s:vl.collections.IEnumerator`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </ReturnType>
                      <Parameters />
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
                <FuncDecl Access="Public" Name="Current" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::Current" OverloadKey="::vl::collections::Group`4::Enumerator::Current()const" Virtual="Normal" Function="Function">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="True">
                      <ReturnType>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </ReturnType>
                      <Parameters />
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
                <FuncDecl Access="Public" Name="Index" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::Index" OverloadKey="::vl::collections::Group`4::Enumerator::Index()const" Virtual="Normal" Function="Function">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="True">
                      <ReturnType>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ReturnType>
                      <Parameters />
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
                <FuncDecl Access="Public" Name="Next" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::Next" OverloadKey="::vl::collections::Group`4::Enumerator::Next()" Virtual="Normal" Function="Function">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl Name="bool" />
                      </ReturnType>
                      <Parameters />
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
                <FuncDecl Access="Public" Name="Reset" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Enumerator::Reset" OverloadKey="::vl::collections::Group`4::Enumerator::Reset()" Virtual="Normal" Function="Function">
                  <Type>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl Name="void" />
                      </ReturnType>
                      <Parameters />
                    </FunctionTypeDecl>
                  </Type>
                </FuncDecl>
              </Children>
              <BaseTypes>
                <BaseTypeDecl Access="Public" Tags="x86, Windows">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Object@s:vl.Object" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </BaseTypeDecl>
                <BaseTypeDecl Access="Public" Tags="x86, Windows">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::IEnumerator" Name="IEnumerator">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::IEnumerator`1@s:vl.collections.IEnumerator`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </BaseTypeDecl>
              </BaseTypes>
            </ClassDecl>
            <VarDecl Access="Protected" Name="keys" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::keys" OverloadKey="::vl::collections::Group`4::keys" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::collections::Group::KeyContainer" Name="KeyContainer">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Group`4::KeyContainer@s:vl.collections.Group`4" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="values" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::values" OverloadKey="::vl::collections::Group`4::values" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::Group::ValueContainer" Name="ValueContainer">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Group`4::ValueContainer@s:vl.collections.Group`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="Group" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Group" OverloadKey="::vl::collections::Group`4::Group()" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="~Group" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::~Group" OverloadKey="::vl::collections::Group`4::~Group()" Virtual="Normal" Function="Destructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="CreateEnumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::CreateEnumerator" OverloadKey="::vl::collections::Group`4::CreateEnumerator()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::IEnumerator" Name="IEnumerator">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::IEnumerator`1@s:vl.collections.IEnumerator`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Keys" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Keys" OverloadKey="::vl::collections::Group`4::Keys()const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get all keys.&lt;/summary&gt;
  &lt;returns&gt;All keys.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::Group::KeyContainer" Name="KeyContainer">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Group`4::KeyContainer@s:vl.collections.Group`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Count" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Count" OverloadKey="::vl::collections::Group`4::Count()const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get the number of keys.&lt;/summary&gt;
  &lt;returns&gt;The number of keys.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Get" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Get" OverloadKey="::vl::collections::Group`4::Get(&amp; const KK)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get all values associated with a key.&lt;/summary&gt;
  &lt;returns&gt;All values.&lt;/returns&gt;
  &lt;param name="key"&gt;The key to find.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::Group::ValueContainer" Name="ValueContainer">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Group`4::ValueContainer@s:vl.collections.Group`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="key" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Get::key" OverloadKey="::vl::collections::Group`4::Get(&amp; const KK)const::key" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KK" Name="KK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetByIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::GetByIndex" OverloadKey="::vl::collections::Group`4::GetByIndex(vint)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get all values associated with a key.&lt;/summary&gt;
  &lt;returns&gt;All values.&lt;/returns&gt;
  &lt;param name="index"&gt;The position of a the key.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::Group::ValueContainer" Name="ValueContainer">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Group`4::ValueContainer@s:vl.collections.Group`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::GetByIndex::index" OverloadKey="::vl::collections::Group`4::GetByIndex(vint)const::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator []" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::operator []" OverloadKey="::vl::collections::Group`4::operator [](&amp; const KK)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get all values associated with a key.&lt;/summary&gt;
  &lt;returns&gt;All values.&lt;/returns&gt;
  &lt;param name="key"&gt;The key to find.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::Group::ValueContainer" Name="ValueContainer">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Group`4::ValueContainer@s:vl.collections.Group`4" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="key" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::operator []::key" OverloadKey="::vl::collections::Group`4::operator [](&amp; const KK)const::key" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KK" Name="KK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Contains" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Contains" OverloadKey="::vl::collections::Group`4::Contains(&amp; const KK)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Test if a key exists in the group or not.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the key exists.&lt;/returns&gt;
  &lt;param name="key"&gt;The key to find.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="key" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Contains::key" OverloadKey="::vl::collections::Group`4::Contains(&amp; const KK)const::key" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KK" Name="KK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Contains" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Contains" OverloadKey="::vl::collections::Group`4::Contains(&amp; const KK,&amp; const VK)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Test if a key exists with an associated value in the group or not.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the key exists with an associated value.&lt;/returns&gt;
  &lt;param name="key"&gt;The key to find.&lt;/param&gt;
  &lt;param name="value"&gt;The value to find.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="key" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Contains::key" OverloadKey="::vl::collections::Group`4::Contains(&amp; const KK,&amp; const VK)const::key" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KK" Name="KK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Contains::value" OverloadKey="::vl::collections::Group`4::Contains(&amp; const KK,&amp; const VK)const::value" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::VK" Name="VK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::VK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Add" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Add" OverloadKey="::vl::collections::Group`4::Add(&amp; const Pair&lt;KT, VT&gt;)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Add a key with an associated value. If the key already exists, the value will be associated with the key with other values.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the pair is added.&lt;/returns&gt;
  &lt;param name="value"&gt;The pair of key and value.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Add::value" OverloadKey="::vl::collections::Group`4::Add(&amp; const Pair&lt;KT, VT&gt;)::value" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Add" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Add" OverloadKey="::vl::collections::Group`4::Add(&amp; const KT,&amp; const VT)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Add a key with an associated value. If the key already exists, the value will be associated with the key with other values.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the pair is added.&lt;/returns&gt;
  &lt;param name="key"&gt;The key.&lt;/param&gt;
  &lt;param name="value"&gt;The value.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="key" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Add::key" OverloadKey="::vl::collections::Group`4::Add(&amp; const KT,&amp; const VT)::key" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Add::value" OverloadKey="::vl::collections::Group`4::Add(&amp; const KT,&amp; const VT)::value" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Remove" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Remove" OverloadKey="::vl::collections::Group`4::Remove(&amp; const KK)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Remove a key with all associated values.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the key and all associated values are removed.&lt;/returns&gt;
  &lt;param name="key"&gt;The key.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="key" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Remove::key" OverloadKey="::vl::collections::Group`4::Remove(&amp; const KK)::key" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KK" Name="KK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Remove" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Remove" OverloadKey="::vl::collections::Group`4::Remove(&amp; const KK,&amp; const VK)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Remove a key with the associated values.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the key and the associated values are removed. If there are multiple values associated with the key, only the value will be removed.&lt;/returns&gt;
  &lt;param name="key"&gt;The key.&lt;/param&gt;
  &lt;param name="value"&gt;The value.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="key" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Remove::key" OverloadKey="::vl::collections::Group`4::Remove(&amp; const KK,&amp; const VK)::key" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::KK" Name="KK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::KK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Remove::value" OverloadKey="::vl::collections::Group`4::Remove(&amp; const KK,&amp; const VK)::value" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::VK" Name="VK">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Group`4::VK@s:vl.collections.Group`4" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Clear" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Group::Clear" OverloadKey="::vl::collections::Group`4::Clear()" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Remove everything.&lt;/summary&gt;
  &lt;returns&gt;Returns true if all keys and values are removed.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::KT" Name="KT">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Group`4::KT@s:vl.collections.Group`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::VT" Name="VT">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Group`4::VT@s:vl.collections.Group`4" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>