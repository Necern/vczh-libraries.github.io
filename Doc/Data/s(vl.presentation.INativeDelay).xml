<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::presentation::INativeDelay">
    <ClassDecl Access="Public" Name="INativeDelay" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay" OverloadKey="::vl::presentation::INativeDelay" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Delay execution controller.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <EnumDecl Access="Public" Name="ExecuteStatus" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay::ExecuteStatus" OverloadKey="::vl::presentation::INativeDelay::ExecuteStatus" EnumClass="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Delay execution controller status.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <EnumItemDecl Access="Public" Name="Pending" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay::ExecuteStatus::Pending" OverloadKey="::vl::presentation::INativeDelay::ExecuteStatus::Pending">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Pending.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="Executing" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay::ExecuteStatus::Executing" OverloadKey="::vl::presentation::INativeDelay::ExecuteStatus::Executing">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Executing.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="Executed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay::ExecuteStatus::Executed" OverloadKey="::vl::presentation::INativeDelay::ExecuteStatus::Executed">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Executed.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="Canceled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay::ExecuteStatus::Canceled" OverloadKey="::vl::presentation::INativeDelay::ExecuteStatus::Canceled">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Canceled.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
          </Children>
        </EnumDecl>
        <FuncDecl Access="Public" Name="GetStatus" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay::GetStatus" OverloadKey="::vl::presentation::INativeDelay::GetStatus()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the current status.&lt;/summary&gt;
  &lt;returns&gt;The current status.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDelay::ExecuteStatus" Name="ExecuteStatus">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDelay::ExecuteStatus@s:vl.presentation.INativeDelay" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Delay" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay::Delay" OverloadKey="::vl::presentation::INativeDelay::Delay(vint)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;If the current task is pending, execute the task after a specified period.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="milliseconds"&gt;A specified period.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="milliseconds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay::Delay::milliseconds" OverloadKey="::vl::presentation::INativeDelay::Delay(vint)::milliseconds" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Cancel" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeDelay::Cancel" OverloadKey="::vl::presentation::INativeDelay::Cancel()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;If the current task is pending, cancel the task.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDelay" Name="INativeDelay">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDelay@s:vl.presentation.INativeDelay" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>