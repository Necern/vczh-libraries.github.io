<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.function_lambda.FunctionObjectRetriveType`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::function_lambda::T" OverloadKey="::vl::function_lambda::FunctionObjectRetriveType`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="FunctionObjectRetriveType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::FunctionObjectRetriveType" OverloadKey="::vl::function_lambda::FunctionObjectRetriveType`1" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::FunctionObjectRetriveType::Type" OverloadKey="::vl::function_lambda::FunctionObjectRetriveType`1::Type">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::function_lambda::LambdaRetriveType::Type" Name="Type">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::function_lambda::LambdaRetriveType`1::Type@s:vl.function_lambda.LambdaRetriveType`1" />
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::Type@s:vl.function_lambda.LambdaRetriveType`3" />
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::Type@s:vl.function_lambda.LambdaRetriveType`3" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::function_lambda::LambdaRetriveType" Name="LambdaRetriveType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_lambda::LambdaRetriveType`1@s:vl.function_lambda.LambdaRetriveType`1" />
                            <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;@s:vl.function_lambda.LambdaRetriveType`3" />
                            <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;@s:vl.function_lambda.LambdaRetriveType`3" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <DeclTypeDecl Expression="&amp; T : : operator ( )" />
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="FunctionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::FunctionObjectRetriveType::FunctionType" OverloadKey="::vl::function_lambda::FunctionObjectRetriveType`1::FunctionType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::function_lambda::LambdaRetriveType::FunctionType" Name="FunctionType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::function_lambda::LambdaRetriveType`1::FunctionType@s:vl.function_lambda.LambdaRetriveType`1" />
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::FunctionType@s:vl.function_lambda.LambdaRetriveType`3" />
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::FunctionType@s:vl.function_lambda.LambdaRetriveType`3" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::function_lambda::LambdaRetriveType" Name="LambdaRetriveType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_lambda::LambdaRetriveType`1@s:vl.function_lambda.LambdaRetriveType`1" />
                            <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;@s:vl.function_lambda.LambdaRetriveType`3" />
                            <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;@s:vl.function_lambda.LambdaRetriveType`3" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <DeclTypeDecl Expression="&amp; T : : operator ( )" />
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::FunctionObjectRetriveType::ResultType" OverloadKey="::vl::function_lambda::FunctionObjectRetriveType`1::ResultType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::function_lambda::LambdaRetriveType::ResultType" Name="ResultType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::function_lambda::LambdaRetriveType`1::ResultType@s:vl.function_lambda.LambdaRetriveType`1" />
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::ResultType@s:vl.function_lambda.LambdaRetriveType`3" />
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::ResultType@s:vl.function_lambda.LambdaRetriveType`3" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::function_lambda::LambdaRetriveType" Name="LambdaRetriveType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_lambda::LambdaRetriveType`1@s:vl.function_lambda.LambdaRetriveType`1" />
                            <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;@s:vl.function_lambda.LambdaRetriveType`3" />
                            <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;@s:vl.function_lambda.LambdaRetriveType`3" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <DeclTypeDecl Expression="&amp; T : : operator ( )" />
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>