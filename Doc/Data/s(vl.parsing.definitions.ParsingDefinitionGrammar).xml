<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::parsing::definitions::ParsingDefinitionGrammar">
    <ClassDecl Access="Public" Name="ParsingDefinitionGrammar" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar" ClassType="Class">
      <Children>
        <ClassDecl Access="Public" Name="IVisitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor" ClassType="Class">
          <Children>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionPrimitiveGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionPrimitiveGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionPrimitiveGrammar" Name="ParsingDefinitionPrimitiveGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionPrimitiveGrammar@s:vl.parsing.definitions.ParsingDefinitionPrimitiveGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionTextGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionTextGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionTextGrammar" Name="ParsingDefinitionTextGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionTextGrammar@s:vl.parsing.definitions.ParsingDefinitionTextGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionSequenceGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionSequenceGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionSequenceGrammar" Name="ParsingDefinitionSequenceGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionSequenceGrammar@s:vl.parsing.definitions.ParsingDefinitionSequenceGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionAlternativeGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionAlternativeGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionAlternativeGrammar" Name="ParsingDefinitionAlternativeGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionAlternativeGrammar@s:vl.parsing.definitions.ParsingDefinitionAlternativeGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionLoopGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionLoopGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionLoopGrammar" Name="ParsingDefinitionLoopGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionLoopGrammar@s:vl.parsing.definitions.ParsingDefinitionLoopGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionOptionalGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionOptionalGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionOptionalGrammar" Name="ParsingDefinitionOptionalGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionOptionalGrammar@s:vl.parsing.definitions.ParsingDefinitionOptionalGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionCreateGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionCreateGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionCreateGrammar" Name="ParsingDefinitionCreateGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionCreateGrammar@s:vl.parsing.definitions.ParsingDefinitionCreateGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionAssignGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionAssignGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionAssignGrammar" Name="ParsingDefinitionAssignGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionAssignGrammar@s:vl.parsing.definitions.ParsingDefinitionAssignGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionUseGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionUseGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionUseGrammar" Name="ParsingDefinitionUseGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionUseGrammar@s:vl.parsing.definitions.ParsingDefinitionUseGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionSetterGrammar)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit::node" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor::Visit(* ParsingDefinitionSetterGrammar)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionSetterGrammar" Name="ParsingDefinitionSetterGrammar">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions::ParsingDefinitionSetterGrammar@s:vl.parsing.definitions.ParsingDefinitionSetterGrammar" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Interface" Name="Interface">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Interface@s:vl.Interface" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <FuncDecl Access="Public" Name="Accept" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::Accept" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::Accept(* IVisitor)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="visitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::Accept::visitor" OverloadKey="::vl::parsing::definitions::ParsingDefinitionGrammar::Accept(* IVisitor)::visitor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor" Name="IVisitor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions::ParsingDefinitionGrammar::IVisitor@s:vl.parsing.definitions.ParsingDefinitionGrammar" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>