<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::workflow::runtime::LoadFunction(Ptr&lt;WfRuntimeGlobalContext&gt;,&amp; const WString)">
    <FuncDecl Access="Public" Name="LoadFunction" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::LoadFunction" OverloadKey="::vl::workflow::runtime::LoadFunction(Ptr&lt;WfRuntimeGlobalContext&gt;,&amp; const WString)" Virtual="Normal" Function="Function">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Load a function from a global context, raise an exception if multiple functions are found under the same name. Function "&amp;gt;initialize&amp;lt;" should be the first to execute.&lt;/summary&gt;
  &lt;returns&gt;The loaded function.&lt;/returns&gt;
  &lt;param name="context"&gt;The context to the evaluation environment.&lt;/param&gt;
  &lt;param name="name"&gt;The function name.&lt;/param&gt;
&lt;/Document&gt;</Document>
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IValueFunctionProxy" Name="IValueFunctionProxy">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueFunctionProxy@s:vl.reflection.description.IValueFunctionProxy" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection@ns:vl.reflection" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::LoadFunction::context" OverloadKey="::vl::workflow::runtime::LoadFunction(Ptr&lt;WfRuntimeGlobalContext&gt;,&amp; const WString)::context" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfRuntimeGlobalContext" Name="WfRuntimeGlobalContext">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::runtime::WfRuntimeGlobalContext@s:vl.workflow.runtime.WfRuntimeGlobalContext" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::LoadFunction::name" OverloadKey="::vl::workflow::runtime::LoadFunction(Ptr&lt;WfRuntimeGlobalContext&gt;,&amp; const WString)::name" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>