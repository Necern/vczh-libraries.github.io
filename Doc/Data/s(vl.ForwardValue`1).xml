<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::ForwardValue`1(&amp;&amp; RemoveReference&lt;T&gt;::Type)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::T" OverloadKey="::vl::ForwardValue`1(&amp;&amp; RemoveReference&lt;T&gt;::Type)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="ForwardValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::ForwardValue" OverloadKey="::vl::ForwardValue`1(&amp;&amp; RemoveReference&lt;T&gt;::Type)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="RightRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::ForwardValue`1(&amp;&amp; RemoveReference&lt;T&gt;::Type)::T@s:vl.ForwardValue`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::ForwardValue::value" OverloadKey="::vl::ForwardValue`1(&amp;&amp; RemoveReference&lt;T&gt;::Type)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="RightRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::RemoveReference::Type" Name="Type">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::RemoveReference`1::Type@s:vl.RemoveReference`1" />
                            <Key Value="::vl::RemoveReference`1&lt;&amp; T&gt;::Type@s:vl.RemoveReference`1" />
                            <Key Value="::vl::RemoveReference`1&lt;&amp;&amp; T&gt;::Type@s:vl.RemoveReference`1" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::RemoveReference" Name="RemoveReference">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::RemoveReference`1@s:vl.RemoveReference`1" />
                                    <Key Value="::vl::RemoveReference`1&lt;&amp; T&gt;@s:vl.RemoveReference`1" />
                                    <Key Value="::vl::RemoveReference`1&lt;&amp;&amp; T&gt;@s:vl.RemoveReference`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ForwardValue`1(&amp;&amp; RemoveReference&lt;T&gt;::Type)::T@s:vl.ForwardValue`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="::vl::ForwardValue`1(&amp; RemoveReference&lt;T&gt;::Type)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::T" OverloadKey="::vl::ForwardValue`1(&amp; RemoveReference&lt;T&gt;::Type)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="ForwardValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::ForwardValue" OverloadKey="::vl::ForwardValue`1(&amp; RemoveReference&lt;T&gt;::Type)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="RightRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::ForwardValue`1(&amp; RemoveReference&lt;T&gt;::Type)::T@s:vl.ForwardValue`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::ForwardValue::value" OverloadKey="::vl::ForwardValue`1(&amp; RemoveReference&lt;T&gt;::Type)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::RemoveReference::Type" Name="Type">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::RemoveReference`1::Type@s:vl.RemoveReference`1" />
                            <Key Value="::vl::RemoveReference`1&lt;&amp; T&gt;::Type@s:vl.RemoveReference`1" />
                            <Key Value="::vl::RemoveReference`1&lt;&amp;&amp; T&gt;::Type@s:vl.RemoveReference`1" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::RemoveReference" Name="RemoveReference">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::RemoveReference`1@s:vl.RemoveReference`1" />
                                    <Key Value="::vl::RemoveReference`1&lt;&amp; T&gt;@s:vl.RemoveReference`1" />
                                    <Key Value="::vl::RemoveReference`1&lt;&amp;&amp; T&gt;@s:vl.RemoveReference`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ForwardValue`1(&amp; RemoveReference&lt;T&gt;::Type)::T@s:vl.ForwardValue`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>