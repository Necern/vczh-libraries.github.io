<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::presentation::templates::GuiSinglelineTextBoxTemplate">
    <ClassDecl Access="Public" Name="GuiSinglelineTextBoxTemplate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate" ClassType="Class">
      <Children>
        <FuncDecl Access="Public" Name="GuiSinglelineTextBoxTemplate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::GuiSinglelineTextBoxTemplate" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::GuiSinglelineTextBoxTemplate()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiSinglelineTextBoxTemplate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::~GuiSinglelineTextBoxTemplate" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::~GuiSinglelineTextBoxTemplate()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Private" Name="TextColor_" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::TextColor_" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::TextColor_" Static="False">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorEntry" Name="ColorEntry">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::text::ColorEntry@s:vl.presentation.elements.text.ColorEntry" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text" Name="text">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::text@ns:vl.presentation.elements.text" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="GetTextColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::GetTextColor" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::GetTextColor()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorEntry" Name="ColorEntry">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::text::ColorEntry@s:vl.presentation.elements.text.ColorEntry" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text" Name="text">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::text@ns:vl.presentation.elements.text" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetTextColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::SetTextColor" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::SetTextColor(&amp; const elements::text::ColorEntry)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::SetTextColor::value" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::SetTextColor(&amp; const elements::text::ColorEntry)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorEntry" Name="ColorEntry">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::elements::text::ColorEntry@s:vl.presentation.elements.text.ColorEntry" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text" Name="text">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::elements::text@ns:vl.presentation.elements.text" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Public" Name="TextColorChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::TextColorChanged" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::TextColorChanged" Static="False">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="CaretColor_" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::CaretColor_" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::CaretColor_" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="GetCaretColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::GetCaretColor" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::GetCaretColor()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetCaretColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::SetCaretColor" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::SetCaretColor(&amp; const Color)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::SetCaretColor::value" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::SetCaretColor(&amp; const Color)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Public" Name="CaretColorChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::CaretColorChanged" OverloadKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate::CaretColorChanged" Static="False">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiControlTemplate" Name="GuiControlTemplate">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates::GuiControlTemplate@s:vl.presentation.templates.GuiControlTemplate" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate" Name="GuiSinglelineTextBoxTemplate">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::templates::GuiSinglelineTextBoxTemplate@s:vl.presentation.templates.GuiSinglelineTextBoxTemplate" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>