<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.parsing.ParsingTreeCustomBase">
    <ClassDecl Access="Public" Name="ParsingTreeCustomBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeCustomBase" OverloadKey="::vl::parsing::ParsingTreeCustomBase" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Base type of all strong typed syntax tree. Normally all strong typed syntax tree are generated from a grammar file using ParserGen.exe in Tools project. See &lt;links&gt;&lt;link cref="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" /&gt;&lt;/links&gt; for details.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="codeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeCustomBase::codeRange" OverloadKey="::vl::parsing::ParsingTreeCustomBase::codeRange" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Range of all tokens that form this object.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="creatorRules" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeCustomBase::creatorRules" OverloadKey="::vl::parsing::ParsingTreeCustomBase::creatorRules" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Names of all rules that return this object.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>