<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.parsing.ParsingError">
    <SymbolTree NamespaceUrlName="vl.parsing">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError" DisplayName="ParsingError class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError::codeRange" DisplayName="codeRange field" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError::token" DisplayName="token field" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError::parsingTree" DisplayName="parsingTree field" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError::errorMessage" DisplayName="errorMessage field" Doc="true" />
        <Overloads DisplayName="ParsingError constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError::ParsingError()" DisplayName="ParsingError constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError::ParsingError(&amp; const WString)" DisplayName="ParsingError constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError::ParsingError(* const regex::RegexToken,&amp; const WString)" DisplayName="ParsingError constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError::ParsingError(* ParsingTreeCustomBase,&amp; const WString)" DisplayName="ParsingError constructor" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingError::~ParsingError()" DisplayName="~ParsingError destructor" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>