<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;Array&lt;T, K&gt;&gt;">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::collections::randomaccess_internal::T" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;Array&lt;T, K&gt;&gt;::T" />
        <TypeParameterDecl Access="Public" Name="K" Tags="x86, Windows" NameKey="::vl::collections::randomaccess_internal::K" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;Array&lt;T, K&gt;&gt;::K" />
      </TypeParameters>
      <Specialization>
        <GenericTypeDecl>
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
              <ReferencingOverloadKeys>
                <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
          <TypeArguments>
            <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;Array&lt;T, K&gt;&gt;::T@s:vl.collections.randomaccess_internal.RandomAccessable`2" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
            <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::K" Name="K">
              <ReferencingOverloadKeys>
                <Key Value="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;Array&lt;T, K&gt;&gt;::K@s:vl.collections.randomaccess_internal.RandomAccessable`2" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </TypeArguments>
        </GenericTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="RandomAccessable" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccessable" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;Array&lt;T, K&gt;&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="CanRead" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccessable::CanRead" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;Array&lt;T, K&gt;&gt;::CanRead" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="CanResize" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccessable::CanResize" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;Array&lt;T, K&gt;&gt;::CanResize" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;List&lt;T, K&gt;&gt;">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::collections::randomaccess_internal::T" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;List&lt;T, K&gt;&gt;::T" />
        <TypeParameterDecl Access="Public" Name="K" Tags="x86, Windows" NameKey="::vl::collections::randomaccess_internal::K" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;List&lt;T, K&gt;&gt;::K" />
      </TypeParameters>
      <Specialization>
        <GenericTypeDecl>
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
              <ReferencingOverloadKeys>
                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
          <TypeArguments>
            <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;List&lt;T, K&gt;&gt;::T@s:vl.collections.randomaccess_internal.RandomAccessable`2" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
            <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::K" Name="K">
              <ReferencingOverloadKeys>
                <Key Value="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;List&lt;T, K&gt;&gt;::K@s:vl.collections.randomaccess_internal.RandomAccessable`2" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </TypeArguments>
        </GenericTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="RandomAccessable" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccessable" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;List&lt;T, K&gt;&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="CanRead" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccessable::CanRead" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;List&lt;T, K&gt;&gt;::CanRead" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="CanResize" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccessable::CanResize" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;List&lt;T, K&gt;&gt;::CanResize" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;SortedList&lt;T, K&gt;&gt;">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::collections::randomaccess_internal::T" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;SortedList&lt;T, K&gt;&gt;::T" />
        <TypeParameterDecl Access="Public" Name="K" Tags="x86, Windows" NameKey="::vl::collections::randomaccess_internal::K" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;SortedList&lt;T, K&gt;&gt;::K" />
      </TypeParameters>
      <Specialization>
        <GenericTypeDecl>
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::collections::SortedList" Name="SortedList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::collections::SortedList`2@s:vl.collections.SortedList`2" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
          <TypeArguments>
            <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;SortedList&lt;T, K&gt;&gt;::T@s:vl.collections.randomaccess_internal.RandomAccessable`2" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
            <RefTypeDecl ReferencingNameKey="::vl::collections::randomaccess_internal::K" Name="K">
              <ReferencingOverloadKeys>
                <Key Value="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;SortedList&lt;T, K&gt;&gt;::K@s:vl.collections.randomaccess_internal.RandomAccessable`2" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </TypeArguments>
        </GenericTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="RandomAccessable" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccessable" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;SortedList&lt;T, K&gt;&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="CanRead" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccessable::CanRead" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;SortedList&lt;T, K&gt;&gt;::CanRead" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="CanResize" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::randomaccess_internal::RandomAccessable::CanResize" OverloadKey="::vl::collections::randomaccess_internal::RandomAccessable`2&lt;SortedList&lt;T, K&gt;&gt;::CanResize" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>