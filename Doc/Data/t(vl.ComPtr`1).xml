<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::ComPtr`1">
    <SymbolTree NamespaceUrlName="vl">
      <SymbolParentMapping>
        <Map From="::vl::ComPtr`1::T" To="::vl::ComPtr`1" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1" DisplayName="ComPtr class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::counter" DisplayName="counter field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::reference" DisplayName="reference field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::Inc()" DisplayName="Inc method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::Dec()" DisplayName="Dec method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::Counter()const" DisplayName="Counter method" Doc="false" />
        <Overloads DisplayName="ComPtr constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::ComPtr(* volatile vint,* T)" DisplayName="ComPtr constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::ComPtr()" DisplayName="ComPtr constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::ComPtr(* T)" DisplayName="ComPtr constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::ComPtr(&amp; const ComPtr&lt;T&gt;)" DisplayName="ComPtr constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::ComPtr(&amp;&amp; ComPtr&lt;T&gt;)" DisplayName="ComPtr constructor" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::~ComPtr()" DisplayName="~ComPtr destructor" Doc="false" />
        <Overloads DisplayName="operator = method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator =(* T)" DisplayName="operator = method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator =(&amp; const ComPtr&lt;T&gt;)" DisplayName="operator = method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator =(&amp;&amp; ComPtr&lt;T&gt;)" DisplayName="operator = method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator == method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator ==(* const T)const" DisplayName="operator == method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator ==(&amp; const ComPtr&lt;T&gt;)const" DisplayName="operator == method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator != method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator !=(* const T)const" DisplayName="operator != method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator !=(&amp; const ComPtr&lt;T&gt;)const" DisplayName="operator != method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &gt; method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator &gt;(* const T)const" DisplayName="operator &gt; method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator &gt;(&amp; const ComPtr&lt;T&gt;)const" DisplayName="operator &gt; method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &gt;= method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator &gt;=(* const T)const" DisplayName="operator &gt;= method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator &gt;=(&amp; const ComPtr&lt;T&gt;)const" DisplayName="operator &gt;= method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &lt; method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator &lt;(* const T)const" DisplayName="operator &lt; method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator &lt;(&amp; const ComPtr&lt;T&gt;)const" DisplayName="operator &lt; method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &lt;= method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator &lt;=(* const T)const" DisplayName="operator &lt;= method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator &lt;=(&amp; const ComPtr&lt;T&gt;)const" DisplayName="operator &lt;= method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator()const" DisplayName="operator method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::Obj()const" DisplayName="Obj method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ComPtr`1::operator -&gt;()const" DisplayName="operator -&gt; method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>