<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.console.Console">
    <ClassDecl Access="Public" Name="Console" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console" OverloadKey="::vl::console::Console" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;A Static class for command line window operations.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="Write" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::Write" OverloadKey="::vl::console::Console::Write(* const wchar_t,vint)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write to the command line window.&lt;/summary&gt;
  &lt;param name="string"&gt;Content to write.&lt;/param&gt;
  &lt;param name="length"&gt;Size of the content in wchar_t. The zero terminator is not included.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::Write::string" OverloadKey="::vl::console::Console::Write(* const wchar_t,vint)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::Write::length" OverloadKey="::vl::console::Console::Write(* const wchar_t,vint)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Write" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::Write" OverloadKey="::vl::console::Console::Write(* const wchar_t)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write to the command line window.&lt;/summary&gt;
  &lt;param name="string"&gt;Content to write.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::Write::string" OverloadKey="::vl::console::Console::Write(* const wchar_t)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Write" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::Write" OverloadKey="::vl::console::Console::Write(&amp; const WString)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write to the command line window.&lt;/summary&gt;
  &lt;param name="string"&gt;Content to write.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::Write::string" OverloadKey="::vl::console::Console::Write(&amp; const WString)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::WriteLine" OverloadKey="::vl::console::Console::WriteLine(&amp; const WString)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write to the command line window with a CRLF.&lt;/summary&gt;
  &lt;param name="string"&gt;Content to write.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::WriteLine::string" OverloadKey="::vl::console::Console::WriteLine(&amp; const WString)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Read" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::Read" OverloadKey="::vl::console::Console::Read()" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Read from the command line window.&lt;/summary&gt;
  &lt;returns&gt;The whole line read from the command line window.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::SetColor" OverloadKey="::vl::console::Console::SetColor(bool,bool,bool,bool)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="red" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::SetColor::red" OverloadKey="::vl::console::Console::SetColor(bool,bool,bool,bool)::red" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="green" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::SetColor::green" OverloadKey="::vl::console::Console::SetColor(bool,bool,bool,bool)::green" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="blue" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::SetColor::blue" OverloadKey="::vl::console::Console::SetColor(bool,bool,bool,bool)::blue" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="light" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::SetColor::light" OverloadKey="::vl::console::Console::SetColor(bool,bool,bool,bool)::light" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetTitle" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::SetTitle" OverloadKey="::vl::console::Console::SetTitle(&amp; const WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::console::Console::SetTitle::string" OverloadKey="::vl::console::Console::SetTitle(&amp; const WString)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>