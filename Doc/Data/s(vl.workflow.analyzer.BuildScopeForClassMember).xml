<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.BuildScopeForClassMember(^ WfLexicalScopeManager,Ptr{WfLexicalScope},Ptr{typeimpl.WfCustomType},Ptr{WfClassDeclaration},Ptr{WfClassMember},^ parsing.ParsingTreeCustomBase)">
    <FuncDecl Access="Public" Name="BuildScopeForClassMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForClassMember" OverloadKey="::vl::workflow::analyzer::BuildScopeForClassMember(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;typeimpl::WfCustomType&gt;,Ptr&lt;WfClassDeclaration&gt;,Ptr&lt;WfClassMember&gt;,* parsing::ParsingTreeCustomBase)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="manager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForClassMember::manager" OverloadKey="::vl::workflow::analyzer::BuildScopeForClassMember(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;typeimpl::WfCustomType&gt;,Ptr&lt;WfClassDeclaration&gt;,Ptr&lt;WfClassMember&gt;,* parsing::ParsingTreeCustomBase)::manager" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager" Name="WfLexicalScopeManager">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="parentScope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForClassMember::parentScope" OverloadKey="::vl::workflow::analyzer::BuildScopeForClassMember(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;typeimpl::WfCustomType&gt;,Ptr&lt;WfClassDeclaration&gt;,Ptr&lt;WfClassMember&gt;,* parsing::ParsingTreeCustomBase)::parentScope" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="td" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForClassMember::td" OverloadKey="::vl::workflow::analyzer::BuildScopeForClassMember(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;typeimpl::WfCustomType&gt;,Ptr&lt;WfClassDeclaration&gt;,Ptr&lt;WfClassMember&gt;,* parsing::ParsingTreeCustomBase)::td" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfCustomType" Name="WfCustomType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::typeimpl::WfCustomType@s:vl.workflow.typeimpl.WfCustomType" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl" Name="typeimpl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::typeimpl@ns:vl.workflow.typeimpl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForClassMember::classDecl" OverloadKey="::vl::workflow::analyzer::BuildScopeForClassMember(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;typeimpl::WfCustomType&gt;,Ptr&lt;WfClassDeclaration&gt;,Ptr&lt;WfClassMember&gt;,* parsing::ParsingTreeCustomBase)::classDecl" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="member" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForClassMember::member" OverloadKey="::vl::workflow::analyzer::BuildScopeForClassMember(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;typeimpl::WfCustomType&gt;,Ptr&lt;WfClassDeclaration&gt;,Ptr&lt;WfClassMember&gt;,* parsing::ParsingTreeCustomBase)::member" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassMember" Name="WfClassMember">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfClassMember@s:vl.workflow.WfClassMember" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="source" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::BuildScopeForClassMember::source" OverloadKey="::vl::workflow::analyzer::BuildScopeForClassMember(* WfLexicalScopeManager,Ptr&lt;WfLexicalScope&gt;,Ptr&lt;typeimpl::WfCustomType&gt;,Ptr&lt;WfClassDeclaration&gt;,Ptr&lt;WfClassMember&gt;,* parsing::ParsingTreeCustomBase)::source" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>