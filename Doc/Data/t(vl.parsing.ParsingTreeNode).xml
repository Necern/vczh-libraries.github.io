<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.parsing.ParsingTreeNode">
    <SymbolTree NamespaceUrlName="vl.parsing">
      <SymbolParentMapping>
        <Map From="::vl::parsing::ParsingTreeNode::TraversalVisitor::TraverseDirection::ByTextPosition" To="::vl::parsing::ParsingTreeNode::TraversalVisitor::TraverseDirection" />
        <Map From="::vl::parsing::ParsingTreeNode::TraversalVisitor::TraverseDirection::ByStorePosition" To="::vl::parsing::ParsingTreeNode::TraversalVisitor::TraverseDirection" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode" DisplayName="ParsingTreeNode class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::IVisitor" DisplayName="IVisitor class" Doc="false">
          <Overloads DisplayName="Visit method">
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::IVisitor::Visit(* ParsingTreeToken)" DisplayName="Visit method" Doc="false" />
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::IVisitor::Visit(* ParsingTreeObject)" DisplayName="Visit method" Doc="false" />
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::IVisitor::Visit(* ParsingTreeArray)" DisplayName="Visit method" Doc="false" />
          </Overloads>
        </Symbol>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor" DisplayName="TraversalVisitor class" Doc="false">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::TraverseDirection" DisplayName="TraverseDirection enum" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::direction" DisplayName="direction field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::TraversalVisitor(TraverseDirection)" DisplayName="TraversalVisitor constructor" Doc="false" />
          <Overloads DisplayName="BeforeVisit method">
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::BeforeVisit(* ParsingTreeToken)" DisplayName="BeforeVisit method" Doc="false" />
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::BeforeVisit(* ParsingTreeObject)" DisplayName="BeforeVisit method" Doc="false" />
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::BeforeVisit(* ParsingTreeArray)" DisplayName="BeforeVisit method" Doc="false" />
          </Overloads>
          <Overloads DisplayName="AfterVisit method">
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::AfterVisit(* ParsingTreeToken)" DisplayName="AfterVisit method" Doc="false" />
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::AfterVisit(* ParsingTreeObject)" DisplayName="AfterVisit method" Doc="false" />
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::AfterVisit(* ParsingTreeArray)" DisplayName="AfterVisit method" Doc="false" />
          </Overloads>
          <Overloads DisplayName="Visit method">
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::Visit(* ParsingTreeToken)" DisplayName="Visit method" Doc="false" />
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::Visit(* ParsingTreeObject)" DisplayName="Visit method" Doc="false" />
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::TraversalVisitor::Visit(* ParsingTreeArray)" DisplayName="Visit method" Doc="false" />
          </Overloads>
        </Symbol>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::NodeList" DisplayName="NodeList typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::codeRange" DisplayName="codeRange field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::parent" DisplayName="parent field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::cachedOrderedSubNodes" DisplayName="cachedOrderedSubNodes field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::GetSubNodesInternal()" DisplayName="GetSubNodesInternal method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::BeforeAddChild(Ptr&lt;ParsingTreeNode&gt;)" DisplayName="BeforeAddChild method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::AfterAddChild(Ptr&lt;ParsingTreeNode&gt;)" DisplayName="AfterAddChild method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::BeforeRemoveChild(Ptr&lt;ParsingTreeNode&gt;)" DisplayName="BeforeRemoveChild method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::AfterRemoveChild(Ptr&lt;ParsingTreeNode&gt;)" DisplayName="AfterRemoveChild method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::ParsingTreeNode(&amp; const ParsingTextRange)" DisplayName="ParsingTreeNode constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::~ParsingTreeNode()" DisplayName="~ParsingTreeNode destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::Accept(* IVisitor)" DisplayName="Accept method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::Clone()" DisplayName="Clone method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::GetCodeRange()" DisplayName="GetCodeRange method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::SetCodeRange(&amp; const ParsingTextRange)" DisplayName="SetCodeRange method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::InitializeQueryCache()" DisplayName="InitializeQueryCache method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::ClearQueryCache()" DisplayName="ClearQueryCache method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::GetParent()" DisplayName="GetParent method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::GetSubNodes()" DisplayName="GetSubNodes method" Doc="true" />
        <Overloads DisplayName="FindSubNode method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::FindSubNode(&amp; const ParsingTextPos)" DisplayName="FindSubNode method" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::FindSubNode(&amp; const ParsingTextRange)" DisplayName="FindSubNode method" Doc="true" />
        </Overloads>
        <Overloads DisplayName="FindDeepestNode method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::FindDeepestNode(&amp; const ParsingTextPos)" DisplayName="FindDeepestNode method" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTreeNode::FindDeepestNode(&amp; const ParsingTextRange)" DisplayName="FindDeepestNode method" Doc="true" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>