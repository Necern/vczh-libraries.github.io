<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.ObjectString`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;A type representing a string.&lt;/summary&gt;
  &lt;typeparam name="T"&gt;Type of a character.&lt;/typeparam&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::T" OverloadKey="::vl::ObjectString`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString" OverloadKey="::vl::ObjectString`1" ClassType="Class">
          <Children>
            <VarDecl Access="Private" Name="zero" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::zero" OverloadKey="::vl::ObjectString`1::zero" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::buffer" OverloadKey="::vl::ObjectString`1::buffer" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="counter" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::counter" OverloadKey="::vl::ObjectString`1::counter" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <DecorateTypeDecl Decoration="Volatile">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::start" OverloadKey="::vl::ObjectString`1::start" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::length" OverloadKey="::vl::ObjectString`1::length" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="realLength" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::realLength" OverloadKey="::vl::ObjectString`1::realLength" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Private" Name="CalculateLength" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::CalculateLength" OverloadKey="::vl::ObjectString`1::CalculateLength(* const T)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::CalculateLength::buffer" OverloadKey="::vl::ObjectString`1::CalculateLength(* const T)::buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Private" Name="Compare" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Compare" OverloadKey="::vl::ObjectString`1::Compare(* const T,&amp; const ObjectString&lt;T&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="bufA" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Compare::bufA" OverloadKey="::vl::ObjectString`1::Compare(* const T,&amp; const ObjectString&lt;T&gt;)::bufA" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="strB" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Compare::strB" OverloadKey="::vl::ObjectString`1::Compare(* const T,&amp; const ObjectString&lt;T&gt;)::strB" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Compare" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Compare" OverloadKey="::vl::ObjectString`1::Compare(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="strA" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Compare::strA" OverloadKey="::vl::ObjectString`1::Compare(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;)::strA" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="strB" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Compare::strB" OverloadKey="::vl::ObjectString`1::Compare(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;)::strB" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Private" Name="Inc" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Inc" OverloadKey="::vl::ObjectString`1::Inc()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Private" Name="Dec" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Dec" OverloadKey="::vl::ObjectString`1::Dec()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Private" Name="ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,vint,vint)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::string" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,vint,vint)::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_start" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::_start" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,vint,vint)::_start" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_length" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::_length" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,vint,vint)::_length" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Private" Name="ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;,vint,vint)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="dest" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::dest" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;,vint,vint)::dest" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="source" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::source" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;,vint,vint)::source" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::index" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;,vint,vint)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::count" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;,vint,vint)::count" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <VarDecl Access="Public" Name="Empty" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Empty" OverloadKey="::vl::ObjectString`1::Empty" Static="True">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString" OverloadKey="::vl::ObjectString`1::ObjectString()" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Create an empty string.&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const T)" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Create a string continaing one character.&lt;/summary&gt;
  &lt;param name="_char"&gt;The character.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_char" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::_char" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const T)::_char" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString" OverloadKey="::vl::ObjectString`1::ObjectString(* const T,vint)" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Copy a string.&lt;/summary&gt;
  &lt;param name="_buffer"&gt;Memory to copy. It does not have to contain the zero terminator.&lt;/param&gt;
  &lt;param name="_length"&gt;Size of the content in characters.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::_buffer" OverloadKey="::vl::ObjectString`1::ObjectString(* const T,vint)::_buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_length" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::_length" OverloadKey="::vl::ObjectString`1::ObjectString(* const T,vint)::_length" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString" OverloadKey="::vl::ObjectString`1::ObjectString(* const T,bool)" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Copy a string.&lt;/summary&gt;
  &lt;param name="_buffer"&gt;Memory to copy. It should have to contain the zero terminator.&lt;/param&gt;
  &lt;param name="copy"&gt;Set to true to copy the memory. Set to false to use the memory directly.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::_buffer" OverloadKey="::vl::ObjectString`1::ObjectString(* const T,bool)::_buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="copy" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::copy" OverloadKey="::vl::ObjectString`1::ObjectString(* const T,bool)::copy" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;)" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Copy a string.&lt;/summary&gt;
  &lt;param name="string"&gt;The string to copy.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::string" OverloadKey="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;)::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString" OverloadKey="::vl::ObjectString`1::ObjectString(&amp;&amp; ObjectString&lt;T&gt;)" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Move a string.&lt;/summary&gt;
  &lt;param name="string"&gt;The string to move.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::ObjectString::string" OverloadKey="::vl::ObjectString`1::ObjectString(&amp;&amp; ObjectString&lt;T&gt;)::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="RightRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="~ObjectString" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::~ObjectString" OverloadKey="::vl::ObjectString`1::~ObjectString()" Virtual="Normal" Function="Destructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Buffer" OverloadKey="::vl::ObjectString`1::Buffer()const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get the zero-terminated buffer in the string. Copying parts of a string does not necessarily create a new buffer, so in some situation the string will not actually points to a zero-terminated buffer. In this case, this function will copy the content to a new buffer with a zero terminator and return.&lt;/summary&gt;
  &lt;returns&gt;Returns the buffer.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator =" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator =" OverloadKey="::vl::ObjectString`1::operator =(&amp; const ObjectString&lt;T&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator =::string" OverloadKey="::vl::ObjectString`1::operator =(&amp; const ObjectString&lt;T&gt;)::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator =" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator =" OverloadKey="::vl::ObjectString`1::operator =(&amp;&amp; ObjectString&lt;T&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator =::string" OverloadKey="::vl::ObjectString`1::operator =(&amp;&amp; ObjectString&lt;T&gt;)::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="RightRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator +=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator +=" OverloadKey="::vl::ObjectString`1::operator +=(&amp; const ObjectString&lt;T&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator +=::string" OverloadKey="::vl::ObjectString`1::operator +=(&amp; const ObjectString&lt;T&gt;)::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator +" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator +" OverloadKey="::vl::ObjectString`1::operator +(&amp; const ObjectString&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator +::string" OverloadKey="::vl::ObjectString`1::operator +(&amp; const ObjectString&lt;T&gt;)const::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator ==" OverloadKey="::vl::ObjectString`1::operator ==(&amp; const ObjectString&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator ==::string" OverloadKey="::vl::ObjectString`1::operator ==(&amp; const ObjectString&lt;T&gt;)const::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator !=" OverloadKey="::vl::ObjectString`1::operator !=(&amp; const ObjectString&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator !=::string" OverloadKey="::vl::ObjectString`1::operator !=(&amp; const ObjectString&lt;T&gt;)const::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &gt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;" OverloadKey="::vl::ObjectString`1::operator &gt;(&amp; const ObjectString&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;::string" OverloadKey="::vl::ObjectString`1::operator &gt;(&amp; const ObjectString&lt;T&gt;)const::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &gt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;=" OverloadKey="::vl::ObjectString`1::operator &gt;=(&amp; const ObjectString&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;=::string" OverloadKey="::vl::ObjectString`1::operator &gt;=(&amp; const ObjectString&lt;T&gt;)const::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &lt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;" OverloadKey="::vl::ObjectString`1::operator &lt;(&amp; const ObjectString&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;::string" OverloadKey="::vl::ObjectString`1::operator &lt;(&amp; const ObjectString&lt;T&gt;)const::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &lt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;=" OverloadKey="::vl::ObjectString`1::operator &lt;=(&amp; const ObjectString&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;=::string" OverloadKey="::vl::ObjectString`1::operator &lt;=(&amp; const ObjectString&lt;T&gt;)const::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator ==" OverloadKey="::vl::ObjectString`1::operator ==(* const T)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator ==::buffer" OverloadKey="::vl::ObjectString`1::operator ==(* const T)const::buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator !=" OverloadKey="::vl::ObjectString`1::operator !=(* const T)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator !=::buffer" OverloadKey="::vl::ObjectString`1::operator !=(* const T)const::buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &gt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;" OverloadKey="::vl::ObjectString`1::operator &gt;(* const T)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;::buffer" OverloadKey="::vl::ObjectString`1::operator &gt;(* const T)const::buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &gt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;=" OverloadKey="::vl::ObjectString`1::operator &gt;=(* const T)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;=::buffer" OverloadKey="::vl::ObjectString`1::operator &gt;=(* const T)const::buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &lt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;" OverloadKey="::vl::ObjectString`1::operator &lt;(* const T)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;::buffer" OverloadKey="::vl::ObjectString`1::operator &lt;(* const T)const::buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &lt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;=" OverloadKey="::vl::ObjectString`1::operator &lt;=(* const T)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;=::buffer" OverloadKey="::vl::ObjectString`1::operator &lt;=(* const T)const::buffer" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator []" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator []" OverloadKey="::vl::ObjectString`1::operator [](vint)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator []::index" OverloadKey="::vl::ObjectString`1::operator [](vint)const::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Length" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Length" OverloadKey="::vl::ObjectString`1::Length()const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get the size of the string in characters.&lt;/summary&gt;
  &lt;returns&gt;The size.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="IndexOf" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::IndexOf" OverloadKey="::vl::ObjectString`1::IndexOf(T)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Find a character.&lt;/summary&gt;
  &lt;returns&gt;The position of the character. Returns -1 if it doesn not exist.&lt;/returns&gt;
  &lt;param name="c"&gt;The character to find.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="c" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::IndexOf::c" OverloadKey="::vl::ObjectString`1::IndexOf(T)const::c" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Left" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Left" OverloadKey="::vl::ObjectString`1::Left(vint)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Copy the beginning of the string.&lt;/summary&gt;
  &lt;returns&gt;The copied string.&lt;/returns&gt;
  &lt;param name="count"&gt;Size of characters to copy.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Left::count" OverloadKey="::vl::ObjectString`1::Left(vint)const::count" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Right" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Right" OverloadKey="::vl::ObjectString`1::Right(vint)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Copy the ending of the string.&lt;/summary&gt;
  &lt;returns&gt;The copied string.&lt;/returns&gt;
  &lt;param name="count"&gt;Size of characters to copy.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Right::count" OverloadKey="::vl::ObjectString`1::Right(vint)const::count" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Sub" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Sub" OverloadKey="::vl::ObjectString`1::Sub(vint,vint)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Copy the middle of the string.&lt;/summary&gt;
  &lt;returns&gt;The copied string.&lt;/returns&gt;
  &lt;param name="index"&gt;Position of characters to copy.&lt;/param&gt;
  &lt;param name="count"&gt;Size of characters to copy.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Sub::index" OverloadKey="::vl::ObjectString`1::Sub(vint,vint)const::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Sub::count" OverloadKey="::vl::ObjectString`1::Sub(vint,vint)const::count" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Remove" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Remove" OverloadKey="::vl::ObjectString`1::Remove(vint,vint)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Copy the beginning and the end of the string.&lt;/summary&gt;
  &lt;returns&gt;The copied string.&lt;/returns&gt;
  &lt;param name="index"&gt;Position of characters NOT to copy.&lt;/param&gt;
  &lt;param name="count"&gt;Size of characters NOT to copy.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Remove::index" OverloadKey="::vl::ObjectString`1::Remove(vint,vint)const::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Remove::count" OverloadKey="::vl::ObjectString`1::Remove(vint,vint)const::count" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Insert" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Insert" OverloadKey="::vl::ObjectString`1::Insert(vint,&amp; const ObjectString&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Make a new string by inserting a string in this string.&lt;/summary&gt;
  &lt;returns&gt;The copied string.&lt;/returns&gt;
  &lt;param name="index"&gt;Position of characters to insert.&lt;/param&gt;
  &lt;param name="string"&gt;The string to be inserted in this string.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Insert::index" OverloadKey="::vl::ObjectString`1::Insert(vint,&amp; const ObjectString&lt;T&gt;)const::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::Insert::string" OverloadKey="::vl::ObjectString`1::Insert(vint,&amp; const ObjectString&lt;T&gt;)const::string" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &lt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;" OverloadKey="::vl::ObjectString`1::operator &lt;(* const T,&amp; const ObjectString&lt;T&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="left" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;::left" OverloadKey="::vl::ObjectString`1::operator &lt;(* const T,&amp; const ObjectString&lt;T&gt;)::left" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="right" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;::right" OverloadKey="::vl::ObjectString`1::operator &lt;(* const T,&amp; const ObjectString&lt;T&gt;)::right" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &lt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;=" OverloadKey="::vl::ObjectString`1::operator &lt;=(* const T,&amp; const ObjectString&lt;T&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="left" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;=::left" OverloadKey="::vl::ObjectString`1::operator &lt;=(* const T,&amp; const ObjectString&lt;T&gt;)::left" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="right" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &lt;=::right" OverloadKey="::vl::ObjectString`1::operator &lt;=(* const T,&amp; const ObjectString&lt;T&gt;)::right" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &gt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;" OverloadKey="::vl::ObjectString`1::operator &gt;(* const T,&amp; const ObjectString&lt;T&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="left" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;::left" OverloadKey="::vl::ObjectString`1::operator &gt;(* const T,&amp; const ObjectString&lt;T&gt;)::left" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="right" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;::right" OverloadKey="::vl::ObjectString`1::operator &gt;(* const T,&amp; const ObjectString&lt;T&gt;)::right" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator &gt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;=" OverloadKey="::vl::ObjectString`1::operator &gt;=(* const T,&amp; const ObjectString&lt;T&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="left" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;=::left" OverloadKey="::vl::ObjectString`1::operator &gt;=(* const T,&amp; const ObjectString&lt;T&gt;)::left" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="right" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator &gt;=::right" OverloadKey="::vl::ObjectString`1::operator &gt;=(* const T,&amp; const ObjectString&lt;T&gt;)::right" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator ==" OverloadKey="::vl::ObjectString`1::operator ==(* const T,&amp; const ObjectString&lt;T&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="left" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator ==::left" OverloadKey="::vl::ObjectString`1::operator ==(* const T,&amp; const ObjectString&lt;T&gt;)::left" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="right" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator ==::right" OverloadKey="::vl::ObjectString`1::operator ==(* const T,&amp; const ObjectString&lt;T&gt;)::right" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator !=" OverloadKey="::vl::ObjectString`1::operator !=(* const T,&amp; const ObjectString&lt;T&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="left" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator !=::left" OverloadKey="::vl::ObjectString`1::operator !=(* const T,&amp; const ObjectString&lt;T&gt;)::left" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="right" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator !=::right" OverloadKey="::vl::ObjectString`1::operator !=(* const T,&amp; const ObjectString&lt;T&gt;)::right" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator +" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator +" OverloadKey="::vl::ObjectString`1::operator +(* const T,&amp; const ObjectString&lt;T&gt;)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="left" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator +::left" OverloadKey="::vl::ObjectString`1::operator +(* const T,&amp; const ObjectString&lt;T&gt;)::left" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="right" Tags="x64, Windows;x86, Windows" NameKey="::vl::ObjectString::operator +::right" OverloadKey="::vl::ObjectString`1::operator +(* const T,&amp; const ObjectString&lt;T&gt;)::right" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::ObjectString`1::T@s:vl.ObjectString`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>