<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)">
    <SymbolTree NamespaceUrlName="vl.collections">
      <SymbolParentMapping>
        <Map From="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)::TKey" To="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)" />
        <Map From="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)::TValueFirst" To="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)" />
        <Map From="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)::TValueSecond" To="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)" />
        <Map From="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)::TDiscardFirst" To="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)" />
        <Map From="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)::TDiscardSecond" To="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)" />
        <Map From="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)::TAccept" To="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::GroupInnerJoin`6(&amp; const Group&lt;TKey, TValueFirst&gt;,&amp; const Group&lt;TKey, TValueSecond&gt;,&amp; const TDiscardFirst,&amp; const TDiscardSecond,&amp; const TAccept)" DisplayName="GroupInnerJoin function" Doc="false" />
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>