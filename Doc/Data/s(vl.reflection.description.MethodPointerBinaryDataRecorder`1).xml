<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.MethodPointerBinaryDataRecorder`1{T,TypeDescriptorFlags.Interface}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::MethodPointerBinaryDataRecorder`1&lt;T,TypeDescriptorFlags::Interface&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::MethodPointerBinaryDataRecorder`1&lt;T,TypeDescriptorFlags::Interface&gt;::T@s:vl.reflection.description.MethodPointerBinaryDataRecorder`1{T,TypeDescriptorFlags.Interface}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeDescriptorFlags::Interface" Name="Interface">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeDescriptorFlags::Interface@s:vl.reflection.description.TypeDescriptorFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeDescriptorFlags" Name="TypeDescriptorFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeDescriptorFlags@s:vl.reflection.description.TypeDescriptorFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="MethodPointerBinaryDataRecorder" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::MethodPointerBinaryDataRecorder" OverloadKey="::vl::reflection::description::MethodPointerBinaryDataRecorder`1&lt;T,TypeDescriptorFlags::Interface&gt;" ClassType="Struct">
          <Children>
            <FuncDecl Access="Public" Name="RecordMethod" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::MethodPointerBinaryDataRecorder::RecordMethod" OverloadKey="::vl::reflection::description::MethodPointerBinaryDataRecorder`1&lt;T,TypeDescriptorFlags::Interface&gt;::RecordMethod(&amp; const MethodPointerBinaryData,* ITypeDescriptor,* IMethodInfo)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="data" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::MethodPointerBinaryDataRecorder::RecordMethod::data" OverloadKey="::vl::reflection::description::MethodPointerBinaryDataRecorder`1&lt;T,TypeDescriptorFlags::Interface&gt;::RecordMethod(&amp; const MethodPointerBinaryData,* ITypeDescriptor,* IMethodInfo)::data" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::MethodPointerBinaryData" Name="MethodPointerBinaryData">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::MethodPointerBinaryData@s:vl.reflection.description.MethodPointerBinaryData" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="td" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::MethodPointerBinaryDataRecorder::RecordMethod::td" OverloadKey="::vl::reflection::description::MethodPointerBinaryDataRecorder`1&lt;T,TypeDescriptorFlags::Interface&gt;::RecordMethod(&amp; const MethodPointerBinaryData,* ITypeDescriptor,* IMethodInfo)::td" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="methodInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::MethodPointerBinaryDataRecorder::RecordMethod::methodInfo" OverloadKey="::vl::reflection::description::MethodPointerBinaryDataRecorder`1&lt;T,TypeDescriptorFlags::Interface&gt;::RecordMethod(&amp; const MethodPointerBinaryData,* ITypeDescriptor,* IMethodInfo)::methodInfo" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IMethodInfo" Name="IMethodInfo">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::IMethodInfo@s:vl.reflection.description.IMethodInfo" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>