<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.ReferenceCounterOperator`1{T,RequiresConvertable{T, reflection.DescriptableObject}.YesNoType}">
    <SymbolTree NamespaceUrlName="vl">
      <SymbolParentMapping>
        <Map From="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::T" To="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;" DisplayName="ReferenceCounterOperator struct" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::CreateCounter(* T)" DisplayName="CreateCounter method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::DeleteReference(* volatile vint,* void)" DisplayName="DeleteReference method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>