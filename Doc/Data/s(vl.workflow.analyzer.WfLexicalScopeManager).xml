<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.WfLexicalScopeManager">
    <ClassDecl Access="Public" Name="WfLexicalScopeManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Workflow compiler.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="ITypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="IMemberInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMemberInfo" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMemberInfo">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IMemberInfo" Name="IMemberInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::IMemberInfo@s:vl.reflection.description.IMemberInfo" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ModuleList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfModule" Name="WfModule">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfModule@s:vl.workflow.WfModule" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ModuleCodeList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ParsingErrorList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ParsingErrorList" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ParsingErrorList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="NamespaceNameMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::NamespaceNameMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::NamespaceNameMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNamespaceDeclaration" Name="WfNamespaceDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfNamespaceDeclaration@s:vl.workflow.WfNamespaceDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeName" Name="WfLexicalScopeName">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeName@s:vl.workflow.analyzer.WfLexicalScopeName" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ScopeSortedList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ScopeSortedList" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ScopeSortedList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::SortedList" Name="SortedList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::SortedList`2@s:vl.collections.SortedList`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ModuleScopeMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleScopeMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleScopeMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfModule" Name="WfModule">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfModule@s:vl.workflow.WfModule" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="DeclarationScopeMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationScopeMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationScopeMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="StatementScopeMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::StatementScopeMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::StatementScopeMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ExpressionScopeMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionScopeMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionScopeMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ExpressionResolvingMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="FunctionLambdaCaptureGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::FunctionLambdaCaptureGroup" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::FunctionLambdaCaptureGroup">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Group" Name="Group">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Group`4@s:vl.collections.Group`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionDeclaration" Name="WfFunctionDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfFunctionDeclaration@s:vl.workflow.WfFunctionDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="OrderedLambdaCaptureGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::OrderedLambdaCaptureGroup" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::OrderedLambdaCaptureGroup">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Group" Name="Group">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Group`4@s:vl.collections.Group`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfOrderedLambdaExpression" Name="WfOrderedLambdaExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfOrderedLambdaExpression@s:vl.workflow.WfOrderedLambdaExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="DeclarationTypeMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationTypeMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationTypeMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor" Name="ITypeDescriptor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="DeclarationMemberInfoMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationMemberInfoMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationMemberInfoMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMemberInfo" Name="IMemberInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::IMemberInfo@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Protected" Name="modules" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::modules" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::modules" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList" Name="ModuleList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="moduleCodes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::moduleCodes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::moduleCodes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList" Name="ModuleCodeList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="usedCodeIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::usedCodeIndex" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::usedCodeIndex" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="parsingTable" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::parsingTable" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::parsingTable" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="errors" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::errors" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::errors" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ParsingErrorList" Name="ParsingErrorList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ParsingErrorList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="globalName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::globalName" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::globalName" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeName" Name="WfLexicalScopeName">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfLexicalScopeName@s:vl.workflow.analyzer.WfLexicalScopeName" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="namespaceNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::namespaceNames" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::namespaceNames" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::NamespaceNameMap" Name="NamespaceNameMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::NamespaceNameMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="analyzedScopes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::analyzedScopes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::analyzedScopes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ScopeSortedList" Name="ScopeSortedList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ScopeSortedList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="moduleScopes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::moduleScopes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::moduleScopes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleScopeMap" Name="ModuleScopeMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleScopeMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="declarationScopes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationScopes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationScopes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationScopeMap" Name="DeclarationScopeMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationScopeMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="statementScopes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::statementScopes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::statementScopes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::StatementScopeMap" Name="StatementScopeMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::StatementScopeMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="expressionScopes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::expressionScopes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::expressionScopes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionScopeMap" Name="ExpressionScopeMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionScopeMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="expressionResolvings" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::expressionResolvings" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::expressionResolvings" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap" Name="ExpressionResolvingMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="functionLambdaCaptures" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::functionLambdaCaptures" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::functionLambdaCaptures" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::FunctionLambdaCaptureGroup" Name="FunctionLambdaCaptureGroup">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::FunctionLambdaCaptureGroup@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="orderedLambdaCaptures" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::orderedLambdaCaptures" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::orderedLambdaCaptures" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::OrderedLambdaCaptureGroup" Name="OrderedLambdaCaptureGroup">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::OrderedLambdaCaptureGroup@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="declarationTypes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationTypes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationTypes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationTypeMap" Name="DeclarationTypeMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationTypeMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="declarationMemberInfos" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationMemberInfos" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationMemberInfos" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationMemberInfoMap" Name="DeclarationMemberInfoMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationMemberInfoMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="WfLexicalScopeManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::WfLexicalScopeManager" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::WfLexicalScopeManager(Ptr&lt;parsing::tabling::ParsingTable&gt;)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a Workflow compiler.&lt;/summary&gt;
  &lt;param name="_parsingTable"&gt;The workflow parser table. It can be retrived from &lt;links&gt;&lt;link cref="::vl::workflow::WfLoadTable()@s:vl.workflow.WfLoadTable" /&gt;&lt;/links&gt;.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_parsingTable" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::WfLexicalScopeManager::_parsingTable" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::WfLexicalScopeManager(Ptr&lt;parsing::tabling::ParsingTable&gt;)::_parsingTable" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~WfLexicalScopeManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::~WfLexicalScopeManager" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::~WfLexicalScopeManager()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddModule" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule(&amp; const WString)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Add a Workflow module. Syntax errors can be found at &lt;links&gt;&lt;link cref="::vl::workflow::analyzer::WfLexicalScopeManager::errors@s:vl.workflow.analyzer.WfLexicalScopeManager" /&gt;&lt;/links&gt;.&lt;/summary&gt;
  &lt;param name="moduleCode"&gt;The source code of a workflow module.&lt;/param&gt;
  &lt;returns&gt;Returns the code index, which is a number representing a module in data structured used in Workflow compiler, runtime and debugger.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="moduleCode" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule::moduleCode" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule(&amp; const WString)::moduleCode" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddModule" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule(Ptr&lt;WfModule&gt;)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Add a Workflow module.&lt;/summary&gt;
  &lt;param name="module"&gt;The syntax tree of a workflow module.&lt;/param&gt;
  &lt;returns&gt;Returns the code index, which is a number representing a module in data structured used in Workflow compiler, runtime and debugger.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="module" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule::module" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule(Ptr&lt;WfModule&gt;)::module" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfModule" Name="WfModule">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfModule@s:vl.workflow.WfModule" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetModules" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetModules" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetModules()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all added modules.&lt;/summary&gt;
  &lt;returns&gt;All added modules.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList" Name="ModuleList">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetModuleCodes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetModuleCodes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetModuleCodes()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all module codes. If a module is added from a syntax tree, then the source code is empty.&lt;/summary&gt;
  &lt;returns&gt;All module codes.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList" Name="ModuleCodeList">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Clear" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear(bool,bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Clean compiling results.&lt;/summary&gt;
  &lt;param name="keepTypeDescriptorNames"&gt;Set to false to delete all cache of reflectable C++ types.&lt;/param&gt;
  &lt;param name="deleteModules"&gt;Set to true to delete all added modules.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="keepTypeDescriptorNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear::keepTypeDescriptorNames" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear(bool,bool)::keepTypeDescriptorNames" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="deleteModules" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear::deleteModules" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear(bool,bool)::deleteModules" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Rebuild" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Compile.&lt;/summary&gt;
  &lt;param name="keepTypeDescriptorNames"&gt;Set to false to delete all cache of reflectable C++ types before compiling.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="keepTypeDescriptorNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild::keepTypeDescriptorNames" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild(bool)::keepTypeDescriptorNames" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ResolveSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveSymbol" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveSymbol(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;Ptr&lt;WfLexicalSymbol&gt;&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveSymbol::scope" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveSymbol(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;Ptr&lt;WfLexicalSymbol&gt;&gt;)::scope" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbolName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveSymbol::symbolName" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveSymbol(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;Ptr&lt;WfLexicalSymbol&gt;&gt;)::symbolName" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbols" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveSymbol::symbols" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveSymbol(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;Ptr&lt;WfLexicalSymbol&gt;&gt;)::symbols" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ResolveScopeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveScopeName" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveScopeName(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;Ptr&lt;WfLexicalScopeName&gt;&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveScopeName::scope" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveScopeName(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;Ptr&lt;WfLexicalScopeName&gt;&gt;)::scope" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbolName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveScopeName::symbolName" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveScopeName(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;Ptr&lt;WfLexicalScopeName&gt;&gt;)::symbolName" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="names" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveScopeName::names" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveScopeName(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;Ptr&lt;WfLexicalScopeName&gt;&gt;)::names" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeName" Name="WfLexicalScopeName">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::analyzer::WfLexicalScopeName@s:vl.workflow.analyzer.WfLexicalScopeName" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetDeclarationSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol(* WfLexicalScope,* WfDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol::scope" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol(* WfLexicalScope,* WfDeclaration)::scope" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol::node" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol(* WfLexicalScope,* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>