<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::stream::DecoderStream">
    <ClassDecl Access="Public" Name="DecoderStream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream" OverloadKey="::vl::stream::DecoderStream" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Decoder stream, a readable stream using an &lt;links&gt;&lt;link cref="::vl::stream::IDecoder@s:vl.stream.IDecoder" /&gt;&lt;/links&gt; to transform content.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="stream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::stream" OverloadKey="::vl::stream::DecoderStream::stream" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="decoder" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::decoder" OverloadKey="::vl::stream::DecoderStream::decoder" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::stream::IDecoder" Name="IDecoder">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::stream::IDecoder@s:vl.stream.IDecoder" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="position" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::position" OverloadKey="::vl::stream::DecoderStream::position" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
              <ReferencingOverloadKeys>
                <Key Value="::vl::pos_t@s:vl.pos_t" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="DecoderStream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::DecoderStream" OverloadKey="::vl::stream::DecoderStream::DecoderStream(&amp; IStream,&amp; IDecoder)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a stream.&lt;/summary&gt;
  &lt;param name="_stream"&gt;The target stream to read.&lt;/param&gt;
  &lt;param name="_decoder"&gt;The decoder to transform content.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_stream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::DecoderStream::_stream" OverloadKey="::vl::stream::DecoderStream::DecoderStream(&amp; IStream,&amp; IDecoder)::_stream" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_decoder" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::DecoderStream::_decoder" OverloadKey="::vl::stream::DecoderStream::DecoderStream(&amp; IStream,&amp; IDecoder)::_decoder" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::IDecoder" Name="IDecoder">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::IDecoder@s:vl.stream.IDecoder" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~DecoderStream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::~DecoderStream" OverloadKey="::vl::stream::DecoderStream::~DecoderStream()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CanRead" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::CanRead" OverloadKey="::vl::stream::DecoderStream::CanRead()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CanWrite" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::CanWrite" OverloadKey="::vl::stream::DecoderStream::CanWrite()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CanSeek" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::CanSeek" OverloadKey="::vl::stream::DecoderStream::CanSeek()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CanPeek" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::CanPeek" OverloadKey="::vl::stream::DecoderStream::CanPeek()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsLimited" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::IsLimited" OverloadKey="::vl::stream::DecoderStream::IsLimited()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsAvailable" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::IsAvailable" OverloadKey="::vl::stream::DecoderStream::IsAvailable()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Close" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Close" OverloadKey="::vl::stream::DecoderStream::Close()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Position" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Position" OverloadKey="::vl::stream::DecoderStream::Position()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::pos_t@s:vl.pos_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Size" OverloadKey="::vl::stream::DecoderStream::Size()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::pos_t@s:vl.pos_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Seek" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Seek" OverloadKey="::vl::stream::DecoderStream::Seek(pos_t)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Seek::_size" OverloadKey="::vl::stream::DecoderStream::Seek(pos_t)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::pos_t@s:vl.pos_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SeekFromBegin" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::SeekFromBegin" OverloadKey="::vl::stream::DecoderStream::SeekFromBegin(pos_t)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::SeekFromBegin::_size" OverloadKey="::vl::stream::DecoderStream::SeekFromBegin(pos_t)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::pos_t@s:vl.pos_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SeekFromEnd" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::SeekFromEnd" OverloadKey="::vl::stream::DecoderStream::SeekFromEnd(pos_t)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::SeekFromEnd::_size" OverloadKey="::vl::stream::DecoderStream::SeekFromEnd(pos_t)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::pos_t@s:vl.pos_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Read" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Read" OverloadKey="::vl::stream::DecoderStream::Read(* void,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Read::_buffer" OverloadKey="::vl::stream::DecoderStream::Read(* void,vint)::_buffer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="void" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Read::_size" OverloadKey="::vl::stream::DecoderStream::Read(* void,vint)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Write" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Write" OverloadKey="::vl::stream::DecoderStream::Write(* void,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Write::_buffer" OverloadKey="::vl::stream::DecoderStream::Write(* void,vint)::_buffer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="void" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Write::_size" OverloadKey="::vl::stream::DecoderStream::Write(* void,vint)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Peek" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Peek" OverloadKey="::vl::stream::DecoderStream::Peek(* void,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Peek::_buffer" OverloadKey="::vl::stream::DecoderStream::Peek(* void,vint)::_buffer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="void" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::DecoderStream::Peek::_size" OverloadKey="::vl::stream::DecoderStream::Peek(* void,vint)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
              <ReferencingOverloadKeys>
                <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>