<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.function_lambda.FunctionObjectRetriveType`2{^ function (... TArgs) # R}">
    <SymbolTree NamespaceUrlName="vl.function_lambda">
      <SymbolParentMapping>
        <Map From="::vl::function_lambda::FunctionObjectRetriveType`2&lt;* function (... TArgs) : R&gt;::R" To="::vl::function_lambda::FunctionObjectRetriveType`2&lt;* function (... TArgs) : R&gt;" />
        <Map From="::vl::function_lambda::FunctionObjectRetriveType`2&lt;* function (... TArgs) : R&gt;::TArgs" To="::vl::function_lambda::FunctionObjectRetriveType`2&lt;* function (... TArgs) : R&gt;" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::function_lambda::FunctionObjectRetriveType`2&lt;* function (... TArgs) : R&gt;" DisplayName="FunctionObjectRetriveType struct" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::function_lambda::FunctionObjectRetriveType`2&lt;* function (... TArgs) : R&gt;::Type" DisplayName="Type typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::function_lambda::FunctionObjectRetriveType`2&lt;* function (... TArgs) : R&gt;::FunctionType" DisplayName="FunctionType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::function_lambda::FunctionObjectRetriveType`2&lt;* function (... TArgs) : R&gt;::ResultType" DisplayName="ResultType typedecl" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>