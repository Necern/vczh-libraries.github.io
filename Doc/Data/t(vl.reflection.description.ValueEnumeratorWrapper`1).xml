<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::reflection::description::ValueEnumeratorWrapper`1">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping>
        <Map From="::vl::reflection::description::ValueEnumeratorWrapper`1::T" To="::vl::reflection::description::ValueEnumeratorWrapper`1" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueEnumeratorWrapper`1" DisplayName="ValueEnumeratorWrapper class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueEnumeratorWrapper`1::ContainerType" DisplayName="ContainerType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueEnumeratorWrapper`1::ElementType" DisplayName="ElementType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueEnumeratorWrapper`1::wrapperPointer" DisplayName="wrapperPointer field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueEnumeratorWrapper`1::ValueEnumeratorWrapper(&amp; const T)" DisplayName="ValueEnumeratorWrapper constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueEnumeratorWrapper`1::GetCurrent()" DisplayName="GetCurrent method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueEnumeratorWrapper`1::GetIndex()" DisplayName="GetIndex method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueEnumeratorWrapper`1::Next()" DisplayName="Next method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>