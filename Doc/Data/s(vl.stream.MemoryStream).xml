<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::stream::MemoryStream">
    <ClassDecl Access="Public" Name="MemoryStream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream" OverloadKey="::vl::stream::MemoryStream" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;A readable, writable, seekable and peekable stream that stores everything in memory.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="block" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::block" OverloadKey="::vl::stream::MemoryStream::block" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::buffer" OverloadKey="::vl::stream::MemoryStream::buffer" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl Name="char" />
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::size" OverloadKey="::vl::stream::MemoryStream::size" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="position" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::position" OverloadKey="::vl::stream::MemoryStream::position" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="capacity" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::capacity" OverloadKey="::vl::stream::MemoryStream::capacity" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="PrepareSpace" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::PrepareSpace" OverloadKey="::vl::stream::MemoryStream::PrepareSpace(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="totalSpace" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::PrepareSpace::totalSpace" OverloadKey="::vl::stream::MemoryStream::PrepareSpace(vint)::totalSpace" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MemoryStream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::MemoryStream" OverloadKey="::vl::stream::MemoryStream::MemoryStream(vint)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a stream.&lt;/summary&gt;
  &lt;param name="_block"&gt;Size for each allocation. The stream will only allocate new memory of size "_block" when it reaches the end and has to extend.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_block" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::MemoryStream::_block" OverloadKey="::vl::stream::MemoryStream::MemoryStream(vint)::_block" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~MemoryStream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::~MemoryStream" OverloadKey="::vl::stream::MemoryStream::~MemoryStream()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CanRead" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::CanRead" OverloadKey="::vl::stream::MemoryStream::CanRead()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CanWrite" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::CanWrite" OverloadKey="::vl::stream::MemoryStream::CanWrite()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CanSeek" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::CanSeek" OverloadKey="::vl::stream::MemoryStream::CanSeek()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CanPeek" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::CanPeek" OverloadKey="::vl::stream::MemoryStream::CanPeek()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsLimited" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::IsLimited" OverloadKey="::vl::stream::MemoryStream::IsLimited()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsAvailable" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::IsAvailable" OverloadKey="::vl::stream::MemoryStream::IsAvailable()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Close" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Close" OverloadKey="::vl::stream::MemoryStream::Close()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Position" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Position" OverloadKey="::vl::stream::MemoryStream::Position()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::pos_t@s:vl.pos_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Size" OverloadKey="::vl::stream::MemoryStream::Size()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::pos_t@s:vl.pos_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Seek" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Seek" OverloadKey="::vl::stream::MemoryStream::Seek(pos_t)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Seek::_size" OverloadKey="::vl::stream::MemoryStream::Seek(pos_t)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::pos_t@s:vl.pos_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SeekFromBegin" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::SeekFromBegin" OverloadKey="::vl::stream::MemoryStream::SeekFromBegin(pos_t)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::SeekFromBegin::_size" OverloadKey="::vl::stream::MemoryStream::SeekFromBegin(pos_t)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::pos_t@s:vl.pos_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SeekFromEnd" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::SeekFromEnd" OverloadKey="::vl::stream::MemoryStream::SeekFromEnd(pos_t)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::SeekFromEnd::_size" OverloadKey="::vl::stream::MemoryStream::SeekFromEnd(pos_t)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::pos_t" Name="pos_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::pos_t@s:vl.pos_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Read" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Read" OverloadKey="::vl::stream::MemoryStream::Read(* void,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Read::_buffer" OverloadKey="::vl::stream::MemoryStream::Read(* void,vint)::_buffer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="void" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Read::_size" OverloadKey="::vl::stream::MemoryStream::Read(* void,vint)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Write" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Write" OverloadKey="::vl::stream::MemoryStream::Write(* void,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Write::_buffer" OverloadKey="::vl::stream::MemoryStream::Write(* void,vint)::_buffer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="void" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Write::_size" OverloadKey="::vl::stream::MemoryStream::Write(* void,vint)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Peek" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Peek" OverloadKey="::vl::stream::MemoryStream::Peek(* void,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Peek::_buffer" OverloadKey="::vl::stream::MemoryStream::Peek(* void,vint)::_buffer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="void" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::Peek::_size" OverloadKey="::vl::stream::MemoryStream::Peek(* void,vint)::_size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetInternalBuffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::MemoryStream::GetInternalBuffer" OverloadKey="::vl::stream::MemoryStream::GetInternalBuffer()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl Name="void" />
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
              <ReferencingOverloadKeys>
                <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>