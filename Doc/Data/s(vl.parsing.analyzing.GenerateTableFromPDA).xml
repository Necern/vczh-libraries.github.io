<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::parsing::analyzing::GenerateTableFromPDA(Ptr&lt;definitions::ParsingDefinition&gt;,* ParsingSymbolManager,Ptr&lt;Automaton&gt;,bool,&amp; collections::List&lt;Ptr&lt;ParsingError&gt;&gt;)">
    <FuncDecl Access="Public" Name="GenerateTableFromPDA" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::GenerateTableFromPDA" OverloadKey="::vl::parsing::analyzing::GenerateTableFromPDA(Ptr&lt;definitions::ParsingDefinition&gt;,* ParsingSymbolManager,Ptr&lt;Automaton&gt;,bool,&amp; collections::List&lt;Ptr&lt;ParsingError&gt;&gt;)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="definition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::GenerateTableFromPDA::definition" OverloadKey="::vl::parsing::analyzing::GenerateTableFromPDA(Ptr&lt;definitions::ParsingDefinition&gt;,* ParsingSymbolManager,Ptr&lt;Automaton&gt;,bool,&amp; collections::List&lt;Ptr&lt;ParsingError&gt;&gt;)::definition" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinition" Name="ParsingDefinition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::definitions::ParsingDefinition@s:vl.parsing.definitions.ParsingDefinition" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="manager" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::GenerateTableFromPDA::manager" OverloadKey="::vl::parsing::analyzing::GenerateTableFromPDA(Ptr&lt;definitions::ParsingDefinition&gt;,* ParsingSymbolManager,Ptr&lt;Automaton&gt;,bool,&amp; collections::List&lt;Ptr&lt;ParsingError&gt;&gt;)::manager" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager" Name="ParsingSymbolManager">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbolManager@s:vl.parsing.analyzing.ParsingSymbolManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="jointPDA" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::GenerateTableFromPDA::jointPDA" OverloadKey="::vl::parsing::analyzing::GenerateTableFromPDA(Ptr&lt;definitions::ParsingDefinition&gt;,* ParsingSymbolManager,Ptr&lt;Automaton&gt;,bool,&amp; collections::List&lt;Ptr&lt;ParsingError&gt;&gt;)::jointPDA" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::Automaton" Name="Automaton">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::Automaton@s:vl.parsing.analyzing.Automaton" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="enableAmbiguity" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::GenerateTableFromPDA::enableAmbiguity" OverloadKey="::vl::parsing::analyzing::GenerateTableFromPDA(Ptr&lt;definitions::ParsingDefinition&gt;,* ParsingSymbolManager,Ptr&lt;Automaton&gt;,bool,&amp; collections::List&lt;Ptr&lt;ParsingError&gt;&gt;)::enableAmbiguity" Static="False">
              <Type>
                <RefTypeDecl Name="bool" />
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="errors" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::GenerateTableFromPDA::errors" OverloadKey="::vl::parsing::analyzing::GenerateTableFromPDA(Ptr&lt;definitions::ParsingDefinition&gt;,* ParsingSymbolManager,Ptr&lt;Automaton&gt;,bool,&amp; collections::List&lt;Ptr&lt;ParsingError&gt;&gt;)::errors" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <GenericTypeDecl>
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections@ns:vl.collections" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                      <TypeArguments>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>