<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.collections.CopyFrom`2(&amp; Ds,&amp; const Ss,bool)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Copy containers.&lt;/summary&gt;
  &lt;typeparam name="Ds"&gt;Type of the destination container.&lt;/typeparam&gt;
  &lt;typeparam name="Ss"&gt;Type of the source container.&lt;/typeparam&gt;
  &lt;param name="ds"&gt;The destination container.&lt;/param&gt;
  &lt;param name="ss"&gt;The source container.&lt;/param&gt;
  &lt;param name="append"&gt;Set to false to delete everything in the destination container before copying.&lt;/param&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="Ds" Tags="x86, Windows" NameKey="::vl::collections::Ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const Ss,bool)::Ds" />
        <TypeParameterDecl Access="Public" Name="Ss" Tags="x86, Windows" NameKey="::vl::collections::Ss" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const Ss,bool)::Ss" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="CopyFrom" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const Ss,bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="ds" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const Ss,bool)::ds" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::Ds" Name="Ds">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const Ss,bool)::Ds@s:vl.collections.CopyFrom`2" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="ss" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ss" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const Ss,bool)::ss" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::Ss" Name="Ss">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const Ss,bool)::Ss@s:vl.collections.CopyFrom`2" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="append" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::append" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const Ss,bool)::append" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.collections.CopyFrom`2(&amp; Ds,^ const S,vint,bool)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Copy containers.&lt;/summary&gt;
  &lt;typeparam name="Ds"&gt;Type of the destination container.&lt;/typeparam&gt;
  &lt;typeparam name="S"&gt;Type of the elements in the source container.&lt;/typeparam&gt;
  &lt;param name="ds"&gt;The destination container.&lt;/param&gt;
  &lt;param name="buffer"&gt;Pointer to the source array.&lt;/param&gt;
  &lt;param name="count"&gt;The number of elements to copy.&lt;/param&gt;
  &lt;param name="append"&gt;Set to false to delete everything in the destination container before copying.&lt;/param&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="Ds" Tags="x86, Windows" NameKey="::vl::collections::Ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,vint,bool)::Ds" />
        <TypeParameterDecl Access="Public" Name="S" Tags="x86, Windows" NameKey="::vl::collections::S" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,vint,bool)::S" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="CopyFrom" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,vint,bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="ds" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,vint,bool)::ds" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::Ds" Name="Ds">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,* const S,vint,bool)::Ds@s:vl.collections.CopyFrom`2" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::buffer" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,vint,bool)::buffer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::S" Name="S">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,* const S,vint,bool)::S@s:vl.collections.CopyFrom`2" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::count" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,vint,bool)::count" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="append" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::append" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,vint,bool)::append" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.collections.CopyFrom`2(&amp; Ds,^ const S,^ const S,bool)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Copy containers.&lt;/summary&gt;
  &lt;typeparam name="Ds"&gt;Type of the destination container.&lt;/typeparam&gt;
  &lt;typeparam name="S"&gt;Type of the elements in the source container.&lt;/typeparam&gt;
  &lt;param name="ds"&gt;The destination container.&lt;/param&gt;
  &lt;param name="begin"&gt;Pointer to the first element in the source array.&lt;/param&gt;
  &lt;param name="end"&gt;Pointer to the element after the last element in the source array.&lt;/param&gt;
  &lt;param name="append"&gt;Set to false to delete everything in the destination container before copying.&lt;/param&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="Ds" Tags="x86, Windows" NameKey="::vl::collections::Ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)::Ds" />
        <TypeParameterDecl Access="Public" Name="S" Tags="x86, Windows" NameKey="::vl::collections::S" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)::S" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="CopyFrom" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="ds" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)::ds" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::Ds" Name="Ds">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)::Ds@s:vl.collections.CopyFrom`2" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="begin" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::begin" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)::begin" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::S" Name="S">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)::S@s:vl.collections.CopyFrom`2" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="end" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::end" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)::end" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::S" Name="S">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)::S@s:vl.collections.CopyFrom`2" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="append" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::append" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,* const S,* const S,bool)::append" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.collections.CopyFrom`2(&amp; Ds,&amp; const ObjectString{S},bool)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="Ds" Tags="x86, Windows" NameKey="::vl::collections::Ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::Ds" />
        <TypeParameterDecl Access="Public" Name="S" Tags="x86, Windows" NameKey="::vl::collections::S" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::S" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="CopyFrom" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="ds" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::ds" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::Ds" Name="Ds">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::Ds@s:vl.collections.CopyFrom`2" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="ss" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ss" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::ss" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::collections::S" Name="S">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::S@s:vl.collections.CopyFrom`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="append" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::append" OverloadKey="::vl::collections::CopyFrom`2(&amp; Ds,&amp; const ObjectString&lt;S&gt;,bool)::append" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.collections.CopyFrom`2(&amp; ObjectString{D},&amp; const Ss,bool)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="D" Tags="x86, Windows" NameKey="::vl::collections::D" OverloadKey="::vl::collections::CopyFrom`2(&amp; ObjectString&lt;D&gt;,&amp; const Ss,bool)::D" />
        <TypeParameterDecl Access="Public" Name="Ss" Tags="x86, Windows" NameKey="::vl::collections::Ss" OverloadKey="::vl::collections::CopyFrom`2(&amp; ObjectString&lt;D&gt;,&amp; const Ss,bool)::Ss" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="CopyFrom" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom" OverloadKey="::vl::collections::CopyFrom`2(&amp; ObjectString&lt;D&gt;,&amp; const Ss,bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="ds" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ds" OverloadKey="::vl::collections::CopyFrom`2(&amp; ObjectString&lt;D&gt;,&amp; const Ss,bool)::ds" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::ObjectString" Name="ObjectString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::ObjectString`1@s:vl.ObjectString`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::D" Name="D">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::CopyFrom`2(&amp; ObjectString&lt;D&gt;,&amp; const Ss,bool)::D@s:vl.collections.CopyFrom`2" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="ss" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::ss" OverloadKey="::vl::collections::CopyFrom`2(&amp; ObjectString&lt;D&gt;,&amp; const Ss,bool)::ss" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::collections::Ss" Name="Ss">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::CopyFrom`2(&amp; ObjectString&lt;D&gt;,&amp; const Ss,bool)::Ss@s:vl.collections.CopyFrom`2" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="append" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::CopyFrom::append" OverloadKey="::vl::collections::CopyFrom`2(&amp; ObjectString&lt;D&gt;,&amp; const Ss,bool)::append" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>