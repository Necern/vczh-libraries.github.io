<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.elements.text.TextLine">
    <ClassDecl Access="Public" Name="TextLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine" OverloadKey="::vl::presentation::elements::text::TextLine" ClassType="Struct">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Represents a line of characters.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="BlockSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::BlockSize" OverloadKey="::vl::presentation::elements::text::TextLine::BlockSize" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="MaxWidth" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::MaxWidth" OverloadKey="::vl::presentation::elements::text::TextLine::MaxWidth" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::text" OverloadKey="::vl::presentation::elements::text::TextLine::text" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
A character buffer starts from the first character of this line.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl Name="wchar_t" />
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="att" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::att" OverloadKey="::vl::presentation::elements::text::TextLine::att" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
A extra information buffer starts from the first character of this line.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::CharAtt" Name="CharAtt">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::text::CharAtt@s:vl.presentation.elements.text.CharAtt" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="availableOffsetCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::availableOffsetCount" OverloadKey="::vl::presentation::elements::text::TextLine::availableOffsetCount" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
The number of available &lt;links&gt;&lt;link cref="::vl::presentation::elements::text::CharAtt::rightOffset@s:vl.presentation.elements.text.CharAtt" /&gt;&lt;/links&gt; in the buffer.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="bufferLength" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::bufferLength" OverloadKey="::vl::presentation::elements::text::TextLine::bufferLength" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
The number of elements in the allocated buffer memory.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="dataLength" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::dataLength" OverloadKey="::vl::presentation::elements::text::TextLine::dataLength" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
The number of available characters in the buffer.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="lexerFinalState" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::lexerFinalState" OverloadKey="::vl::presentation::elements::text::TextLine::lexerFinalState" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
The internal lexical analyzer state of a colorizer when it parses to the end of this line. -1 means that this state is not available.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="contextFinalState" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::contextFinalState" OverloadKey="::vl::presentation::elements::text::TextLine::contextFinalState" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
The internal context sensitive state of a colorizer when it parses to the end of this line. -1 means that this state is not available.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="TextLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::TextLine" OverloadKey="::vl::presentation::elements::text::TextLine::TextLine()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~TextLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::~TextLine" OverloadKey="::vl::presentation::elements::text::TextLine::~TextLine()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CalculateBufferLength" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::CalculateBufferLength" OverloadKey="::vl::presentation::elements::text::TextLine::CalculateBufferLength(vint)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="dataLength" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::CalculateBufferLength::dataLength" OverloadKey="::vl::presentation::elements::text::TextLine::CalculateBufferLength(vint)::dataLength" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::operator ==" OverloadKey="::vl::presentation::elements::text::TextLine::operator ==(&amp; const TextLine)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::operator ==::value" OverloadKey="::vl::presentation::elements::text::TextLine::operator ==(&amp; const TextLine)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::TextLine" Name="TextLine">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::elements::text::TextLine@s:vl.presentation.elements.text.TextLine" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::operator !=" OverloadKey="::vl::presentation::elements::text::TextLine::operator !=(&amp; const TextLine)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::operator !=::value" OverloadKey="::vl::presentation::elements::text::TextLine::operator !=(&amp; const TextLine)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::TextLine" Name="TextLine">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::elements::text::TextLine@s:vl.presentation.elements.text.TextLine" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Initialize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::Initialize" OverloadKey="::vl::presentation::elements::text::TextLine::Initialize()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Initialize the &lt;links&gt;&lt;link cref="::vl::presentation::elements::text::TextLine@s:vl.presentation.elements.text.TextLine" /&gt;&lt;/links&gt; instance to be an empty line.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Finalize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::Finalize" OverloadKey="::vl::presentation::elements::text::TextLine::Finalize()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Release all resources used in this line.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsReady" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::IsReady" OverloadKey="::vl::presentation::elements::text::TextLine::IsReady()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Test is the line initialized.
&lt;/summary&gt;
  &lt;returns&gt;Returns true if the line is initialized.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Modify" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::Modify" OverloadKey="::vl::presentation::elements::text::TextLine::Modify(vint,vint,* const wchar_t,vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Modify the characters in the line by replacing characters.
&lt;/summary&gt;
  &lt;returns&gt;Returns true if the modification succeeded.&lt;/returns&gt;
  &lt;param name="start"&gt;The position of the first character to be replaced.&lt;/param&gt;
  &lt;param name="count"&gt;The number of characters to be replaced.&lt;/param&gt;
  &lt;param name="input"&gt;The buffer to the characters to write into this line.&lt;/param&gt;
  &lt;param name="inputCount"&gt;The numbers of the characters to write into this line.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::Modify::start" OverloadKey="::vl::presentation::elements::text::TextLine::Modify(vint,vint,* const wchar_t,vint)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::Modify::count" OverloadKey="::vl::presentation::elements::text::TextLine::Modify(vint,vint,* const wchar_t,vint)::count" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::Modify::input" OverloadKey="::vl::presentation::elements::text::TextLine::Modify(vint,vint,* const wchar_t,vint)::input" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="inputCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::Modify::inputCount" OverloadKey="::vl::presentation::elements::text::TextLine::Modify(vint,vint,* const wchar_t,vint)::inputCount" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Split" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::Split" OverloadKey="::vl::presentation::elements::text::TextLine::Split(vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Split a text line into two by the position. The current line contains characters before this position. This function returns a new text line contains characters after this position.
&lt;/summary&gt;
  &lt;returns&gt;The new text line.&lt;/returns&gt;
  &lt;param name="index"&gt;.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::TextLine" Name="TextLine">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::text::TextLine@s:vl.presentation.elements.text.TextLine" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::Split::index" OverloadKey="::vl::presentation::elements::text::TextLine::Split(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AppendAndFinalize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::AppendAndFinalize" OverloadKey="::vl::presentation::elements::text::TextLine::AppendAndFinalize(&amp; TextLine)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Append a text line after the this text line, and finalize the input text line.
&lt;/summary&gt;
  &lt;param name="line"&gt;The text line that contains all characters and color indices to append and be finalized.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="line" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::TextLine::AppendAndFinalize::line" OverloadKey="::vl::presentation::elements::text::TextLine::AppendAndFinalize(&amp; TextLine)::line" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::text::TextLine" Name="TextLine">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements::text::TextLine@s:vl.presentation.elements.text.TextLine" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>