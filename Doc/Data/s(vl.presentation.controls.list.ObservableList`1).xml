<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.list.ObservableList`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::presentation::controls::list::T" OverloadKey="::vl::presentation::controls::list::ObservableList`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="ObservableList" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::list::ObservableList" OverloadKey="::vl::presentation::controls::list::ObservableList`1" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="observableList" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::list::ObservableList::observableList" OverloadKey="::vl::presentation::controls::list::ObservableList`1::observableList" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IValueObservableList" Name="IValueObservableList">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IValueObservableList@s:vl.reflection.description.IValueObservableList" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Protected" Name="NotifyUpdateInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::list::ObservableList::NotifyUpdateInternal" OverloadKey="::vl::presentation::controls::list::ObservableList`1::NotifyUpdateInternal(vint,vint,vint)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::list::ObservableList::NotifyUpdateInternal::start" OverloadKey="::vl::presentation::controls::list::ObservableList`1::NotifyUpdateInternal(vint,vint,vint)::start" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::list::ObservableList::NotifyUpdateInternal::count" OverloadKey="::vl::presentation::controls::list::ObservableList`1::NotifyUpdateInternal(vint,vint,vint)::count" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="newCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::list::ObservableList::NotifyUpdateInternal::newCount" OverloadKey="::vl::presentation::controls::list::ObservableList`1::NotifyUpdateInternal(vint,vint,vint)::newCount" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetWrapper" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::list::ObservableList::GetWrapper" OverloadKey="::vl::presentation::controls::list::ObservableList`1::GetWrapper()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IValueObservableList" Name="IValueObservableList">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IValueObservableList@s:vl.reflection.description.IValueObservableList" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ItemsBase" Name="ItemsBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::list::ItemsBase`2@s:vl.presentation.controls.list.ItemsBase`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::list::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::list::ObservableList`1::T@s:vl.presentation.controls.list.ObservableList`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>