<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::ObjectString`1">
    <SymbolTree NamespaceUrlName="vl">
      <SymbolParentMapping>
        <Map From="::vl::ObjectString`1::T" To="::vl::ObjectString`1" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1" DisplayName="ObjectString class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::zero" DisplayName="zero field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::buffer" DisplayName="buffer field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::counter" DisplayName="counter field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::start" DisplayName="start field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::length" DisplayName="length field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::realLength" DisplayName="realLength field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::CalculateLength(* const T)" DisplayName="CalculateLength method" Doc="false" />
        <Overloads DisplayName="Compare method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Compare(* const T,&amp; const ObjectString&lt;T&gt;)" DisplayName="Compare method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Compare(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;)" DisplayName="Compare method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Inc()const" DisplayName="Inc method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Dec()const" DisplayName="Dec method" Doc="false" />
        <Overloads DisplayName="ObjectString constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,vint,vint)" DisplayName="ObjectString constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;,&amp; const ObjectString&lt;T&gt;,vint,vint)" DisplayName="ObjectString constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::ObjectString()" DisplayName="ObjectString constructor" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::ObjectString(&amp; const T)" DisplayName="ObjectString constructor" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::ObjectString(* const T,vint)" DisplayName="ObjectString constructor" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::ObjectString(* const T,bool)" DisplayName="ObjectString constructor" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::ObjectString(&amp; const ObjectString&lt;T&gt;)" DisplayName="ObjectString constructor" Doc="true" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::ObjectString(&amp;&amp; ObjectString&lt;T&gt;)" DisplayName="ObjectString constructor" Doc="true" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Empty" DisplayName="Empty field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::~ObjectString()" DisplayName="~ObjectString destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Buffer()const" DisplayName="Buffer method" Doc="true" />
        <Overloads DisplayName="operator = method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator =(&amp; const ObjectString&lt;T&gt;)" DisplayName="operator = method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator =(&amp;&amp; ObjectString&lt;T&gt;)" DisplayName="operator = method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator +=(&amp; const ObjectString&lt;T&gt;)" DisplayName="operator += method" Doc="false" />
        <Overloads DisplayName="operator + method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator +(&amp; const ObjectString&lt;T&gt;)const" DisplayName="operator + method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator +(* const T,&amp; const ObjectString&lt;T&gt;)" DisplayName="operator + method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator == method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator ==(&amp; const ObjectString&lt;T&gt;)const" DisplayName="operator == method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator ==(* const T)const" DisplayName="operator == method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator ==(* const T,&amp; const ObjectString&lt;T&gt;)" DisplayName="operator == method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator != method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator !=(&amp; const ObjectString&lt;T&gt;)const" DisplayName="operator != method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator !=(* const T)const" DisplayName="operator != method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator !=(* const T,&amp; const ObjectString&lt;T&gt;)" DisplayName="operator != method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &gt; method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &gt;(&amp; const ObjectString&lt;T&gt;)const" DisplayName="operator &gt; method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &gt;(* const T)const" DisplayName="operator &gt; method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &gt;(* const T,&amp; const ObjectString&lt;T&gt;)" DisplayName="operator &gt; method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &gt;= method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &gt;=(&amp; const ObjectString&lt;T&gt;)const" DisplayName="operator &gt;= method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &gt;=(* const T)const" DisplayName="operator &gt;= method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &gt;=(* const T,&amp; const ObjectString&lt;T&gt;)" DisplayName="operator &gt;= method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &lt; method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &lt;(&amp; const ObjectString&lt;T&gt;)const" DisplayName="operator &lt; method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &lt;(* const T)const" DisplayName="operator &lt; method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &lt;(* const T,&amp; const ObjectString&lt;T&gt;)" DisplayName="operator &lt; method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="operator &lt;= method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &lt;=(&amp; const ObjectString&lt;T&gt;)const" DisplayName="operator &lt;= method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &lt;=(* const T)const" DisplayName="operator &lt;= method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator &lt;=(* const T,&amp; const ObjectString&lt;T&gt;)" DisplayName="operator &lt;= method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::operator [](vint)const" DisplayName="operator [] method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Length()const" DisplayName="Length method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::IndexOf(T)const" DisplayName="IndexOf method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Left(vint)const" DisplayName="Left method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Right(vint)const" DisplayName="Right method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Sub(vint,vint)const" DisplayName="Sub method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Remove(vint,vint)const" DisplayName="Remove method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::ObjectString`1::Insert(vint,&amp; const ObjectString&lt;T&gt;)const" DisplayName="Insert method" Doc="true" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>