<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.regex_internal.RichInterpretor">
    <ClassDecl Access="Public" Name="RichInterpretor" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor" OverloadKey="::vl::regex_internal::RichInterpretor" ClassType="Class">
      <Children>
        <ClassDecl Access="Protected" Name="UserData" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::UserData" OverloadKey="::vl::regex_internal::RichInterpretor::UserData" ClassType="Class">
          <Children>
            <VarDecl Access="Public" Name="NeedKeepState" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::UserData::NeedKeepState" OverloadKey="::vl::regex_internal::RichInterpretor::UserData::NeedKeepState" Static="False">
              <Type>
                <RefTypeDecl Name="bool" />
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <VarDecl Access="Protected" Name="dfa" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::dfa" OverloadKey="::vl::regex_internal::RichInterpretor::dfa" Static="False">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::regex_internal::Automaton::Ref" Name="Ref">
              <ReferencingOverloadKeys>
                <Key Value="::vl::regex_internal::Automaton::Ref@s:vl.regex_internal.Automaton" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::regex_internal::Automaton" Name="Automaton">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::regex_internal::Automaton@s:vl.regex_internal.Automaton" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="datas" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::datas" OverloadKey="::vl::regex_internal::RichInterpretor::datas" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::regex_internal::RichInterpretor::UserData" Name="UserData">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::regex_internal::RichInterpretor::UserData@s:vl.regex_internal.RichInterpretor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="RichInterpretor" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::RichInterpretor" OverloadKey="::vl::regex_internal::RichInterpretor::RichInterpretor(Automaton::Ref)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_dfa" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::RichInterpretor::_dfa" OverloadKey="::vl::regex_internal::RichInterpretor::RichInterpretor(Automaton::Ref)::_dfa" Static="False">
                  <Type>
                    <SubTypeDecl ReferencingNameKey="::vl::regex_internal::Automaton::Ref" Name="Ref">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex_internal::Automaton::Ref@s:vl.regex_internal.Automaton" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex_internal::Automaton" Name="Automaton">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex_internal::Automaton@s:vl.regex_internal.Automaton" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~RichInterpretor" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::~RichInterpretor" OverloadKey="::vl::regex_internal::RichInterpretor::~RichInterpretor()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MatchHead" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::MatchHead" OverloadKey="::vl::regex_internal::RichInterpretor::MatchHead(* const wchar_t,* const wchar_t,&amp; RichResult)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::MatchHead::input" OverloadKey="::vl::regex_internal::RichInterpretor::MatchHead(* const wchar_t,* const wchar_t,&amp; RichResult)::input" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::MatchHead::start" OverloadKey="::vl::regex_internal::RichInterpretor::MatchHead(* const wchar_t,* const wchar_t,&amp; RichResult)::start" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::MatchHead::result" OverloadKey="::vl::regex_internal::RichInterpretor::MatchHead(* const wchar_t,* const wchar_t,&amp; RichResult)::result" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::regex_internal::RichResult" Name="RichResult">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex_internal::RichResult@s:vl.regex_internal.RichResult" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Match" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::Match" OverloadKey="::vl::regex_internal::RichInterpretor::Match(* const wchar_t,* const wchar_t,&amp; RichResult)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::Match::input" OverloadKey="::vl::regex_internal::RichInterpretor::Match(* const wchar_t,* const wchar_t,&amp; RichResult)::input" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::Match::start" OverloadKey="::vl::regex_internal::RichInterpretor::Match(* const wchar_t,* const wchar_t,&amp; RichResult)::start" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::Match::result" OverloadKey="::vl::regex_internal::RichInterpretor::Match(* const wchar_t,* const wchar_t,&amp; RichResult)::result" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::regex_internal::RichResult" Name="RichResult">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex_internal::RichResult@s:vl.regex_internal.RichResult" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CaptureNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::RichInterpretor::CaptureNames" OverloadKey="::vl::regex_internal::RichInterpretor::CaptureNames()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>