<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.ThreadPoolLite">
    <ClassDecl Access="Public" Name="ThreadPoolLite" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite" OverloadKey="::vl::ThreadPoolLite" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;A light-weight thread pool.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Private" Name="ThreadPoolLite" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite::ThreadPoolLite" OverloadKey="::vl::ThreadPoolLite::ThreadPoolLite()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Private" Name="~ThreadPoolLite" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite::~ThreadPoolLite" OverloadKey="::vl::ThreadPoolLite::~ThreadPoolLite()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Queue" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite::Queue" OverloadKey="::vl::ThreadPoolLite::Queue(* function (* void) : void,* void)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Queue a function pointer.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="proc"&gt;The function pointer.&lt;/param&gt;
  &lt;param name="argument"&gt;The argument to call the function pointer.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="proc" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite::Queue::proc" OverloadKey="::vl::ThreadPoolLite::Queue(* function (* void) : void,* void)::proc" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <FunctionTypeDecl CallingConvention="Default" Const="False">
                          <ReturnType>
                            <RefTypeDecl Name="void" />
                          </ReturnType>
                          <Parameters>
                            <VarDecl Access="Public" Static="False">
                              <Type>
                                <DecorateTypeDecl Decoration="Pointer">
                                  <Element>
                                    <RefTypeDecl Name="void" />
                                  </Element>
                                </DecorateTypeDecl>
                              </Type>
                            </VarDecl>
                          </Parameters>
                        </FunctionTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="argument" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite::Queue::argument" OverloadKey="::vl::ThreadPoolLite::Queue(* function (* void) : void,* void)::argument" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="void" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Queue" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite::Queue" OverloadKey="::vl::ThreadPoolLite::Queue(&amp; const Func&lt;function () : void&gt;)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Queue a function object.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="proc"&gt;The function object.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="proc" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite::Queue::proc" OverloadKey="::vl::ThreadPoolLite::Queue(&amp; const Func&lt;function () : void&gt;)::proc" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Func`1@s:vl.Func`1" />
                                    <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <FunctionTypeDecl CallingConvention="Default" Const="False">
                                  <ReturnType>
                                    <RefTypeDecl Name="void" />
                                  </ReturnType>
                                  <Parameters />
                                </FunctionTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <TemplateDecl Access="Public" Tags="x86, Windows">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Queue a lambda expression.&lt;/summary&gt;
  &lt;typeparam name="T"&gt;The type of the lambda expression.&lt;/typeparam&gt;
  &lt;param name="proc"&gt;The lambda expression.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <TypeParameters>
            <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::ThreadPoolLite::T" OverloadKey="::vl::ThreadPoolLite::QueueLambda`1(&amp; const T)::T" />
          </TypeParameters>
          <Specialization />
          <Element>
            <FuncDecl Access="Public" Name="QueueLambda" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite::QueueLambda" OverloadKey="::vl::ThreadPoolLite::QueueLambda`1(&amp; const T)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="proc" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadPoolLite::QueueLambda::proc" OverloadKey="::vl::ThreadPoolLite::QueueLambda`1(&amp; const T)::proc" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::ThreadPoolLite::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::ThreadPoolLite::QueueLambda`1(&amp; const T)::T@s:vl.ThreadPoolLite" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Element>
        </TemplateDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>