<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.parsing.tabling.ParsingTreeBuilder">
    <ClassDecl Access="Public" Name="ParsingTreeBuilder" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder" ClassType="Class">
      <Children>
        <VarDecl Access="Protected" Name="createdObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::createdObject" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::createdObject" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="operationTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::operationTarget" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::operationTarget" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="nodeStack" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::nodeStack" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::nodeStack" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="processingAmbiguityBranch" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::processingAmbiguityBranch" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::processingAmbiguityBranch" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ambiguityBranchCreatedObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityBranchCreatedObject" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityBranchCreatedObject" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ambiguityBranchOperationTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityBranchOperationTarget" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityBranchOperationTarget" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ambiguityBranchSharedNodeCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityBranchSharedNodeCount" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityBranchSharedNodeCount" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ambiguityBranchNodeStack" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityBranchNodeStack" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityBranchNodeStack" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ambiguityNodes" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityNodes" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::ambiguityNodes" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="ParsingTreeBuilder" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::ParsingTreeBuilder" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::ParsingTreeBuilder()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~ParsingTreeBuilder" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::~ParsingTreeBuilder" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::~ParsingTreeBuilder()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Reset" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::Reset" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::Reset()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Run" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::Run" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::Run(&amp; const ParsingState::TransitionResult)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::Run::result" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::Run(&amp; const ParsingState::TransitionResult)::result" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::TransitionResult" Name="TransitionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling::ParsingState::TransitionResult@s:vl.parsing.tabling.ParsingState" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState" Name="ParsingState">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingState@s:vl.parsing.tabling.ParsingState" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetProcessingAmbiguityBranch" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::GetProcessingAmbiguityBranch" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::GetProcessingAmbiguityBranch()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetNode" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTreeBuilder::GetNode" OverloadKey="::vl::parsing::tabling::ParsingTreeBuilder::GetNode()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTransitionProcessor" Name="ParsingTransitionProcessor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::tabling::ParsingTransitionProcessor@s:vl.parsing.tabling.ParsingTransitionProcessor" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>