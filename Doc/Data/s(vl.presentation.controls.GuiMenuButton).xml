<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.GuiMenuButton">
    <ClassDecl Access="Public" Name="GuiMenuButton" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton" OverloadKey="::vl::presentation::controls::GuiMenuButton" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Menu item.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <ClassDecl Access="Public" Name="IStyleController" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController" ClassType="Class">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Style controller interface for &lt;links&gt;&lt;link cref="::vl::presentation::controls::GuiMenuButton@s:vl.presentation.controls.GuiMenuButton" /&gt;&lt;/links&gt;.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <FuncDecl Access="Public" Name="CreateSubMenuStyleController" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::CreateSubMenuStyleController" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::CreateSubMenuStyleController()" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Create a style controller for the sub menu.&lt;/summary&gt;
  &lt;returns&gt;The style controller for the sub menu.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiWindow::IStyleController" Name="IStyleController">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiWindow::IStyleController@s:vl.presentation.controls.GuiWindow" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="SetSubMenuExisting" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetSubMenuExisting" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetSubMenuExisting(bool)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Notify that the sub menu is created or destroyed.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true if the sub menu is created.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetSubMenuExisting::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetSubMenuExisting(bool)::value" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="SetSubMenuOpening" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetSubMenuOpening" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetSubMenuOpening(bool)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Notify that the sub menu is opened or closed.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true if the sub menu is opened.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetSubMenuOpening::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetSubMenuOpening(bool)::value" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetSubMenuHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::GetSubMenuHost" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::GetSubMenuHost()" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get the button control that is expected to be associated with a sub menu.&lt;/summary&gt;
  &lt;returns&gt;The button control that is expected to be associated with a sub menu. Returns null means that the sub menu will be directly associated to the menu button.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiButton" Name="GuiButton">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiButton@s:vl.presentation.controls.GuiButton" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="SetImage" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetImage" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetImage(Ptr&lt;GuiImageData&gt;)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Notify that the image for the menu button is changed.&lt;/summary&gt;
  &lt;param name="value"&gt;The image for the menu button.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetImage::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetImage(Ptr&lt;GuiImageData&gt;)::value" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::GuiImageData" Name="GuiImageData">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::GuiImageData@s:vl.presentation.GuiImageData" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="SetShortcutText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetShortcutText" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetShortcutText(&amp; const WString)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Notify that the shortcut key text for the menu button is changed.&lt;/summary&gt;
  &lt;param name="value"&gt;The shortcut key text for the menu button.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetShortcutText::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::IStyleController::SetShortcutText(&amp; const WString)::value" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::WString@s:vl.WString" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton::IStyleController" Name="IStyleController">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiSelectableButton::IStyleController@s:vl.presentation.controls.GuiSelectableButton" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton" Name="GuiSelectableButton">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiSelectableButton@s:vl.presentation.controls.GuiSelectableButton" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                        <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                        <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenuButton::IStyleController" Name="IStyleController">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiMenuButton::IStyleController@s:vl.presentation.controls.GuiMenuButton" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <VarDecl Access="Protected" Name="styleController" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::styleController" OverloadKey="::vl::presentation::controls::GuiMenuButton::styleController" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenuButton::IStyleController" Name="IStyleController">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiMenuButton::IStyleController@s:vl.presentation.controls.GuiMenuButton" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="image" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::image" OverloadKey="::vl::presentation::controls::GuiMenuButton::image" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::GuiImageData" Name="GuiImageData">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::GuiImageData@s:vl.presentation.GuiImageData" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="shortcutText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::shortcutText" OverloadKey="::vl::presentation::controls::GuiMenuButton::shortcutText" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="subMenu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::subMenu" OverloadKey="::vl::presentation::controls::GuiMenuButton::subMenu" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ownedSubMenu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::ownedSubMenu" OverloadKey="::vl::presentation::controls::GuiMenuButton::ownedSubMenu" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="preferredMenuClientSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::preferredMenuClientSize" OverloadKey="::vl::presentation::controls::GuiMenuButton::preferredMenuClientSize" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ownerMenuService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::ownerMenuService" OverloadKey="::vl::presentation::controls::GuiMenuButton::ownerMenuService" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService" Name="IGuiMenuService">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::IGuiMenuService@s:vl.presentation.controls.IGuiMenuService" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="cascadeAction" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::cascadeAction" OverloadKey="::vl::presentation::controls::GuiMenuButton::cascadeAction" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="GetSubMenuHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetSubMenuHost" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetSubMenuHost()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiButton" Name="GuiButton">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiButton@s:vl.presentation.controls.GuiButton" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OpenSubMenuInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OpenSubMenuInternal" OverloadKey="::vl::presentation::controls::GuiMenuButton::OpenSubMenuInternal()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnParentLineChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnParentLineChanged" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnParentLineChanged()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="IsAltAvailable" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IsAltAvailable" OverloadKey="::vl::presentation::controls::GuiMenuButton::IsAltAvailable()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="GetActivatingAltHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetActivatingAltHost" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetActivatingAltHost()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiAltActionHost" Name="IGuiAltActionHost">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::IGuiAltActionHost@s:vl.presentation.compositions.IGuiAltActionHost" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnSubMenuWindowOpened" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowOpened" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowOpened(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="sender" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowOpened::sender" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowOpened(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::sender" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowOpened::arguments" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowOpened(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiEventArgs" Name="GuiEventArgs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiEventArgs@s:vl.presentation.compositions.GuiEventArgs" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnSubMenuWindowClosed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowClosed" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowClosed(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="sender" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowClosed::sender" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowClosed(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::sender" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowClosed::arguments" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnSubMenuWindowClosed(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiEventArgs" Name="GuiEventArgs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiEventArgs@s:vl.presentation.compositions.GuiEventArgs" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnMouseEnter" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnMouseEnter" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnMouseEnter(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="sender" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnMouseEnter::sender" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnMouseEnter(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::sender" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnMouseEnter::arguments" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnMouseEnter(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiEventArgs" Name="GuiEventArgs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiEventArgs@s:vl.presentation.compositions.GuiEventArgs" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnClicked" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnClicked" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnClicked(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="sender" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnClicked::sender" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnClicked(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::sender" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::OnClicked::arguments" OverloadKey="::vl::presentation::controls::GuiMenuButton::OnClicked(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiEventArgs" Name="GuiEventArgs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiEventArgs@s:vl.presentation.compositions.GuiEventArgs" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="GetSubMenuDirection" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetSubMenuDirection" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetSubMenuDirection()" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService::Direction" Name="Direction">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::IGuiMenuService::Direction@s:vl.presentation.controls.IGuiMenuService" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService" Name="IGuiMenuService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::IGuiMenuService@s:vl.presentation.controls.IGuiMenuService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiMenuButton" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GuiMenuButton" OverloadKey="::vl::presentation::controls::GuiMenuButton::GuiMenuButton(* IStyleController)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a control with a specified style controller.&lt;/summary&gt;
  &lt;param name="_styleController"&gt;The style controller.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_styleController" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GuiMenuButton::_styleController" OverloadKey="::vl::presentation::controls::GuiMenuButton::GuiMenuButton(* IStyleController)::_styleController" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenuButton::IStyleController" Name="IStyleController">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiMenuButton::IStyleController@s:vl.presentation.controls.GuiMenuButton" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiMenuButton" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::~GuiMenuButton" OverloadKey="::vl::presentation::controls::GuiMenuButton::~GuiMenuButton()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Public" Name="SubMenuOpeningChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SubMenuOpeningChanged" OverloadKey="::vl::presentation::controls::GuiMenuButton::SubMenuOpeningChanged" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Sub menu opening changed event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="ImageChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::ImageChanged" OverloadKey="::vl::presentation::controls::GuiMenuButton::ImageChanged" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Image changed event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="ShortcutTextChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::ShortcutTextChanged" OverloadKey="::vl::presentation::controls::GuiMenuButton::ShortcutTextChanged" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Shortcut text changed event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="GetImage" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetImage" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetImage()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the image for the menu button.&lt;/summary&gt;
  &lt;returns&gt;The image for the menu button.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::GuiImageData" Name="GuiImageData">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::GuiImageData@s:vl.presentation.GuiImageData" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetImage" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetImage" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetImage(Ptr&lt;GuiImageData&gt;)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the image for the menu button.&lt;/summary&gt;
  &lt;param name="value"&gt;The image for the menu button.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetImage::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetImage(Ptr&lt;GuiImageData&gt;)::value" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::GuiImageData" Name="GuiImageData">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::GuiImageData@s:vl.presentation.GuiImageData" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetShortcutText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetShortcutText" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetShortcutText()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the shortcut key text for the menu button.&lt;/summary&gt;
  &lt;returns&gt;The shortcut key text for the menu button.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetShortcutText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetShortcutText" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetShortcutText(&amp; const WString)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the shortcut key text for the menu button.&lt;/summary&gt;
  &lt;param name="value"&gt;The shortcut key text for the menu button.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetShortcutText::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetShortcutText(&amp; const WString)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsSubMenuExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::IsSubMenuExists" OverloadKey="::vl::presentation::controls::GuiMenuButton::IsSubMenuExists()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test does the sub menu exist.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the sub menu exists.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetSubMenu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetSubMenu" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetSubMenu()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the sub menu. If the sub menu is not created, it returns null.&lt;/summary&gt;
  &lt;returns&gt;The sub menu.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CreateSubMenu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::CreateSubMenu" OverloadKey="::vl::presentation::controls::GuiMenuButton::CreateSubMenu(* GuiMenu::IStyleController)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create the sub menu if necessary. The created sub menu is owned by this menu button.&lt;/summary&gt;
  &lt;returns&gt;The created sub menu.&lt;/returns&gt;
  &lt;param name="subMenuStyleController"&gt;The style controller for the sub menu. If this argument is null, it will call &lt;links&gt;&lt;link cref="::vl::presentation::controls::GuiMenuButton::IStyleController::CreateSubMenuStyleController()@s:vl.presentation.controls.GuiMenuButton" /&gt;&lt;/links&gt; for a style controller.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="subMenuStyleController" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::CreateSubMenu::subMenuStyleController" OverloadKey="::vl::presentation::controls::GuiMenuButton::CreateSubMenu(* GuiMenu::IStyleController)::subMenuStyleController" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiWindow::IStyleController" Name="IStyleController">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiWindow::IStyleController@s:vl.presentation.controls.GuiWindow" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetSubMenu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetSubMenu" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetSubMenu(* GuiMenu,bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Associate a sub menu if there is no sub menu binded in this menu button. The associated sub menu is not owned by this menu button if the "owned" argument is set to false.&lt;/summary&gt;
  &lt;param name="value"&gt;The sub menu to associate.&lt;/param&gt;
  &lt;param name="owned"&gt;Set to true if the menu is expected to be owned.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetSubMenu::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetSubMenu(* GuiMenu,bool)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="owned" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetSubMenu::owned" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetSubMenu(* GuiMenu,bool)::owned" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DestroySubMenu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::DestroySubMenu" OverloadKey="::vl::presentation::controls::GuiMenuButton::DestroySubMenu()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Destroy the sub menu if necessary.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetOwnedSubMenu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetOwnedSubMenu" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetOwnedSubMenu()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the sub menu owned by this menu button. If the sub menu is owned, both deleting this menu button or calling &lt;links&gt;&lt;link cref="::vl::presentation::controls::GuiMenuButton::DestroySubMenu()@s:vl.presentation.controls.GuiMenuButton" /&gt;&lt;/links&gt; will delete the sub menu.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the sub menu is owned by this menu button.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetSubMenuOpening" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetSubMenuOpening" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetSubMenuOpening()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the sub menu opened.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the sub menu is opened.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetSubMenuOpening" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetSubMenuOpening" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetSubMenuOpening(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Open or close the sub menu.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true to open the sub menu.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetSubMenuOpening::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetSubMenuOpening(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetPreferredMenuClientSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetPreferredMenuClientSize" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetPreferredMenuClientSize()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the preferred client size for the sub menu.&lt;/summary&gt;
  &lt;returns&gt;The preferred client size for the sub menu.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetPreferredMenuClientSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetPreferredMenuClientSize" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetPreferredMenuClientSize(Size)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the preferred client size for the sub menu.&lt;/summary&gt;
  &lt;param name="value"&gt;The preferred client size for the sub menu.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetPreferredMenuClientSize::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetPreferredMenuClientSize(Size)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCascadeAction" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::GetCascadeAction" OverloadKey="::vl::presentation::controls::GuiMenuButton::GetCascadeAction()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is cascade action enabled. If the cascade action is enabled, when the mouse enter this menu button, the sub menu will be automatically opened if the parent menu is in an active state (see &lt;links&gt;&lt;link cref="::vl::presentation::controls::IGuiMenuService::IsActiveState()@s:vl.presentation.controls.IGuiMenuService" /&gt;&lt;/links&gt;), closing the sub menu will also close the parent menu.&lt;/summary&gt;
  &lt;returns&gt;Returns true if cascade action is enabled.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetCascadeAction" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetCascadeAction" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetCascadeAction(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Enable or disable cascade action.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true to enable cascade action.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuButton::SetCascadeAction::value" OverloadKey="::vl::presentation::controls::GuiMenuButton::SetCascadeAction(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton" Name="GuiSelectableButton">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiSelectableButton@s:vl.presentation.controls.GuiSelectableButton" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenuButton" Name="GuiMenuButton">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiMenuButton@s:vl.presentation.controls.GuiMenuButton" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>