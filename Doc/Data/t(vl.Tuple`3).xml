<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.Tuple`3{T0,T1,T2}">
    <SymbolTree NamespaceUrlName="vl">
      <SymbolParentMapping>
        <Map From="::vl::Tuple`3&lt;T0,T1,T2&gt;::T0" To="::vl::Tuple`3&lt;T0,T1,T2&gt;" />
        <Map From="::vl::Tuple`3&lt;T0,T1,T2&gt;::T1" To="::vl::Tuple`3&lt;T0,T1,T2&gt;" />
        <Map From="::vl::Tuple`3&lt;T0,T1,T2&gt;::T2" To="::vl::Tuple`3&lt;T0,T1,T2&gt;" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;" DisplayName="Tuple class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::f0" DisplayName="f0 field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::f1" DisplayName="f1 field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::f2" DisplayName="f2 field" Doc="false" />
        <Overloads DisplayName="Tuple constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::Tuple()" DisplayName="Tuple constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::Tuple(T0,T1,T2)" DisplayName="Tuple constructor" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::Compare(&amp; const Tuple&lt;T0, T1, T2&gt;,&amp; const Tuple&lt;T0, T1, T2&gt;)" DisplayName="Compare method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::operator ==(&amp; const Tuple&lt;T0, T1, T2&gt;)const" DisplayName="operator == method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::operator !=(&amp; const Tuple&lt;T0, T1, T2&gt;)const" DisplayName="operator != method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::operator &lt;(&amp; const Tuple&lt;T0, T1, T2&gt;)const" DisplayName="operator &lt; method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::operator &lt;=(&amp; const Tuple&lt;T0, T1, T2&gt;)const" DisplayName="operator &lt;= method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::operator &gt;(&amp; const Tuple&lt;T0, T1, T2&gt;)const" DisplayName="operator &gt; method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::Tuple`3&lt;T0,T1,T2&gt;::operator &gt;=(&amp; const Tuple&lt;T0, T1, T2&gt;)const" DisplayName="operator &gt;= method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>