<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="TObject" Tags="x86, Windows" NameKey="::vl::function_lambda::TObject" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::TObject" />
        <TypeParameterDecl Access="Public" Name="R" Tags="x86, Windows" NameKey="::vl::function_lambda::R" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::R" />
        <TypeParameterDecl Access="Public" Name="TArgs" Tags="x86, Windows" NameKey="::vl::function_lambda::TArgs" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::TArgs" />
      </TypeParameters>
      <Specialization>
        <DecorateTypeDecl Decoration="Pointer">
          <Element>
            <ClassMemberTypeDecl>
              <Element>
                <FunctionTypeDecl CallingConvention="ThisCall" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::function_lambda::R" Name="R">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::R@s:vl.function_lambda.LambdaRetriveType`3" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::function_lambda::TArgs" Name="TArgs">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::TArgs@s:vl.function_lambda.LambdaRetriveType`3" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Element>
              <ClassType>
                <RefTypeDecl ReferencingNameKey="::vl::function_lambda::TObject" Name="TObject">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::TObject@s:vl.function_lambda.LambdaRetriveType`3" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ClassType>
            </ClassMemberTypeDecl>
          </Element>
        </DecorateTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="LambdaRetriveType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::LambdaRetriveType" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::LambdaRetriveType::Type" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::Type">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl ReferencingNameKey="::vl::function_lambda::R" Name="R">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::R@s:vl.function_lambda.LambdaRetriveType`3" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Static="False">
                          <Type>
                            <VariadicArgumentTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::function_lambda::TArgs" Name="TArgs">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::TArgs@s:vl.function_lambda.LambdaRetriveType`3" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </VariadicArgumentTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="FunctionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::LambdaRetriveType::FunctionType" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::FunctionType">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::function_lambda::R" Name="R">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::R@s:vl.function_lambda.LambdaRetriveType`3" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::function_lambda::TArgs" Name="TArgs">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::TArgs@s:vl.function_lambda.LambdaRetriveType`3" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::LambdaRetriveType::ResultType" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::ResultType">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::function_lambda::R" Name="R">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall const (... TArgs) : R)&gt;::R@s:vl.function_lambda.LambdaRetriveType`3" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="TObject" Tags="x86, Windows" NameKey="::vl::function_lambda::TObject" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::TObject" />
        <TypeParameterDecl Access="Public" Name="R" Tags="x86, Windows" NameKey="::vl::function_lambda::R" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::R" />
        <TypeParameterDecl Access="Public" Name="TArgs" Tags="x86, Windows" NameKey="::vl::function_lambda::TArgs" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::TArgs" />
      </TypeParameters>
      <Specialization>
        <DecorateTypeDecl Decoration="Pointer">
          <Element>
            <ClassMemberTypeDecl>
              <Element>
                <FunctionTypeDecl CallingConvention="ThisCall" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::function_lambda::R" Name="R">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::R@s:vl.function_lambda.LambdaRetriveType`3" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::function_lambda::TArgs" Name="TArgs">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::TArgs@s:vl.function_lambda.LambdaRetriveType`3" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Element>
              <ClassType>
                <RefTypeDecl ReferencingNameKey="::vl::function_lambda::TObject" Name="TObject">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::TObject@s:vl.function_lambda.LambdaRetriveType`3" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ClassType>
            </ClassMemberTypeDecl>
          </Element>
        </DecorateTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="LambdaRetriveType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::LambdaRetriveType" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::LambdaRetriveType::Type" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::Type">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <RefTypeDecl ReferencingNameKey="::vl::function_lambda::R" Name="R">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::R@s:vl.function_lambda.LambdaRetriveType`3" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Static="False">
                          <Type>
                            <VariadicArgumentTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::function_lambda::TArgs" Name="TArgs">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::TArgs@s:vl.function_lambda.LambdaRetriveType`3" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </VariadicArgumentTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="FunctionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::LambdaRetriveType::FunctionType" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::FunctionType">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::function_lambda::R" Name="R">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::R@s:vl.function_lambda.LambdaRetriveType`3" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::function_lambda::TArgs" Name="TArgs">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::TArgs@s:vl.function_lambda.LambdaRetriveType`3" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultType" Tags="x64, Windows;x86, Windows" NameKey="::vl::function_lambda::LambdaRetriveType::ResultType" OverloadKey="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::ResultType">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::function_lambda::R" Name="R">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::function_lambda::LambdaRetriveType`3&lt;* TObject::(function __thiscall (... TArgs) : R)&gt;::R@s:vl.function_lambda.LambdaRetriveType`3" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>