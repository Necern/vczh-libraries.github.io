<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.collections.PushOnlyAllocator`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::collections::T" OverloadKey="::vl::collections::PushOnlyAllocator`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="PushOnlyAllocator" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator" OverloadKey="::vl::collections::PushOnlyAllocator`1" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="blockSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator::blockSize" OverloadKey="::vl::collections::PushOnlyAllocator`1::blockSize" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="allocatedSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator::allocatedSize" OverloadKey="::vl::collections::PushOnlyAllocator`1::allocatedSize" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="blocks" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator::blocks" OverloadKey="::vl::collections::PushOnlyAllocator`1::blocks" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::PushOnlyAllocator`1::T@s:vl.collections.PushOnlyAllocator`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="PushOnlyAllocator" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator::PushOnlyAllocator" OverloadKey="::vl::collections::PushOnlyAllocator`1::PushOnlyAllocator(vint)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_blockSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator::PushOnlyAllocator::_blockSize" OverloadKey="::vl::collections::PushOnlyAllocator`1::PushOnlyAllocator(vint)::_blockSize" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="~PushOnlyAllocator" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator::~PushOnlyAllocator" OverloadKey="::vl::collections::PushOnlyAllocator`1::~PushOnlyAllocator()" Virtual="Normal" Function="Destructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Get" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator::Get" OverloadKey="::vl::collections::PushOnlyAllocator`1::Get(vint)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::PushOnlyAllocator`1::T@s:vl.collections.PushOnlyAllocator`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator::Get::index" OverloadKey="::vl::collections::PushOnlyAllocator`1::Get(vint)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Create" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::PushOnlyAllocator::Create" OverloadKey="::vl::collections::PushOnlyAllocator`1::Create()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::PushOnlyAllocator`1::T@s:vl.collections.PushOnlyAllocator`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Private" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::NotCopyable" Name="NotCopyable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::NotCopyable@s:vl.NotCopyable" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>