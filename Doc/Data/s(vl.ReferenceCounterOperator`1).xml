<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::T" OverloadKey="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::T@s:vl.ReferenceCounterOperator`1" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::RequiresConvertable::YesNoType" Name="YesNoType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::RequiresConvertable`2::YesNoType@s:vl.RequiresConvertable`2" />
          </ReferencingOverloadKeys>
          <Parent>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::RequiresConvertable" Name="RequiresConvertable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::RequiresConvertable`2@s:vl.RequiresConvertable`2" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::T@s:vl.ReferenceCounterOperator`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="ReferenceCounterOperator" Tags="x64, Windows;x86, Windows" NameKey="::vl::ReferenceCounterOperator" OverloadKey="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;" ClassType="Struct">
          <Children>
            <FuncDecl Access="Public" Name="CreateCounter" Tags="x64, Windows;x86, Windows" NameKey="::vl::ReferenceCounterOperator::CreateCounter" OverloadKey="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::CreateCounter(* T)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Volatile">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="reference" Tags="x64, Windows;x86, Windows" NameKey="::vl::ReferenceCounterOperator::CreateCounter::reference" OverloadKey="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::CreateCounter(* T)::reference" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::T@s:vl.ReferenceCounterOperator`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="DeleteReference" Tags="x64, Windows;x86, Windows" NameKey="::vl::ReferenceCounterOperator::DeleteReference" OverloadKey="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::DeleteReference(* volatile vint,* void)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="counter" Tags="x64, Windows;x86, Windows" NameKey="::vl::ReferenceCounterOperator::DeleteReference::counter" OverloadKey="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::DeleteReference(* volatile vint,* void)::counter" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Volatile">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::vint@s:vl.vint" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="reference" Tags="x64, Windows;x86, Windows" NameKey="::vl::ReferenceCounterOperator::DeleteReference::reference" OverloadKey="::vl::ReferenceCounterOperator`1&lt;T,RequiresConvertable&lt;T, reflection::DescriptableObject&gt;::YesNoType&gt;::DeleteReference(* volatile vint,* void)::reference" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl Name="void" />
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>