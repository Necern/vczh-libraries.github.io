<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::workflow::analyzer::WfCodegenContext">
    <ClassDecl Access="Public" Name="WfCodegenContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext" OverloadKey="::vl::workflow::analyzer::WfCodegenContext" ClassType="Class">
      <Children>
        <TypedefDecl Access="Private" Name="VariableIndexMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::VariableIndexMap" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::VariableIndexMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="FunctionIndexMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::FunctionIndexMap" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::FunctionIndexMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="NodePositionMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::NodePositionMap" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::NodePositionMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Public" Name="assembly" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::assembly" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::assembly" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfAssembly" Name="WfAssembly">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfAssembly@s:vl.workflow.runtime.WfAssembly" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime" Name="runtime">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::runtime@ns:vl.workflow.runtime" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="manager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::manager" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::manager" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager" Name="WfLexicalScopeManager">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="globalVariables" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::globalVariables" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::globalVariables" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfCodegenContext::VariableIndexMap" Name="VariableIndexMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfCodegenContext::VariableIndexMap@s:vl.workflow.analyzer.WfCodegenContext" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="globalFunctions" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::globalFunctions" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::globalFunctions" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfCodegenContext::FunctionIndexMap" Name="FunctionIndexMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfCodegenContext::FunctionIndexMap@s:vl.workflow.analyzer.WfCodegenContext" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="functionContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::functionContext" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::functionContext" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfCodegenFunctionContext" Name="WfCodegenFunctionContext">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfCodegenFunctionContext@s:vl.workflow.analyzer.WfCodegenFunctionContext" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="nodePositionsBeforeCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::nodePositionsBeforeCodegen" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::nodePositionsBeforeCodegen" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfCodegenContext::NodePositionMap" Name="NodePositionMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfCodegenContext::NodePositionMap@s:vl.workflow.analyzer.WfCodegenContext" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="nodePositionsAfterCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::nodePositionsAfterCodegen" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::nodePositionsAfterCodegen" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfCodegenContext::NodePositionMap" Name="NodePositionMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfCodegenContext::NodePositionMap@s:vl.workflow.analyzer.WfCodegenContext" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="WfCodegenContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::WfCodegenContext" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::WfCodegenContext(Ptr&lt;runtime::WfAssembly&gt;,* WfLexicalScopeManager)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_assembly" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::WfCodegenContext::_assembly" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::WfCodegenContext(Ptr&lt;runtime::WfAssembly&gt;,* WfLexicalScopeManager)::_assembly" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfAssembly" Name="WfAssembly">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfAssembly@s:vl.workflow.runtime.WfAssembly" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime" Name="runtime">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::runtime@ns:vl.workflow.runtime" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_manager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::WfCodegenContext::_manager" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::WfCodegenContext(Ptr&lt;runtime::WfAssembly&gt;,* WfLexicalScopeManager)::_manager" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager" Name="WfLexicalScopeManager">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddInstruction" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::AddInstruction" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::AddInstruction(* parsing::ParsingTreeCustomBase,&amp; const runtime::WfInstruction)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::AddInstruction::node" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::AddInstruction(* parsing::ParsingTreeCustomBase,&amp; const runtime::WfInstruction)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="ins" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::AddInstruction::ins" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::AddInstruction(* parsing::ParsingTreeCustomBase,&amp; const runtime::WfInstruction)::ins" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfInstruction" Name="WfInstruction">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::runtime::WfInstruction@s:vl.workflow.runtime.WfInstruction" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime" Name="runtime">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::runtime@ns:vl.workflow.runtime" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddExitInstruction" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::AddExitInstruction" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::AddExitInstruction(* parsing::ParsingTreeCustomBase,&amp; const runtime::WfInstruction)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::AddExitInstruction::node" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::AddExitInstruction(* parsing::ParsingTreeCustomBase,&amp; const runtime::WfInstruction)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="ins" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::AddExitInstruction::ins" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::AddExitInstruction(* parsing::ParsingTreeCustomBase,&amp; const runtime::WfInstruction)::ins" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfInstruction" Name="WfInstruction">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::runtime::WfInstruction@s:vl.workflow.runtime.WfInstruction" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime" Name="runtime">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::runtime@ns:vl.workflow.runtime" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ApplyExitInstructions" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::ApplyExitInstructions" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::ApplyExitInstructions(Ptr&lt;WfCodegenScopeContext&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="scopeContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfCodegenContext::ApplyExitInstructions::scopeContext" OverloadKey="::vl::workflow::analyzer::WfCodegenContext::ApplyExitInstructions(Ptr&lt;WfCodegenScopeContext&gt;)::scopeContext" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfCodegenScopeContext" Name="WfCodegenScopeContext">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfCodegenScopeContext@s:vl.workflow.analyzer.WfCodegenScopeContext" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>