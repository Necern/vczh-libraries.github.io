<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.MethodTypeTrait`3(... TArgument)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="TClass" Tags="x86, Windows" NameKey="::vl::reflection::description::TClass" OverloadKey="::vl::reflection::description::MethodTypeTrait`3(... TArgument)::TClass" />
        <TypeParameterDecl Access="Public" Name="TReturn" Tags="x86, Windows" NameKey="::vl::reflection::description::TReturn" OverloadKey="::vl::reflection::description::MethodTypeTrait`3(... TArgument)::TReturn" />
        <TypeParameterDecl Access="Public" Name="TArgument" Tags="x86, Windows" NameKey="::vl::reflection::description::TArgument" OverloadKey="::vl::reflection::description::MethodTypeTrait`3(... TArgument)::TArgument" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="MethodTypeTrait" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::MethodTypeTrait" OverloadKey="::vl::reflection::description::MethodTypeTrait`3(... TArgument)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <ClassMemberTypeDecl>
                      <Element>
                        <FunctionTypeDecl CallingConvention="Default" Const="False">
                          <ReturnType>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TReturn" Name="TReturn">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::MethodTypeTrait`3(... TArgument)::TReturn@s:vl.reflection.description.MethodTypeTrait`3(... TArgument)" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </ReturnType>
                          <Parameters>
                            <VarDecl Access="Public" Static="False">
                              <Type>
                                <VariadicArgumentTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgument" Name="TArgument">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::reflection::description::MethodTypeTrait`3(... TArgument)::TArgument@s:vl.reflection.description.MethodTypeTrait`3(... TArgument)" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                </VariadicArgumentTypeDecl>
                              </Type>
                            </VarDecl>
                          </Parameters>
                        </FunctionTypeDecl>
                      </Element>
                      <ClassType>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TClass" Name="TClass">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::MethodTypeTrait`3(... TArgument)::TClass@s:vl.reflection.description.MethodTypeTrait`3(... TArgument)" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </ClassType>
                    </ClassMemberTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::MethodTypeTrait::" OverloadKey="::vl::reflection::description::MethodTypeTrait`3(... TArgument)::" Static="False">
                  <Type>
                    <VariadicArgumentTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgument" Name="TArgument">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::MethodTypeTrait`3(... TArgument)::TArgument@s:vl.reflection.description.MethodTypeTrait`3(... TArgument)" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </VariadicArgumentTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>