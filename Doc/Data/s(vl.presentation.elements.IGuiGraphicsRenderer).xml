<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.elements.IGuiGraphicsRenderer">
    <ClassDecl Access="Public" Name="IGuiGraphicsRenderer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
This is the interface for graphics renderers.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="GetFactory" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::GetFactory" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::GetFactory()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Access the graphics &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsRendererFactory@s:vl.presentation.elements.IGuiGraphicsRendererFactory" /&gt;&lt;/links&gt; that is used to create this graphics renderer.
&lt;/summary&gt;
  &lt;returns&gt;Returns the related factory.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsRendererFactory" Name="IGuiGraphicsRendererFactory">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsRendererFactory@s:vl.presentation.elements.IGuiGraphicsRendererFactory" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Initialize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::Initialize" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::Initialize(* IGuiGraphicsElement)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Initialize the grpahics renderer by binding a &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsElement@s:vl.presentation.elements.IGuiGraphicsElement" /&gt;&lt;/links&gt; to it.
&lt;/summary&gt;
  &lt;param name="element"&gt;The graphics element to bind.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="element" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::Initialize::element" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::Initialize(* IGuiGraphicsElement)::element" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsElement" Name="IGuiGraphicsElement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements::IGuiGraphicsElement@s:vl.presentation.elements.IGuiGraphicsElement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Finalize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::Finalize" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::Finalize()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Release all resources that used by this renderer.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetRenderTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::SetRenderTarget" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::SetRenderTarget(* IGuiGraphicsRenderTarget)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Set a &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" /&gt;&lt;/links&gt; to this element.
&lt;/summary&gt;
  &lt;param name="renderTarget"&gt;The graphics render target. It can be NULL.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="renderTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::SetRenderTarget::renderTarget" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::SetRenderTarget(* IGuiGraphicsRenderTarget)::renderTarget" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget" Name="IGuiGraphicsRenderTarget">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Render" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::Render" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::Render(Rect)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Render the graphics element using a specified bounds.
&lt;/summary&gt;
  &lt;param name="bounds"&gt;Bounds to decide the size and position of the binded graphics element.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="bounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::Render::bounds" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::Render(Rect)::bounds" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="OnElementStateChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::OnElementStateChanged" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::OnElementStateChanged()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Notify that the state in the binded graphics element is changed. This function is usually called by the element itself.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMinSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsRenderer::GetMinSize" OverloadKey="::vl::presentation::elements::IGuiGraphicsRenderer::GetMinSize()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Calculate the minimum size using the binded graphics element and its state.
&lt;/summary&gt;
  &lt;returns&gt;The minimum size.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Interface" Name="Interface">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Interface@s:vl.Interface" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>