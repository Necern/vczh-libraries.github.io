<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.ConstructorNotExistsException">
    <ClassDecl Access="Public" Name="ConstructorNotExistsException" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ConstructorNotExistsException" OverloadKey="::vl::reflection::description::ConstructorNotExistsException" ClassType="Class">
      <Children>
        <FuncDecl Access="Public" Name="ConstructorNotExistsException" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ConstructorNotExistsException::ConstructorNotExistsException" OverloadKey="::vl::reflection::description::ConstructorNotExistsException::ConstructorNotExistsException(* ITypeDescriptor)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ConstructorNotExistsException::ConstructorNotExistsException::type" OverloadKey="::vl::reflection::description::ConstructorNotExistsException::ConstructorNotExistsException(* ITypeDescriptor)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeDescriptorException" Name="TypeDescriptorException">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeDescriptorException@s:vl.reflection.description.TypeDescriptorException" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>