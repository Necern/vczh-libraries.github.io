<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.parsing.ParsingError">
    <ClassDecl Access="Public" Name="ParsingError" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError" OverloadKey="::vl::parsing::ParsingError" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Error.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="codeRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::codeRange" OverloadKey="::vl::parsing::ParsingError::codeRange" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Range where the error happens.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="token" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::token" OverloadKey="::vl::parsing::ParsingError::token" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Token at which the error happens.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="parsingTree" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::parsingTree" OverloadKey="::vl::parsing::ParsingError::parsingTree" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;A syntax tree that contains this error.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="errorMessage" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::errorMessage" OverloadKey="::vl::parsing::ParsingError::errorMessage" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;The error message.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="ParsingError" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::ParsingError" OverloadKey="::vl::parsing::ParsingError::ParsingError()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ParsingError" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::ParsingError" OverloadKey="::vl::parsing::ParsingError::ParsingError(&amp; const WString)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_errorMessage" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::ParsingError::_errorMessage" OverloadKey="::vl::parsing::ParsingError::ParsingError(&amp; const WString)::_errorMessage" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ParsingError" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::ParsingError" OverloadKey="::vl::parsing::ParsingError::ParsingError(* const regex::RegexToken,&amp; const WString)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_token" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::ParsingError::_token" OverloadKey="::vl::parsing::ParsingError::ParsingError(* const regex::RegexToken,&amp; const WString)::_token" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::regex@ns:vl.regex" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_errorMessage" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::ParsingError::_errorMessage" OverloadKey="::vl::parsing::ParsingError::ParsingError(* const regex::RegexToken,&amp; const WString)::_errorMessage" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ParsingError" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::ParsingError" OverloadKey="::vl::parsing::ParsingError::ParsingError(* ParsingTreeCustomBase,&amp; const WString)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_parsingTree" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::ParsingError::_parsingTree" OverloadKey="::vl::parsing::ParsingError::ParsingError(* ParsingTreeCustomBase,&amp; const WString)::_parsingTree" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_errorMessage" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::ParsingError::_errorMessage" OverloadKey="::vl::parsing::ParsingError::ParsingError(* ParsingTreeCustomBase,&amp; const WString)::_errorMessage" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~ParsingError" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingError::~ParsingError" OverloadKey="::vl::parsing::ParsingError::~ParsingError()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>