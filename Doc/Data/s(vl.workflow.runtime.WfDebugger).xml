<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::workflow::runtime::WfDebugger">
    <ClassDecl Access="Public" Name="WfDebugger" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger" OverloadKey="::vl::workflow::runtime::WfDebugger" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Workflow debugger.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="BreakPointList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakPointList" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakPointList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfBreakPoint" Name="WfBreakPoint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfBreakPoint@s:vl.workflow.runtime.WfBreakPoint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ThreadContextList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::ThreadContextList" OverloadKey="::vl::workflow::runtime::WfDebugger::ThreadContextList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfRuntimeThreadContext" Name="WfRuntimeThreadContext">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::runtime::WfRuntimeThreadContext@s:vl.workflow.runtime.WfRuntimeThreadContext" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="AssemblyKey" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::AssemblyKey" OverloadKey="::vl::workflow::runtime::WfDebugger::AssemblyKey">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Tuple" Name="Tuple">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Tuple`11@s:vl.Tuple`11" />
                    <Key Value="::vl::Tuple`1&lt;T0&gt;@s:vl.Tuple`1" />
                    <Key Value="::vl::Tuple`2&lt;T0,T1&gt;@s:vl.Tuple`2" />
                    <Key Value="::vl::Tuple`3&lt;T0,T1,T2&gt;@s:vl.Tuple`3" />
                    <Key Value="::vl::Tuple`4&lt;T0,T1,T2,T3&gt;@s:vl.Tuple`4" />
                    <Key Value="::vl::Tuple`5&lt;T0,T1,T2,T3,T4&gt;@s:vl.Tuple`5" />
                    <Key Value="::vl::Tuple`6&lt;T0,T1,T2,T3,T4,T5&gt;@s:vl.Tuple`6" />
                    <Key Value="::vl::Tuple`7&lt;T0,T1,T2,T3,T4,T5,T6&gt;@s:vl.Tuple`7" />
                    <Key Value="::vl::Tuple`8&lt;T0,T1,T2,T3,T4,T5,T6,T7&gt;@s:vl.Tuple`8" />
                    <Key Value="::vl::Tuple`9&lt;T0,T1,T2,T3,T4,T5,T6,T7,T8&gt;@s:vl.Tuple`9" />
                    <Key Value="::vl::Tuple`10&lt;T0,T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;@s:vl.Tuple`10" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfAssembly" Name="WfAssembly">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::runtime::WfAssembly@s:vl.workflow.runtime.WfAssembly" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="PropertyKey" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::PropertyKey" OverloadKey="::vl::workflow::runtime::WfDebugger::PropertyKey">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Tuple" Name="Tuple">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Tuple`11@s:vl.Tuple`11" />
                    <Key Value="::vl::Tuple`1&lt;T0&gt;@s:vl.Tuple`1" />
                    <Key Value="::vl::Tuple`2&lt;T0,T1&gt;@s:vl.Tuple`2" />
                    <Key Value="::vl::Tuple`3&lt;T0,T1,T2&gt;@s:vl.Tuple`3" />
                    <Key Value="::vl::Tuple`4&lt;T0,T1,T2,T3&gt;@s:vl.Tuple`4" />
                    <Key Value="::vl::Tuple`5&lt;T0,T1,T2,T3,T4&gt;@s:vl.Tuple`5" />
                    <Key Value="::vl::Tuple`6&lt;T0,T1,T2,T3,T4,T5&gt;@s:vl.Tuple`6" />
                    <Key Value="::vl::Tuple`7&lt;T0,T1,T2,T3,T4,T5,T6&gt;@s:vl.Tuple`7" />
                    <Key Value="::vl::Tuple`8&lt;T0,T1,T2,T3,T4,T5,T6,T7&gt;@s:vl.Tuple`8" />
                    <Key Value="::vl::Tuple`9&lt;T0,T1,T2,T3,T4,T5,T6,T7,T8&gt;@s:vl.Tuple`9" />
                    <Key Value="::vl::Tuple`10&lt;T0,T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;@s:vl.Tuple`10" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection@ns:vl.reflection" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo" Name="IPropertyInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IPropertyInfo@s:vl.reflection.description.IPropertyInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="EventKey" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::EventKey" OverloadKey="::vl::workflow::runtime::WfDebugger::EventKey">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Tuple" Name="Tuple">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Tuple`11@s:vl.Tuple`11" />
                    <Key Value="::vl::Tuple`1&lt;T0&gt;@s:vl.Tuple`1" />
                    <Key Value="::vl::Tuple`2&lt;T0,T1&gt;@s:vl.Tuple`2" />
                    <Key Value="::vl::Tuple`3&lt;T0,T1,T2&gt;@s:vl.Tuple`3" />
                    <Key Value="::vl::Tuple`4&lt;T0,T1,T2,T3&gt;@s:vl.Tuple`4" />
                    <Key Value="::vl::Tuple`5&lt;T0,T1,T2,T3,T4&gt;@s:vl.Tuple`5" />
                    <Key Value="::vl::Tuple`6&lt;T0,T1,T2,T3,T4,T5&gt;@s:vl.Tuple`6" />
                    <Key Value="::vl::Tuple`7&lt;T0,T1,T2,T3,T4,T5,T6&gt;@s:vl.Tuple`7" />
                    <Key Value="::vl::Tuple`8&lt;T0,T1,T2,T3,T4,T5,T6,T7&gt;@s:vl.Tuple`8" />
                    <Key Value="::vl::Tuple`9&lt;T0,T1,T2,T3,T4,T5,T6,T7,T8&gt;@s:vl.Tuple`9" />
                    <Key Value="::vl::Tuple`10&lt;T0,T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;@s:vl.Tuple`10" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection@ns:vl.reflection" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo" Name="IEventInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IEventInfo@s:vl.reflection.description.IEventInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="MethodKey" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::MethodKey" OverloadKey="::vl::workflow::runtime::WfDebugger::MethodKey">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Tuple" Name="Tuple">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Tuple`11@s:vl.Tuple`11" />
                    <Key Value="::vl::Tuple`1&lt;T0&gt;@s:vl.Tuple`1" />
                    <Key Value="::vl::Tuple`2&lt;T0,T1&gt;@s:vl.Tuple`2" />
                    <Key Value="::vl::Tuple`3&lt;T0,T1,T2&gt;@s:vl.Tuple`3" />
                    <Key Value="::vl::Tuple`4&lt;T0,T1,T2,T3&gt;@s:vl.Tuple`4" />
                    <Key Value="::vl::Tuple`5&lt;T0,T1,T2,T3,T4&gt;@s:vl.Tuple`5" />
                    <Key Value="::vl::Tuple`6&lt;T0,T1,T2,T3,T4,T5&gt;@s:vl.Tuple`6" />
                    <Key Value="::vl::Tuple`7&lt;T0,T1,T2,T3,T4,T5,T6&gt;@s:vl.Tuple`7" />
                    <Key Value="::vl::Tuple`8&lt;T0,T1,T2,T3,T4,T5,T6,T7&gt;@s:vl.Tuple`8" />
                    <Key Value="::vl::Tuple`9&lt;T0,T1,T2,T3,T4,T5,T6,T7,T8&gt;@s:vl.Tuple`9" />
                    <Key Value="::vl::Tuple`10&lt;T0,T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;@s:vl.Tuple`10" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection@ns:vl.reflection" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IMethodInfo" Name="IMethodInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::IMethodInfo@s:vl.reflection.description.IMethodInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="TypeKey" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::TypeKey" OverloadKey="::vl::workflow::runtime::WfDebugger::TypeKey">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection@ns:vl.reflection" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="AssemblyBreakPointMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::AssemblyBreakPointMap" OverloadKey="::vl::workflow::runtime::WfDebugger::AssemblyBreakPointMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::AssemblyKey" Name="AssemblyKey">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::AssemblyKey@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="PropertyBreakPointMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::PropertyBreakPointMap" OverloadKey="::vl::workflow::runtime::WfDebugger::PropertyBreakPointMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::PropertyKey" Name="PropertyKey">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::PropertyKey@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="EventBreakPointMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::EventBreakPointMap" OverloadKey="::vl::workflow::runtime::WfDebugger::EventBreakPointMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::EventKey" Name="EventKey">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::EventKey@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="MethodBreakPointMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::MethodBreakPointMap" OverloadKey="::vl::workflow::runtime::WfDebugger::MethodBreakPointMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::MethodKey" Name="MethodKey">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::MethodKey@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="TypeBreakPointMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::TypeBreakPointMap" OverloadKey="::vl::workflow::runtime::WfDebugger::TypeBreakPointMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::TypeKey" Name="TypeKey">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::TypeKey@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <EnumDecl Access="Public" Name="State" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::State" OverloadKey="::vl::workflow::runtime::WfDebugger::State" EnumClass="False">
          <Children>
            <EnumItemDecl Access="Public" Name="Running" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::State::Running" OverloadKey="::vl::workflow::runtime::WfDebugger::State::Running" />
            <EnumItemDecl Access="Public" Name="PauseByOperation" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::State::PauseByOperation" OverloadKey="::vl::workflow::runtime::WfDebugger::State::PauseByOperation" />
            <EnumItemDecl Access="Public" Name="PauseByBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::State::PauseByBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::State::PauseByBreakPoint" />
            <EnumItemDecl Access="Public" Name="Stopped" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::State::Stopped" OverloadKey="::vl::workflow::runtime::WfDebugger::State::Stopped" />
            <EnumItemDecl Access="Public" Name="Continue" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::State::Continue" OverloadKey="::vl::workflow::runtime::WfDebugger::State::Continue" />
            <EnumItemDecl Access="Public" Name="RequiredToPause" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::State::RequiredToPause" OverloadKey="::vl::workflow::runtime::WfDebugger::State::RequiredToPause" />
            <EnumItemDecl Access="Public" Name="RequiredToStop" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::State::RequiredToStop" OverloadKey="::vl::workflow::runtime::WfDebugger::State::RequiredToStop" />
          </Children>
        </EnumDecl>
        <EnumDecl Access="Public" Name="RunningType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::RunningType" OverloadKey="::vl::workflow::runtime::WfDebugger::RunningType" EnumClass="False">
          <Children>
            <EnumItemDecl Access="Public" Name="RunUntilBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::RunningType::RunUntilBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::RunningType::RunUntilBreakPoint" />
            <EnumItemDecl Access="Public" Name="RunStepOver" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::RunningType::RunStepOver" OverloadKey="::vl::workflow::runtime::WfDebugger::RunningType::RunStepOver" />
            <EnumItemDecl Access="Public" Name="RunStepInto" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::RunningType::RunStepInto" OverloadKey="::vl::workflow::runtime::WfDebugger::RunningType::RunStepInto" />
          </Children>
        </EnumDecl>
        <ClassDecl Access="Public" Name="InstructionLocation" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="contextIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::contextIndex" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::contextIndex" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="assembly" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::assembly" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::assembly" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfAssembly" Name="WfAssembly">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::runtime::WfAssembly@s:vl.workflow.runtime.WfAssembly" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="stackFrameIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::stackFrameIndex" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::stackFrameIndex" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="instruction" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::instruction" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::instruction" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="BreakStepOver" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepOver" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepOver(&amp; const InstructionLocation,bool)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="il" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepOver::il" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepOver(&amp; const InstructionLocation,bool)::il" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation" Name="InstructionLocation">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::runtime::WfDebugger::InstructionLocation@s:vl.workflow.runtime.WfDebugger" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="beforeCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepOver::beforeCodegen" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepOver(&amp; const InstructionLocation,bool)::beforeCodegen" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="BreakStepInto" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepInto" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepInto(&amp; const InstructionLocation,bool)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="il" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepInto::il" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepInto(&amp; const InstructionLocation,bool)::il" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation" Name="InstructionLocation">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::runtime::WfDebugger::InstructionLocation@s:vl.workflow.runtime.WfDebugger" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="beforeCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepInto::beforeCodegen" OverloadKey="::vl::workflow::runtime::WfDebugger::InstructionLocation::BreakStepInto(&amp; const InstructionLocation,bool)::beforeCodegen" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <VarDecl Access="Public" Name="InvalidBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::InvalidBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::InvalidBreakPoint" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="PauseBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::PauseBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::PauseBreakPoint" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="breakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::breakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::breakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::BreakPointList" Name="BreakPointList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::BreakPointList@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="freeBreakPointIndices" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::freeBreakPointIndices" OverloadKey="::vl::workflow::runtime::WfDebugger::freeBreakPointIndices" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="evaluatingBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::evaluatingBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::evaluatingBreakPoint" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Volatile">
              <Element>
                <RefTypeDecl Name="bool" />
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="breakException" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::breakException" OverloadKey="::vl::workflow::runtime::WfDebugger::breakException" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Volatile">
              <Element>
                <RefTypeDecl Name="bool" />
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="threadContexts" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::threadContexts" OverloadKey="::vl::workflow::runtime::WfDebugger::threadContexts" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::ThreadContextList" Name="ThreadContextList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::ThreadContextList@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="state" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::state" OverloadKey="::vl::workflow::runtime::WfDebugger::state" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Volatile">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::State" Name="State">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::State@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="runningType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::runningType" OverloadKey="::vl::workflow::runtime::WfDebugger::runningType" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Volatile">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::RunningType" Name="RunningType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::RunningType@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="lastActivatedBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::lastActivatedBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::lastActivatedBreakPoint" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Volatile">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="stepBeforeCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::stepBeforeCodegen" OverloadKey="::vl::workflow::runtime::WfDebugger::stepBeforeCodegen" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="instructionLocation" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::instructionLocation" OverloadKey="::vl::workflow::runtime::WfDebugger::instructionLocation" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation" Name="InstructionLocation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::InstructionLocation@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="insBreakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::insBreakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::insBreakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::AssemblyBreakPointMap" Name="AssemblyBreakPointMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::AssemblyBreakPointMap@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="getGlobalVarBreakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::getGlobalVarBreakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::getGlobalVarBreakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::AssemblyBreakPointMap" Name="AssemblyBreakPointMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::AssemblyBreakPointMap@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="setGlobalVarBreakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::setGlobalVarBreakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::setGlobalVarBreakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::AssemblyBreakPointMap" Name="AssemblyBreakPointMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::AssemblyBreakPointMap@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="getPropertyBreakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::getPropertyBreakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::getPropertyBreakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::PropertyBreakPointMap" Name="PropertyBreakPointMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::PropertyBreakPointMap@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="setPropertyBreakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::setPropertyBreakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::setPropertyBreakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::PropertyBreakPointMap" Name="PropertyBreakPointMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::PropertyBreakPointMap@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="attachEventBreakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::attachEventBreakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::attachEventBreakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::EventBreakPointMap" Name="EventBreakPointMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::EventBreakPointMap@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="detachEventBreakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::detachEventBreakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::detachEventBreakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::EventBreakPointMap" Name="EventBreakPointMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::EventBreakPointMap@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="invokeMethodBreakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::invokeMethodBreakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::invokeMethodBreakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::MethodBreakPointMap" Name="MethodBreakPointMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::MethodBreakPointMap@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="createObjectBreakPoints" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::createObjectBreakPoints" OverloadKey="::vl::workflow::runtime::WfDebugger::createObjectBreakPoints" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::TypeBreakPointMap" Name="TypeBreakPointMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::WfDebugger::TypeBreakPointMap@s:vl.workflow.runtime.WfDebugger" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="OnBlockExecution" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::OnBlockExecution" OverloadKey="::vl::workflow::runtime::WfDebugger::OnBlockExecution()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called for doing something when a break point is activated. This function will be called multiple times before some one let the debugger to continue.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnStartExecution" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::OnStartExecution" OverloadKey="::vl::workflow::runtime::WfDebugger::OnStartExecution()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when a new Workflow program is about to run.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnStopExecution" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::OnStopExecution" OverloadKey="::vl::workflow::runtime::WfDebugger::OnStopExecution()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when a Workflow program is stopped by any reason.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="MakeCurrentInstructionLocation" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::MakeCurrentInstructionLocation" OverloadKey="::vl::workflow::runtime::WfDebugger::MakeCurrentInstructionLocation()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::InstructionLocation" Name="InstructionLocation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::InstructionLocation@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <TemplateDecl Access="Protected" Tags="x86, Windows">
          <TypeParameters>
            <TypeParameterDecl Access="Public" Name="TKey" Tags="x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::TKey" OverloadKey="::vl::workflow::runtime::WfDebugger::HandleBreakPoint`1(&amp; const TKey,&amp; collections::Dictionary&lt;TKey, vint&gt;)::TKey" />
          </TypeParameters>
          <Specialization />
          <Element>
            <FuncDecl Access="Public" Name="HandleBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::HandleBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::HandleBreakPoint`1(&amp; const TKey,&amp; collections::Dictionary&lt;TKey, vint&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="key" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::HandleBreakPoint::key" OverloadKey="::vl::workflow::runtime::WfDebugger::HandleBreakPoint`1(&amp; const TKey,&amp; collections::Dictionary&lt;TKey, vint&gt;)::key" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::TKey" Name="TKey">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::runtime::WfDebugger::HandleBreakPoint`1(&amp; const TKey,&amp; collections::Dictionary&lt;TKey, vint&gt;)::TKey@s:vl.workflow.runtime.WfDebugger" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="breakPointMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::HandleBreakPoint::breakPointMap" OverloadKey="::vl::workflow::runtime::WfDebugger::HandleBreakPoint`1(&amp; const TKey,&amp; collections::Dictionary&lt;TKey, vint&gt;)::breakPointMap" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::TKey" Name="TKey">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::runtime::WfDebugger::HandleBreakPoint`1(&amp; const TKey,&amp; collections::Dictionary&lt;TKey, vint&gt;)::TKey@s:vl.workflow.runtime.WfDebugger" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::vint@s:vl.vint" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Element>
        </TemplateDecl>
        <FuncDecl Access="Protected" Name="SetBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::SetBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::SetBreakPoint(&amp; const WfBreakPoint,bool,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="breakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::SetBreakPoint::breakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::SetBreakPoint(&amp; const WfBreakPoint,bool,vint)::breakPoint" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfBreakPoint" Name="WfBreakPoint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::runtime::WfBreakPoint@s:vl.workflow.runtime.WfBreakPoint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="available" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::SetBreakPoint::available" OverloadKey="::vl::workflow::runtime::WfDebugger::SetBreakPoint(&amp; const WfBreakPoint,bool,vint)::available" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::SetBreakPoint::index" OverloadKey="::vl::workflow::runtime::WfDebugger::SetBreakPoint(&amp; const WfBreakPoint,bool,vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="EnterThreadContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::EnterThreadContext" OverloadKey="::vl::workflow::runtime::WfDebugger::EnterThreadContext(* WfRuntimeThreadContext)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::EnterThreadContext::context" OverloadKey="::vl::workflow::runtime::WfDebugger::EnterThreadContext(* WfRuntimeThreadContext)::context" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfRuntimeThreadContext" Name="WfRuntimeThreadContext">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfRuntimeThreadContext@s:vl.workflow.runtime.WfRuntimeThreadContext" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="LeaveThreadContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::LeaveThreadContext" OverloadKey="::vl::workflow::runtime::WfDebugger::LeaveThreadContext(* WfRuntimeThreadContext)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::LeaveThreadContext::context" OverloadKey="::vl::workflow::runtime::WfDebugger::LeaveThreadContext(* WfRuntimeThreadContext)::context" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfRuntimeThreadContext" Name="WfRuntimeThreadContext">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfRuntimeThreadContext@s:vl.workflow.runtime.WfRuntimeThreadContext" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakIns" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakIns" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakIns(* WfAssembly,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="assembly" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakIns::assembly" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakIns(* WfAssembly,vint)::assembly" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfAssembly" Name="WfAssembly">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfAssembly@s:vl.workflow.runtime.WfAssembly" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="instruction" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakIns::instruction" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakIns(* WfAssembly,vint)::instruction" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakRead" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakRead" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakRead(* WfAssembly,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="assembly" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakRead::assembly" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakRead(* WfAssembly,vint)::assembly" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfAssembly" Name="WfAssembly">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfAssembly@s:vl.workflow.runtime.WfAssembly" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="variable" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakRead::variable" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakRead(* WfAssembly,vint)::variable" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakWrite" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakWrite" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakWrite(* WfAssembly,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="assembly" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakWrite::assembly" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakWrite(* WfAssembly,vint)::assembly" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfAssembly" Name="WfAssembly">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfAssembly@s:vl.workflow.runtime.WfAssembly" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="variable" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakWrite::variable" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakWrite(* WfAssembly,vint)::variable" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakGet" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakGet" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakGet(* reflection::DescriptableObject,* reflection::description::IPropertyInfo)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakGet::thisObject" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakGet(* reflection::DescriptableObject,* reflection::description::IPropertyInfo)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="propertyInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakGet::propertyInfo" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakGet(* reflection::DescriptableObject,* reflection::description::IPropertyInfo)::propertyInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo" Name="IPropertyInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IPropertyInfo@s:vl.reflection.description.IPropertyInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakSet" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakSet" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakSet(* reflection::DescriptableObject,* reflection::description::IPropertyInfo)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakSet::thisObject" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakSet(* reflection::DescriptableObject,* reflection::description::IPropertyInfo)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="propertyInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakSet::propertyInfo" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakSet(* reflection::DescriptableObject,* reflection::description::IPropertyInfo)::propertyInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo" Name="IPropertyInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IPropertyInfo@s:vl.reflection.description.IPropertyInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakAttach" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakAttach" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakAttach(* reflection::DescriptableObject,* reflection::description::IEventInfo)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakAttach::thisObject" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakAttach(* reflection::DescriptableObject,* reflection::description::IEventInfo)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="eventInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakAttach::eventInfo" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakAttach(* reflection::DescriptableObject,* reflection::description::IEventInfo)::eventInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo" Name="IEventInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IEventInfo@s:vl.reflection.description.IEventInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakDetach" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakDetach" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakDetach(* reflection::DescriptableObject,* reflection::description::IEventInfo)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakDetach::thisObject" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakDetach(* reflection::DescriptableObject,* reflection::description::IEventInfo)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="eventInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakDetach::eventInfo" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakDetach(* reflection::DescriptableObject,* reflection::description::IEventInfo)::eventInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo" Name="IEventInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IEventInfo@s:vl.reflection.description.IEventInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakInvoke" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakInvoke" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakInvoke(* reflection::DescriptableObject,* reflection::description::IMethodInfo)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="thisObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakInvoke::thisObject" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakInvoke(* reflection::DescriptableObject,* reflection::description::IMethodInfo)::thisObject" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection@ns:vl.reflection" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="methodInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakInvoke::methodInfo" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakInvoke(* reflection::DescriptableObject,* reflection::description::IMethodInfo)::methodInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IMethodInfo" Name="IMethodInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IMethodInfo@s:vl.reflection.description.IMethodInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakCreate" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakCreate" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakCreate(* reflection::description::ITypeDescriptor)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakCreate::typeDescriptor" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakCreate(* reflection::description::ITypeDescriptor)::typeDescriptor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="BreakException" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakException" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakException(Ptr&lt;WfRuntimeExceptionInfo&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="info" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::BreakException::info" OverloadKey="::vl::workflow::runtime::WfDebugger::BreakException(Ptr&lt;WfRuntimeExceptionInfo&gt;)::info" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfRuntimeExceptionInfo" Name="WfRuntimeExceptionInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfRuntimeExceptionInfo@s:vl.workflow.runtime.WfRuntimeExceptionInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="WaitForContinue" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::WaitForContinue" OverloadKey="::vl::workflow::runtime::WfDebugger::WaitForContinue()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WfDebugger" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::WfDebugger" OverloadKey="::vl::workflow::runtime::WfDebugger::WfDebugger()" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a debugger.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~WfDebugger" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::~WfDebugger" OverloadKey="::vl::workflow::runtime::WfDebugger::~WfDebugger()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::AddBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::AddBreakPoint(&amp; const WfBreakPoint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Add a new break point.&lt;/summary&gt;
  &lt;returns&gt;Returns the index of this break point. Returns -1 if failed.&lt;/returns&gt;
  &lt;param name="breakPoint"&gt;The break point.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="breakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::AddBreakPoint::breakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::AddBreakPoint(&amp; const WfBreakPoint)::breakPoint" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfBreakPoint" Name="WfBreakPoint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::runtime::WfBreakPoint@s:vl.workflow.runtime.WfBreakPoint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddCodeLineBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint(* WfAssembly,vint,vint,bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Add a new source code break point.&lt;/summary&gt;
  &lt;returns&gt;Returns the index of this break point. Returns -1 if failed.&lt;/returns&gt;
  &lt;param name="assembly"&gt;The assembly.&lt;/param&gt;
  &lt;param name="codeIndex"&gt;The code index of a module.&lt;/param&gt;
  &lt;param name="row"&gt;The row number, starts from 0.&lt;/param&gt;
  &lt;param name="beforeCodegen"&gt;Set to true to apply source code information to original source code.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="assembly" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint::assembly" OverloadKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint(* WfAssembly,vint,vint,bool)::assembly" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfAssembly" Name="WfAssembly">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfAssembly@s:vl.workflow.runtime.WfAssembly" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="codeIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint::codeIndex" OverloadKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint(* WfAssembly,vint,vint,bool)::codeIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="row" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint::row" OverloadKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint(* WfAssembly,vint,vint,bool)::row" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="beforeCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint::beforeCodegen" OverloadKey="::vl::workflow::runtime::WfDebugger::AddCodeLineBreakPoint(* WfAssembly,vint,vint,bool)::beforeCodegen" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetBreakPointCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetBreakPointCount" OverloadKey="::vl::workflow::runtime::WfDebugger::GetBreakPointCount()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the number of all break points.&lt;/summary&gt;
  &lt;returns&gt;The number of all break points.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::GetBreakPoint(vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get a specified break point.&lt;/summary&gt;
  &lt;returns&gt;The break point.&lt;/returns&gt;
  &lt;param name="index"&gt;The index of the break point.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfBreakPoint" Name="WfBreakPoint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfBreakPoint@s:vl.workflow.runtime.WfBreakPoint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetBreakPoint::index" OverloadKey="::vl::workflow::runtime::WfDebugger::GetBreakPoint(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RemoveBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::RemoveBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::RemoveBreakPoint(vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Delete a specified break point.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation is succeeded.&lt;/returns&gt;
  &lt;param name="index"&gt;The index of the break point.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::RemoveBreakPoint::index" OverloadKey="::vl::workflow::runtime::WfDebugger::RemoveBreakPoint(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="EnableBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::EnableBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::EnableBreakPoint(vint,bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Enable or disable a specified break point.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation is succeeded.&lt;/returns&gt;
  &lt;param name="index"&gt;The index of the break point.&lt;/param&gt;
  &lt;param name="enabled"&gt;Set to true to enable a break point.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::EnableBreakPoint::index" OverloadKey="::vl::workflow::runtime::WfDebugger::EnableBreakPoint(vint,bool)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="enabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::EnableBreakPoint::enabled" OverloadKey="::vl::workflow::runtime::WfDebugger::EnableBreakPoint(vint,bool)::enabled" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetBreakException" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetBreakException" OverloadKey="::vl::workflow::runtime::WfDebugger::GetBreakException()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test if the exception break point is enabled or not.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the exception break point is enabled.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetBreakException" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::SetBreakException" OverloadKey="::vl::workflow::runtime::WfDebugger::SetBreakException(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Enable or disable the exception break point.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true to enable the exception break point.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::SetBreakException::value" OverloadKey="::vl::workflow::runtime::WfDebugger::SetBreakException(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Run" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::Run" OverloadKey="::vl::workflow::runtime::WfDebugger::Run()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Continue to run the Workflow program.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation is succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Pause" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::Pause" OverloadKey="::vl::workflow::runtime::WfDebugger::Pause()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Pause the Workflow program.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation is succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Stop" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::Stop" OverloadKey="::vl::workflow::runtime::WfDebugger::Stop()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Stop the Workflow program.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation is succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StepOver" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::StepOver" OverloadKey="::vl::workflow::runtime::WfDebugger::StepOver(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Run until reached the next row in the same function or outside of this function.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation is succeeded.&lt;/returns&gt;
  &lt;param name="beforeCodegen"&gt;Set to true to apply the source code information to original source code.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="beforeCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::StepOver::beforeCodegen" OverloadKey="::vl::workflow::runtime::WfDebugger::StepOver(bool)::beforeCodegen" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StepInto" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::StepInto" OverloadKey="::vl::workflow::runtime::WfDebugger::StepInto(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Run until reached the next row.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation is succeeded.&lt;/returns&gt;
  &lt;param name="beforeCodegen"&gt;Set to true to apply the source code information to original source code.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="beforeCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::StepInto::beforeCodegen" OverloadKey="::vl::workflow::runtime::WfDebugger::StepInto(bool)::beforeCodegen" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetState" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetState" OverloadKey="::vl::workflow::runtime::WfDebugger::GetState()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the current state of the debugger.&lt;/summary&gt;
  &lt;returns&gt;The state of the debugger.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::State" Name="State">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::State@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRunningType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetRunningType" OverloadKey="::vl::workflow::runtime::WfDebugger::GetRunningType()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the running type of the debugger.&lt;/summary&gt;
  &lt;returns&gt;The running type of the debugger.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::RunningType" Name="RunningType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfDebugger::RunningType@s:vl.workflow.runtime.WfDebugger" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetLastActivatedBreakPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetLastActivatedBreakPoint" OverloadKey="::vl::workflow::runtime::WfDebugger::GetLastActivatedBreakPoint()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the index of the last activated break point.&lt;/summary&gt;
  &lt;returns&gt;The index of the last activated break point.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetThreadContexts" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetThreadContexts" OverloadKey="::vl::workflow::runtime::WfDebugger::GetThreadContexts()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger::ThreadContextList" Name="ThreadContextList">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfDebugger::ThreadContextList@s:vl.workflow.runtime.WfDebugger" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCurrentThreadContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetCurrentThreadContext" OverloadKey="::vl::workflow::runtime::WfDebugger::GetCurrentThreadContext()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfRuntimeThreadContext" Name="WfRuntimeThreadContext">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::runtime::WfRuntimeThreadContext@s:vl.workflow.runtime.WfRuntimeThreadContext" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCurrentPosition" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetCurrentPosition" OverloadKey="::vl::workflow::runtime::WfDebugger::GetCurrentPosition(bool,* WfRuntimeThreadContext,vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the current position of the executing instruction in the source code.&lt;/summary&gt;
  &lt;returns&gt;The current position in the source code.&lt;/returns&gt;
  &lt;param name="beforeCodegen"&gt;Set to true to apply the source code information to original source code.&lt;/param&gt;
  &lt;param name="context"&gt;Specify a thread context. Set to null to use the top thread context.&lt;/param&gt;
  &lt;param name="callStackIndex"&gt;Specify a call stack index. Set to null to use the top call stack item of the specified thread context.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="beforeCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetCurrentPosition::beforeCodegen" OverloadKey="::vl::workflow::runtime::WfDebugger::GetCurrentPosition(bool,* WfRuntimeThreadContext,vint)::beforeCodegen" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetCurrentPosition::context" OverloadKey="::vl::workflow::runtime::WfDebugger::GetCurrentPosition(bool,* WfRuntimeThreadContext,vint)::context" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfRuntimeThreadContext" Name="WfRuntimeThreadContext">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfRuntimeThreadContext@s:vl.workflow.runtime.WfRuntimeThreadContext" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="callStackIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetCurrentPosition::callStackIndex" OverloadKey="::vl::workflow::runtime::WfDebugger::GetCurrentPosition(bool,* WfRuntimeThreadContext,vint)::callStackIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetValueByName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetValueByName" OverloadKey="::vl::workflow::runtime::WfDebugger::GetValueByName(&amp; const WString,* WfRuntimeThreadContext,vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the variable value by name in the current scope.&lt;/summary&gt;
  &lt;returns&gt;The value.&lt;/returns&gt;
  &lt;param name="name"&gt;The name.&lt;/param&gt;
  &lt;param name="context"&gt;Specify a thread context. Set to null to use the top thread context.&lt;/param&gt;
  &lt;param name="callStackIndex"&gt;Specify a call stack index. Set to null to use the top call stack item of the specified thread context.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection@ns:vl.reflection" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetValueByName::name" OverloadKey="::vl::workflow::runtime::WfDebugger::GetValueByName(&amp; const WString,* WfRuntimeThreadContext,vint)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetValueByName::context" OverloadKey="::vl::workflow::runtime::WfDebugger::GetValueByName(&amp; const WString,* WfRuntimeThreadContext,vint)::context" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfRuntimeThreadContext" Name="WfRuntimeThreadContext">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::runtime::WfRuntimeThreadContext@s:vl.workflow.runtime.WfRuntimeThreadContext" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="callStackIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::WfDebugger::GetValueByName::callStackIndex" OverloadKey="::vl::workflow::runtime::WfDebugger::GetValueByName(&amp; const WString,* WfRuntimeThreadContext,vint)::callStackIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Protected" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::IWfDebuggerCallback" Name="IWfDebuggerCallback">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::runtime::IWfDebuggerCallback@s:vl.workflow.runtime.IWfDebuggerCallback" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>