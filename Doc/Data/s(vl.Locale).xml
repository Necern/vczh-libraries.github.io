<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::Locale">
    <ClassDecl Access="Public" Name="Locale" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale" OverloadKey="::vl::Locale" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Locale awared operations. Macro "INVLOC" is a shortcut to get a invariant locale.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="localeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::localeName" OverloadKey="::vl::Locale::localeName" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="Locale" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Locale" OverloadKey="::vl::Locale::Locale(&amp; const WString)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_localeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Locale::_localeName" OverloadKey="::vl::Locale::Locale(&amp; const WString)::_localeName" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~Locale" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::~Locale" OverloadKey="::vl::Locale::~Locale()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator ==" OverloadKey="::vl::Locale::operator ==(&amp; const Locale)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator ==::value" OverloadKey="::vl::Locale::operator ==(&amp; const Locale)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Locale@s:vl.Locale" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator !=" OverloadKey="::vl::Locale::operator !=(&amp; const Locale)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator !=::value" OverloadKey="::vl::Locale::operator !=(&amp; const Locale)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Locale@s:vl.Locale" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &lt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator &lt;" OverloadKey="::vl::Locale::operator &lt;(&amp; const Locale)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator &lt;::value" OverloadKey="::vl::Locale::operator &lt;(&amp; const Locale)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Locale@s:vl.Locale" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &lt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator &lt;=" OverloadKey="::vl::Locale::operator &lt;=(&amp; const Locale)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator &lt;=::value" OverloadKey="::vl::Locale::operator &lt;=(&amp; const Locale)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Locale@s:vl.Locale" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &gt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator &gt;" OverloadKey="::vl::Locale::operator &gt;(&amp; const Locale)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator &gt;::value" OverloadKey="::vl::Locale::operator &gt;(&amp; const Locale)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Locale@s:vl.Locale" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator &gt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator &gt;=" OverloadKey="::vl::Locale::operator &gt;=(&amp; const Locale)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::operator &gt;=::value" OverloadKey="::vl::Locale::operator &gt;=(&amp; const Locale)const::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Locale@s:vl.Locale" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Invariant" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Invariant" OverloadKey="::vl::Locale::Invariant()" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the invariant locale.&lt;/summary&gt;
  &lt;returns&gt;The invariant locale.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Locale@s:vl.Locale" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SystemDefault" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::SystemDefault" OverloadKey="::vl::Locale::SystemDefault()" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the system default locale. This locale controls the code page that used by the the system to interpret ANSI string buffers.&lt;/summary&gt;
  &lt;returns&gt;The system default locale.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Locale@s:vl.Locale" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="UserDefault" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::UserDefault" OverloadKey="::vl::Locale::UserDefault()" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the user default locale. This locale reflect the user's setting.&lt;/summary&gt;
  &lt;returns&gt;The user default locale.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Locale@s:vl.Locale" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Enumerate" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Enumerate" OverloadKey="::vl::Locale::Enumerate(&amp; collections::List&lt;Locale&gt;)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all supported locales.&lt;/summary&gt;
  &lt;param name="locales"&gt;All supported locales.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="locales" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Enumerate::locales" OverloadKey="::vl::Locale::Enumerate(&amp; collections::List&lt;Locale&gt;)::locales" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Locale@s:vl.Locale" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetName" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetName" OverloadKey="::vl::Locale::GetName()const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the name of the locale.&lt;/summary&gt;
  &lt;returns&gt;The name of the locale.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetShortDateFormats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetShortDateFormats" OverloadKey="::vl::Locale::GetShortDateFormats(&amp; collections::List&lt;WString&gt;)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all short date formats for the locale.&lt;/summary&gt;
  &lt;param name="formats"&gt;The formats.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="formats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetShortDateFormats::formats" OverloadKey="::vl::Locale::GetShortDateFormats(&amp; collections::List&lt;WString&gt;)const::formats" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetLongDateFormats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetLongDateFormats" OverloadKey="::vl::Locale::GetLongDateFormats(&amp; collections::List&lt;WString&gt;)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all long date formats for the locale.&lt;/summary&gt;
  &lt;param name="formats"&gt;The formats.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="formats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetLongDateFormats::formats" OverloadKey="::vl::Locale::GetLongDateFormats(&amp; collections::List&lt;WString&gt;)const::formats" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetYearMonthDateFormats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetYearMonthDateFormats" OverloadKey="::vl::Locale::GetYearMonthDateFormats(&amp; collections::List&lt;WString&gt;)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all Year-Month date formats for the locale.&lt;/summary&gt;
  &lt;param name="formats"&gt;The formats.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="formats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetYearMonthDateFormats::formats" OverloadKey="::vl::Locale::GetYearMonthDateFormats(&amp; collections::List&lt;WString&gt;)const::formats" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetLongTimeFormats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetLongTimeFormats" OverloadKey="::vl::Locale::GetLongTimeFormats(&amp; collections::List&lt;WString&gt;)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all long time formats for the locale.&lt;/summary&gt;
  &lt;param name="formats"&gt;The formats.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="formats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetLongTimeFormats::formats" OverloadKey="::vl::Locale::GetLongTimeFormats(&amp; collections::List&lt;WString&gt;)const::formats" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetShortTimeFormats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetShortTimeFormats" OverloadKey="::vl::Locale::GetShortTimeFormats(&amp; collections::List&lt;WString&gt;)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all short time formats for the locale.&lt;/summary&gt;
  &lt;param name="formats"&gt;The formats.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="formats" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetShortTimeFormats::formats" OverloadKey="::vl::Locale::GetShortTimeFormats(&amp; collections::List&lt;WString&gt;)const::formats" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FormatDate" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatDate" OverloadKey="::vl::Locale::FormatDate(&amp; const WString,DateTime)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert a date to a formatted string.&lt;/summary&gt;
  &lt;returns&gt;The formatted string.&lt;/returns&gt;
  &lt;param name="format"&gt;The format to use.&lt;/param&gt;
  &lt;param name="date"&gt;The date to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="format" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatDate::format" OverloadKey="::vl::Locale::FormatDate(&amp; const WString,DateTime)const::format" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="date" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatDate::date" OverloadKey="::vl::Locale::FormatDate(&amp; const WString,DateTime)const::date" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::DateTime" Name="DateTime">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::DateTime@s:vl.DateTime" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FormatTime" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatTime" OverloadKey="::vl::Locale::FormatTime(&amp; const WString,DateTime)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert a time to a formatted string.&lt;/summary&gt;
  &lt;returns&gt;The formatted string.&lt;/returns&gt;
  &lt;param name="format"&gt;The format to use.&lt;/param&gt;
  &lt;param name="time"&gt;The time to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="format" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatTime::format" OverloadKey="::vl::Locale::FormatTime(&amp; const WString,DateTime)const::format" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="time" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatTime::time" OverloadKey="::vl::Locale::FormatTime(&amp; const WString,DateTime)const::time" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::DateTime" Name="DateTime">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::DateTime@s:vl.DateTime" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FormatNumber" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatNumber" OverloadKey="::vl::Locale::FormatNumber(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert a number to a formatted string.&lt;/summary&gt;
  &lt;returns&gt;The formatted string.&lt;/returns&gt;
  &lt;param name="number"&gt;The number to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="number" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatNumber::number" OverloadKey="::vl::Locale::FormatNumber(&amp; const WString)const::number" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FormatCurrency" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatCurrency" OverloadKey="::vl::Locale::FormatCurrency(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert a currency (money) to a formatted string.&lt;/summary&gt;
  &lt;returns&gt;The formatted string.&lt;/returns&gt;
  &lt;param name="currency"&gt;The currency to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="currency" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FormatCurrency::currency" OverloadKey="::vl::Locale::FormatCurrency(&amp; const WString)const::currency" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetShortDayOfWeekName" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetShortDayOfWeekName" OverloadKey="::vl::Locale::GetShortDayOfWeekName(vint)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the short display string of a day of week.&lt;/summary&gt;
  &lt;returns&gt;The display string.&lt;/returns&gt;
  &lt;param name="dayOfWeek"&gt;Day of week, begins from 0 as Sunday.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="dayOfWeek" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetShortDayOfWeekName::dayOfWeek" OverloadKey="::vl::Locale::GetShortDayOfWeekName(vint)const::dayOfWeek" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetLongDayOfWeekName" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetLongDayOfWeekName" OverloadKey="::vl::Locale::GetLongDayOfWeekName(vint)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the long display string of a day of week.&lt;/summary&gt;
  &lt;returns&gt;The display string.&lt;/returns&gt;
  &lt;param name="dayOfWeek"&gt;Day of week, begins from 0 as Sunday.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="dayOfWeek" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetLongDayOfWeekName::dayOfWeek" OverloadKey="::vl::Locale::GetLongDayOfWeekName(vint)const::dayOfWeek" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetShortMonthName" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetShortMonthName" OverloadKey="::vl::Locale::GetShortMonthName(vint)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the short display string of a month.&lt;/summary&gt;
  &lt;returns&gt;The display string.&lt;/returns&gt;
  &lt;param name="month"&gt;Month, begins from 1 as January.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="month" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetShortMonthName::month" OverloadKey="::vl::Locale::GetShortMonthName(vint)const::month" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetLongMonthName" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetLongMonthName" OverloadKey="::vl::Locale::GetLongMonthName(vint)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the long display string of a month.&lt;/summary&gt;
  &lt;returns&gt;The display string.&lt;/returns&gt;
  &lt;param name="month"&gt;Month, begins from 1 as January.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="month" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::GetLongMonthName::month" OverloadKey="::vl::Locale::GetLongMonthName(vint)const::month" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToFullWidth" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToFullWidth" OverloadKey="::vl::Locale::ToFullWidth(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the full width.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToFullWidth::str" OverloadKey="::vl::Locale::ToFullWidth(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToHalfWidth" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToHalfWidth" OverloadKey="::vl::Locale::ToHalfWidth(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the half width.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToHalfWidth::str" OverloadKey="::vl::Locale::ToHalfWidth(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToHiragana" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToHiragana" OverloadKey="::vl::Locale::ToHiragana(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the Hiragana.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToHiragana::str" OverloadKey="::vl::Locale::ToHiragana(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToKatagana" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToKatagana" OverloadKey="::vl::Locale::ToKatagana(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the Katagana.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToKatagana::str" OverloadKey="::vl::Locale::ToKatagana(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToLower" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToLower" OverloadKey="::vl::Locale::ToLower(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the lower case using the file system rule.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToLower::str" OverloadKey="::vl::Locale::ToLower(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToUpper" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToUpper" OverloadKey="::vl::Locale::ToUpper(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the upper case using the file system rule.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToUpper::str" OverloadKey="::vl::Locale::ToUpper(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToLinguisticLower" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToLinguisticLower" OverloadKey="::vl::Locale::ToLinguisticLower(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the lower case using the linguistic rule.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToLinguisticLower::str" OverloadKey="::vl::Locale::ToLinguisticLower(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToLinguisticUpper" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToLinguisticUpper" OverloadKey="::vl::Locale::ToLinguisticUpper(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the upper case using the linguistic rule.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToLinguisticUpper::str" OverloadKey="::vl::Locale::ToLinguisticUpper(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToSimplifiedChinese" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToSimplifiedChinese" OverloadKey="::vl::Locale::ToSimplifiedChinese(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to Simplified Chinese.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToSimplifiedChinese::str" OverloadKey="::vl::Locale::ToSimplifiedChinese(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToTraditionalChinese" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToTraditionalChinese" OverloadKey="::vl::Locale::ToTraditionalChinese(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the Traditional Chinese.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToTraditionalChinese::str" OverloadKey="::vl::Locale::ToTraditionalChinese(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ToTileCase" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToTileCase" OverloadKey="::vl::Locale::ToTileCase(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Convert characters to the tile case, in which the first letter of each major word is capitalized.&lt;/summary&gt;
  &lt;returns&gt;The converted string.&lt;/returns&gt;
  &lt;param name="str"&gt;The string to convert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="str" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::ToTileCase::str" OverloadKey="::vl::Locale::ToTileCase(&amp; const WString)const::str" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <EnumDecl Access="Public" Name="Normalization" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization" OverloadKey="::vl::Locale::Normalization" EnumClass="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Mergable flags controlling how to normalize a string.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <EnumItemDecl Access="Public" Name="None" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization::None" OverloadKey="::vl::Locale::Normalization::None">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Do nothing.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="IgnoreCase" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization::IgnoreCase" OverloadKey="::vl::Locale::Normalization::IgnoreCase">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Ignore case using the file system rule.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="IgnoreCaseLinguistic" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization::IgnoreCaseLinguistic" OverloadKey="::vl::Locale::Normalization::IgnoreCaseLinguistic">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Ignore case using the linguistic rule.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="IgnoreKanaType" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization::IgnoreKanaType" OverloadKey="::vl::Locale::Normalization::IgnoreKanaType">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Ignore the difference between between hiragana and katakana characters.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="IgnoreNonSpace" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization::IgnoreNonSpace" OverloadKey="::vl::Locale::Normalization::IgnoreNonSpace">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Ignore nonspacing characters.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="IgnoreSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization::IgnoreSymbol" OverloadKey="::vl::Locale::Normalization::IgnoreSymbol">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Ignore symbols and punctuation.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="IgnoreWidth" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization::IgnoreWidth" OverloadKey="::vl::Locale::Normalization::IgnoreWidth">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Ignore the difference between half-width and full-width characters.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="DigitsAsNumbers" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization::DigitsAsNumbers" OverloadKey="::vl::Locale::Normalization::DigitsAsNumbers">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Treat digits as numbers during sorting.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="StringSoft" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Normalization::StringSoft" OverloadKey="::vl::Locale::Normalization::StringSoft">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Treat punctuation the same as symbols.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
          </Children>
        </EnumDecl>
        <FuncDecl Access="Public" Name="Compare" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Compare" OverloadKey="::vl::Locale::Compare(&amp; const WString,&amp; const WString,Normalization)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Compare two strings.&lt;/summary&gt;
  &lt;returns&gt;Returns 0 if two strings are equal. Returns a positive number if the first string is larger. Returns a negative number if the second string is larger. When sorting strings, larger strings are put after then smaller strings.&lt;/returns&gt;
  &lt;param name="s1"&gt;The first string to compare.&lt;/param&gt;
  &lt;param name="s2"&gt;The second string to compare.&lt;/param&gt;
  &lt;param name="normalization"&gt;Flags controlling how to normalize a string.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Compare::s1" OverloadKey="::vl::Locale::Compare(&amp; const WString,&amp; const WString,Normalization)const::s1" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Compare::s2" OverloadKey="::vl::Locale::Compare(&amp; const WString,&amp; const WString,Normalization)const::s2" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="normalization" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::Compare::normalization" OverloadKey="::vl::Locale::Compare(&amp; const WString,&amp; const WString,Normalization)const::normalization" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Locale::Normalization" Name="Normalization">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Locale::Normalization@s:vl.Locale" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CompareOrdinal" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::CompareOrdinal" OverloadKey="::vl::Locale::CompareOrdinal(&amp; const WString,&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Compare two strings to test binary equivalence.&lt;/summary&gt;
  &lt;returns&gt;Returns 0 if two strings are equal. Returns a positive number if the first string is larger. Returns a negative number if the second string is larger. When sorting strings, larger strings are put after then smaller strings.&lt;/returns&gt;
  &lt;param name="s1"&gt;The first string to compare.&lt;/param&gt;
  &lt;param name="s2"&gt;The second string to compare.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::CompareOrdinal::s1" OverloadKey="::vl::Locale::CompareOrdinal(&amp; const WString,&amp; const WString)const::s1" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::CompareOrdinal::s2" OverloadKey="::vl::Locale::CompareOrdinal(&amp; const WString,&amp; const WString)const::s2" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CompareOrdinalIgnoreCase" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::CompareOrdinalIgnoreCase" OverloadKey="::vl::Locale::CompareOrdinalIgnoreCase(&amp; const WString,&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Compare two strings to test binary equivalence, ignoring case.&lt;/summary&gt;
  &lt;returns&gt;Returns 0 if two strings are equal. Returns a positive number if the first string is larger. Returns a negative number if the second string is larger. When sorting strings, larger strings are put after then smaller strings.&lt;/returns&gt;
  &lt;param name="s1"&gt;The first string to compare.&lt;/param&gt;
  &lt;param name="s2"&gt;The second string to compare.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::CompareOrdinalIgnoreCase::s1" OverloadKey="::vl::Locale::CompareOrdinalIgnoreCase(&amp; const WString,&amp; const WString)const::s1" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::CompareOrdinalIgnoreCase::s2" OverloadKey="::vl::Locale::CompareOrdinalIgnoreCase(&amp; const WString,&amp; const WString)const::s2" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FindFirst" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FindFirst" OverloadKey="::vl::Locale::FindFirst(&amp; const WString,&amp; const WString,Normalization)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Find the first position that the sub string appears in a text.&lt;/summary&gt;
  &lt;returns&gt;Returns a pair of numbers, the first number indicating the position in the text, the second number indicating the size of the equivalence sub string in the text. For some normalization, the found sub string may be binary different to the string you want to find.&lt;/returns&gt;
  &lt;param name="text"&gt;The text to find the sub string.&lt;/param&gt;
  &lt;param name="find"&gt;The sub string to match.&lt;/param&gt;
  &lt;param name="normalization"&gt;Flags controlling how to normalize a string.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FindFirst::text" OverloadKey="::vl::Locale::FindFirst(&amp; const WString,&amp; const WString,Normalization)const::text" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="find" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FindFirst::find" OverloadKey="::vl::Locale::FindFirst(&amp; const WString,&amp; const WString,Normalization)const::find" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="normalization" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FindFirst::normalization" OverloadKey="::vl::Locale::FindFirst(&amp; const WString,&amp; const WString,Normalization)const::normalization" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Locale::Normalization" Name="Normalization">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Locale::Normalization@s:vl.Locale" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FindLast" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FindLast" OverloadKey="::vl::Locale::FindLast(&amp; const WString,&amp; const WString,Normalization)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Find the last position that the sub string appears in a text.&lt;/summary&gt;
  &lt;returns&gt;Returns a pair of numbers, the first number indicating the position in the text, the second number indicating the size of the equivalence sub string in the text. For some normalization, the found sub string may be binary different to the string you want to find.&lt;/returns&gt;
  &lt;param name="text"&gt;The text to find the sub string.&lt;/param&gt;
  &lt;param name="find"&gt;The sub string to match.&lt;/param&gt;
  &lt;param name="normalization"&gt;Flags controlling how to normalize a string.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FindLast::text" OverloadKey="::vl::Locale::FindLast(&amp; const WString,&amp; const WString,Normalization)const::text" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="find" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FindLast::find" OverloadKey="::vl::Locale::FindLast(&amp; const WString,&amp; const WString,Normalization)const::find" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="normalization" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::FindLast::normalization" OverloadKey="::vl::Locale::FindLast(&amp; const WString,&amp; const WString,Normalization)const::normalization" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Locale::Normalization" Name="Normalization">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Locale::Normalization@s:vl.Locale" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StartsWith" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::StartsWith" OverloadKey="::vl::Locale::StartsWith(&amp; const WString,&amp; const WString,Normalization)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the prefix of the text equivalence to the provided sub string.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the prefix of the text equivalence to the provided sub string.&lt;/returns&gt;
  &lt;param name="text"&gt;The text to test the prefix.&lt;/param&gt;
  &lt;param name="find"&gt;The sub string to match.&lt;/param&gt;
  &lt;param name="normalization"&gt;Flags controlling how to normalize a string.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::StartsWith::text" OverloadKey="::vl::Locale::StartsWith(&amp; const WString,&amp; const WString,Normalization)const::text" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="find" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::StartsWith::find" OverloadKey="::vl::Locale::StartsWith(&amp; const WString,&amp; const WString,Normalization)const::find" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="normalization" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::StartsWith::normalization" OverloadKey="::vl::Locale::StartsWith(&amp; const WString,&amp; const WString,Normalization)const::normalization" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Locale::Normalization" Name="Normalization">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Locale::Normalization@s:vl.Locale" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="EndsWith" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::EndsWith" OverloadKey="::vl::Locale::EndsWith(&amp; const WString,&amp; const WString,Normalization)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the postfix of the text equivalence to the provided sub string.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the postfix of the text equivalence to the provided sub string.&lt;/returns&gt;
  &lt;param name="text"&gt;The text to test the postfix.&lt;/param&gt;
  &lt;param name="find"&gt;The sub string to match.&lt;/param&gt;
  &lt;param name="normalization"&gt;Flags controlling how to normalize a string.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::EndsWith::text" OverloadKey="::vl::Locale::EndsWith(&amp; const WString,&amp; const WString,Normalization)const::text" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="find" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::EndsWith::find" OverloadKey="::vl::Locale::EndsWith(&amp; const WString,&amp; const WString,Normalization)const::find" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="normalization" Tags="x64, Windows;x86, Windows" NameKey="::vl::Locale::EndsWith::normalization" OverloadKey="::vl::Locale::EndsWith(&amp; const WString,&amp; const WString,Normalization)const::normalization" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Locale::Normalization" Name="Normalization">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Locale::Normalization@s:vl.Locale" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>