<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::ThreadLocalStorage">
    <ClassDecl Access="Public" Name="ThreadLocalStorage" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage" OverloadKey="::vl::ThreadLocalStorage" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Thread local storage operations.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="Destructor" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::Destructor" OverloadKey="::vl::ThreadLocalStorage::Destructor">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl Name="void" />
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Protected" Name="key" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::key" OverloadKey="::vl::ThreadLocalStorage::key" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="destructor" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::destructor" OverloadKey="::vl::ThreadLocalStorage::destructor" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::ThreadLocalStorage::Destructor" Name="Destructor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::ThreadLocalStorage::Destructor@s:vl.ThreadLocalStorage" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="disposed" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::disposed" OverloadKey="::vl::ThreadLocalStorage::disposed" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Volatile">
              <Element>
                <RefTypeDecl Name="bool" />
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="PushStorage" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::PushStorage" OverloadKey="::vl::ThreadLocalStorage::PushStorage(* ThreadLocalStorage)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="storage" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::PushStorage::storage" OverloadKey="::vl::ThreadLocalStorage::PushStorage(* ThreadLocalStorage)::storage" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::ThreadLocalStorage" Name="ThreadLocalStorage">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::ThreadLocalStorage@s:vl.ThreadLocalStorage" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ThreadLocalStorage" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::ThreadLocalStorage" OverloadKey="::vl::ThreadLocalStorage::ThreadLocalStorage(Destructor)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_destructor" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::ThreadLocalStorage::_destructor" OverloadKey="::vl::ThreadLocalStorage::ThreadLocalStorage(Destructor)::_destructor" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::ThreadLocalStorage::Destructor" Name="Destructor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::ThreadLocalStorage::Destructor@s:vl.ThreadLocalStorage" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~ThreadLocalStorage" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::~ThreadLocalStorage" OverloadKey="::vl::ThreadLocalStorage::~ThreadLocalStorage()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Get" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::Get" OverloadKey="::vl::ThreadLocalStorage::Get()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl Name="void" />
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Set" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::Set" OverloadKey="::vl::ThreadLocalStorage::Set(* void)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="data" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::Set::data" OverloadKey="::vl::ThreadLocalStorage::Set(* void)::data" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl Name="void" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Clear" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::Clear" OverloadKey="::vl::ThreadLocalStorage::Clear()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispose" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::Dispose" OverloadKey="::vl::ThreadLocalStorage::Dispose()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FixStorages" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::FixStorages" OverloadKey="::vl::ThreadLocalStorage::FixStorages()" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Fix all storage creation.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ClearStorages" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::ClearStorages" OverloadKey="::vl::ThreadLocalStorage::ClearStorages()" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Clear all storages for the current thread. For threads that are created using &lt;links&gt;&lt;link cref="::vl::Thread@s:vl.Thread" /&gt;&lt;/links&gt;, this function will be automatically called when before the thread exit.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DisposeStorages" Tags="x64, Windows;x86, Windows" NameKey="::vl::ThreadLocalStorage::DisposeStorages" OverloadKey="::vl::ThreadLocalStorage::DisposeStorages()" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Clear all storages for the current thread (should be the main thread) and clear all records. This function can only be called by the main thread when all other threads are exited. It will reduce noices when you want to detect memory leaks.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Private" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::NotCopyable" Name="NotCopyable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::NotCopyable@s:vl.NotCopyable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>