<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.Value_xs">
    <ClassDecl Access="Public" Name="Value_xs" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs" OverloadKey="::vl::reflection::description::Value_xs" ClassType="Class">
      <Children>
        <VarDecl Access="Protected" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs::arguments" OverloadKey="::vl::reflection::description::Value_xs::arguments" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="Value_xs" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs::Value_xs" OverloadKey="::vl::reflection::description::Value_xs::Value_xs()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <TemplateDecl Access="Public" Tags="x86, Windows">
          <TypeParameters>
            <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::Value_xs::T" OverloadKey="::vl::reflection::description::Value_xs::operator ,`1(&amp; T)::T" />
          </TypeParameters>
          <Specialization />
          <Element>
            <FuncDecl Access="Public" Name="operator ," Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs::operator ," OverloadKey="::vl::reflection::description::Value_xs::operator ,`1(&amp; T)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value_xs" Name="Value_xs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::Value_xs@s:vl.reflection.description.Value_xs" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs::operator ,::value" OverloadKey="::vl::reflection::description::Value_xs::operator ,`1(&amp; T)::value" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value_xs::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value_xs::operator ,`1(&amp; T)::T@s:vl.reflection.description.Value_xs" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Element>
        </TemplateDecl>
        <TemplateDecl Access="Public" Tags="x86, Windows">
          <TypeParameters>
            <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::Value_xs::T" OverloadKey="::vl::reflection::description::Value_xs::operator ,`1(&amp; const T)::T" />
          </TypeParameters>
          <Specialization />
          <Element>
            <FuncDecl Access="Public" Name="operator ," Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs::operator ," OverloadKey="::vl::reflection::description::Value_xs::operator ,`1(&amp; const T)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value_xs" Name="Value_xs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::Value_xs@s:vl.reflection.description.Value_xs" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs::operator ,::value" OverloadKey="::vl::reflection::description::Value_xs::operator ,`1(&amp; const T)::value" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value_xs::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value_xs::operator ,`1(&amp; const T)::T@s:vl.reflection.description.Value_xs" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Element>
        </TemplateDecl>
        <FuncDecl Access="Public" Name="operator ," Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs::operator ," OverloadKey="::vl::reflection::description::Value_xs::operator ,(&amp; const Value)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value_xs" Name="Value_xs">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::Value_xs@s:vl.reflection.description.Value_xs" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs::operator ,::value" OverloadKey="::vl::reflection::description::Value_xs::operator ,(&amp; const Value)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Value_xs::operator" OverloadKey="::vl::reflection::description::Value_xs::operator()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <GenericTypeDecl>
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections@ns:vl.collections" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>