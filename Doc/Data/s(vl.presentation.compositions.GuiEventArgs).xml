<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::presentation::compositions::GuiEventArgs">
    <ClassDecl Access="Public" Name="GuiEventArgs" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiEventArgs" OverloadKey="::vl::presentation::compositions::GuiEventArgs" ClassType="Struct">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Notify event arguments.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="compositionSource" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiEventArgs::compositionSource" OverloadKey="::vl::presentation::compositions::GuiEventArgs::compositionSource" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;The event raiser composition.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="eventSource" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiEventArgs::eventSource" OverloadKey="::vl::presentation::compositions::GuiEventArgs::eventSource" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;The nearest parent of the event raiser composition that contains an event receiver. If the event raiser composition contains an event receiver, it will be the event raiser composition.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="handled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiEventArgs::handled" OverloadKey="::vl::presentation::compositions::GuiEventArgs::handled" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set this field to true will stop the event routing. This is a signal that the event is properly handeled, and the event handler want to override the default behavior.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="GuiEventArgs" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiEventArgs::GuiEventArgs" OverloadKey="::vl::presentation::compositions::GuiEventArgs::GuiEventArgs()" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create an event arguments with &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiEventArgs::compositionSource@s:vl.presentation.compositions.GuiEventArgs" /&gt;&lt;/links&gt; and &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiEventArgs::eventSource@s:vl.presentation.compositions.GuiEventArgs" /&gt;&lt;/links&gt; set to null.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiEventArgs" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiEventArgs::GuiEventArgs" OverloadKey="::vl::presentation::compositions::GuiEventArgs::GuiEventArgs(* GuiGraphicsComposition)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create an event arguments with &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiEventArgs::compositionSource@s:vl.presentation.compositions.GuiEventArgs" /&gt;&lt;/links&gt; and &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiEventArgs::eventSource@s:vl.presentation.compositions.GuiEventArgs" /&gt;&lt;/links&gt; set to a specified value.&lt;/summary&gt;
  &lt;param name="composition"&gt;The speciied value to set &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiEventArgs::compositionSource@s:vl.presentation.compositions.GuiEventArgs" /&gt;&lt;/links&gt; and &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiEventArgs::eventSource@s:vl.presentation.compositions.GuiEventArgs" /&gt;&lt;/links&gt;.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="composition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiEventArgs::GuiEventArgs::composition" OverloadKey="::vl::presentation::compositions::GuiEventArgs::GuiEventArgs(* GuiGraphicsComposition)::composition" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiEventArgs" Name="GuiEventArgs">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiEventArgs@s:vl.presentation.compositions.GuiEventArgs" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>