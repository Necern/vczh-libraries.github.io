<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.reflection.description.Value_xs">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping>
        <Map From="::vl::reflection::description::Value_xs::operator ,`1(&amp; T)::T" To="::vl::reflection::description::Value_xs::operator ,`1(&amp; T)" />
        <Map From="::vl::reflection::description::Value_xs::operator ,`1(&amp; const T)::T" To="::vl::reflection::description::Value_xs::operator ,`1(&amp; const T)" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value_xs" DisplayName="Value_xs class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value_xs::arguments" DisplayName="arguments field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value_xs::Value_xs()" DisplayName="Value_xs constructor" Doc="false" />
        <Overloads DisplayName="operator , function">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value_xs::operator ,`1(&amp; T)" DisplayName="operator , function" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value_xs::operator ,`1(&amp; const T)" DisplayName="operator , function" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value_xs::operator ,(&amp; const Value)" DisplayName="operator , method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::Value_xs::operator()" DisplayName="operator method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>