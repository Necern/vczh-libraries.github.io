<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator::TypeDescriptor" Name="TypeDescriptor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::ITypeInfo::Decorator::TypeDescriptor@s:vl.reflection.description.ITypeInfo" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="ValueAccessor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;" ClassType="Struct">
          <Children>
            <FuncDecl Access="Public" Name="BoxValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::BoxValue" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;::BoxValue(&amp; const Value,* ITypeDescriptor)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="object" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::BoxValue::object" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;::BoxValue(&amp; const Value,* ITypeDescriptor)::object" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::BoxValue::typeDescriptor" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;::BoxValue(&amp; const Value,* ITypeDescriptor)::typeDescriptor" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="UnboxValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::UnboxValue" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::UnboxValue::value" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)::value" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::UnboxValue::typeDescriptor" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)::typeDescriptor" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="valueName" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::UnboxValue::valueName" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;Value,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)::valueName" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::WString@s:vl.WString" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::VoidValue" Name="VoidValue">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::VoidValue@s:vl.reflection.description.VoidValue" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator::TypeDescriptor" Name="TypeDescriptor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::ITypeInfo::Decorator::TypeDescriptor@s:vl.reflection.description.ITypeInfo" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="ValueAccessor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;" ClassType="Struct">
          <Children>
            <FuncDecl Access="Public" Name="BoxValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::BoxValue" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;::BoxValue(&amp; const VoidValue,* ITypeDescriptor)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="object" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::BoxValue::object" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;::BoxValue(&amp; const VoidValue,* ITypeDescriptor)::object" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::VoidValue" Name="VoidValue">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::VoidValue@s:vl.reflection.description.VoidValue" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::BoxValue::typeDescriptor" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;::BoxValue(&amp; const VoidValue,* ITypeDescriptor)::typeDescriptor" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="UnboxValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::UnboxValue" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::VoidValue" Name="VoidValue">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::VoidValue@s:vl.reflection.description.VoidValue" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::UnboxValue::value" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)::value" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::UnboxValue::typeDescriptor" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)::typeDescriptor" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="valueName" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::ValueAccessor::UnboxValue::valueName" OverloadKey="::vl::reflection::description::ValueAccessor`0&lt;VoidValue,ITypeInfo::TypeDescriptor&gt;::UnboxValue(&amp; const Value,* ITypeDescriptor,&amp; const WString)::valueName" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::WString@s:vl.WString" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>