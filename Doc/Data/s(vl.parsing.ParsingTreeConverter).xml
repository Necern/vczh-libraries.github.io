<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.parsing.ParsingTreeConverter">
    <ClassDecl Access="Public" Name="ParsingTreeConverter" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter" OverloadKey="::vl::parsing::ParsingTreeConverter" ClassType="Class">
      <Children>
        <TypedefDecl Access="Public" Name="TokenList" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::TokenList" OverloadKey="::vl::parsing::ParsingTreeConverter::TokenList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex@ns:vl.regex" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <FuncDecl Access="Public" Name="ConvertClass" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::ConvertClass" OverloadKey="::vl::parsing::ParsingTreeConverter::ConvertClass(Ptr&lt;ParsingTreeObject&gt;,&amp; const TokenList)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="obj" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::ConvertClass::obj" OverloadKey="::vl::parsing::ParsingTreeConverter::ConvertClass(Ptr&lt;ParsingTreeObject&gt;,&amp; const TokenList)::obj" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="tokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::ConvertClass::tokens" OverloadKey="::vl::parsing::ParsingTreeConverter::ConvertClass(Ptr&lt;ParsingTreeObject&gt;,&amp; const TokenList)::tokens" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeConverter::TokenList" Name="TokenList">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeConverter::TokenList@s:vl.parsing.ParsingTreeConverter" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember(&amp; ParsingToken,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="member" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember::member" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember(&amp; ParsingToken,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::member" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingToken" Name="ParsingToken">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingToken@s:vl.parsing.ParsingToken" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember::node" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember(&amp; ParsingToken,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::node" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="tokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember::tokens" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember(&amp; ParsingToken,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::tokens" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeConverter::TokenList" Name="TokenList">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeConverter::TokenList@s:vl.parsing.ParsingTreeConverter" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <TemplateDecl Access="Public" Tags="x86, Windows">
          <TypeParameters>
            <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::T" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; collections::List&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::T" />
          </TypeParameters>
          <Specialization />
          <Element>
            <FuncDecl Access="Public" Name="SetMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; collections::List&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="member" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember::member" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; collections::List&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::member" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeConverter::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; collections::List&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::T@s:vl.parsing.ParsingTreeConverter" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember::node" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; collections::List&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::node" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="tokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember::tokens" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; collections::List&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::tokens" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeConverter::TokenList" Name="TokenList">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::ParsingTreeConverter::TokenList@s:vl.parsing.ParsingTreeConverter" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Element>
        </TemplateDecl>
        <TemplateDecl Access="Public" Tags="x86, Windows">
          <TypeParameters>
            <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::T" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; Ptr&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::T" />
          </TypeParameters>
          <Specialization />
          <Element>
            <FuncDecl Access="Public" Name="SetMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; Ptr&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="member" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember::member" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; Ptr&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::member" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeConverter::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; Ptr&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::T@s:vl.parsing.ParsingTreeConverter" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember::node" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; Ptr&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::node" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="tokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::ParsingTreeConverter::SetMember::tokens" OverloadKey="::vl::parsing::ParsingTreeConverter::SetMember`1(&amp; Ptr&lt;T&gt;,Ptr&lt;ParsingTreeNode&gt;,&amp; const TokenList)::tokens" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeConverter::TokenList" Name="TokenList">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::ParsingTreeConverter::TokenList@s:vl.parsing.ParsingTreeConverter" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Element>
        </TemplateDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>