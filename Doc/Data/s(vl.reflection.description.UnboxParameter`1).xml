<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.UnboxParameter`1(&amp; const Value,&amp; T,^ ITypeDescriptor,&amp; const WString)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Box an reflectable object. It supports generic types such as containers, functions, etc.&lt;/summary&gt;
  &lt;typeparam name="T"&gt;Type of the object.&lt;/typeparam&gt;
  &lt;param name="value"&gt;The value to unbox.&lt;/param&gt;
  &lt;param name="result"&gt;The unboxed object.&lt;/param&gt;
  &lt;param name="typeDescriptor"&gt;The type descriptor of the object (optional).&lt;/param&gt;
  &lt;param name="valueName"&gt;The name of the object to provide a friendly exception message if the conversion is failed (optional).&lt;/param&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::UnboxParameter`1(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="UnboxParameter" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::UnboxParameter" OverloadKey="::vl::reflection::description::UnboxParameter`1(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::UnboxParameter::value" OverloadKey="::vl::reflection::description::UnboxParameter`1(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::UnboxParameter::result" OverloadKey="::vl::reflection::description::UnboxParameter`1(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::result" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::UnboxParameter`1(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::T@s:vl.reflection.description.UnboxParameter`1(&amp; const Value,&amp; T,^ ITypeDescriptor,&amp; const WString)" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::UnboxParameter::typeDescriptor" OverloadKey="::vl::reflection::description::UnboxParameter`1(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::typeDescriptor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="valueName" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::UnboxParameter::valueName" OverloadKey="::vl::reflection::description::UnboxParameter`1(&amp; const Value,&amp; T,* ITypeDescriptor,&amp; const WString)::valueName" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>