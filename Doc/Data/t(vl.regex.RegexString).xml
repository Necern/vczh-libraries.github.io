<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.regex.RegexString">
    <SymbolTree NamespaceUrlName="vl.regex">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString" DisplayName="RegexString class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString::value" DisplayName="value field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString::start" DisplayName="start field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString::length" DisplayName="length field" Doc="false" />
        <Overloads DisplayName="RegexString constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString::RegexString(vint)" DisplayName="RegexString constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString::RegexString(&amp; const WString,vint,vint)" DisplayName="RegexString constructor" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString::Start()const" DisplayName="Start method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString::Length()const" DisplayName="Length method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString::Value()const" DisplayName="Value method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexString::operator ==(&amp; const RegexString)const" DisplayName="operator == method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>