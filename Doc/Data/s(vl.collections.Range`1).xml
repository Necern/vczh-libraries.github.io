<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.collections.Range`1(T,T)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::collections::T" OverloadKey="::vl::collections::Range`1(T,T)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="Range" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Range" OverloadKey="::vl::collections::Range`1(T,T)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::LazyList" Name="LazyList">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::LazyList`1@s:vl.collections.LazyList`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Range`1(T,T)::T@s:vl.collections.Range`1(T,T)" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Range::start" OverloadKey="::vl::collections::Range`1(T,T)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Range`1(T,T)::T@s:vl.collections.Range`1(T,T)" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::collections::Range::count" OverloadKey="::vl::collections::Range`1(T,T)::count" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::collections::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::Range`1(T,T)::T@s:vl.collections.Range`1(T,T)" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>