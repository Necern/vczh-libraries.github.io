<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::stream::StreamReader">
    <ClassDecl Access="Public" Name="StreamReader" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StreamReader" OverloadKey="::vl::stream::StreamReader" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Text reader from a stream.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="stream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StreamReader::stream" OverloadKey="::vl::stream::StreamReader::stream" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="StreamReader" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StreamReader::StreamReader" OverloadKey="::vl::stream::StreamReader::StreamReader(&amp; IStream)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a text reader.&lt;/summary&gt;
  &lt;param name="_stream"&gt;The stream to read.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_stream" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StreamReader::StreamReader::_stream" OverloadKey="::vl::stream::StreamReader::StreamReader(&amp; IStream)::_stream" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::IStream" Name="IStream">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::IStream@s:vl.stream.IStream" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsEnd" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StreamReader::IsEnd" OverloadKey="::vl::stream::StreamReader::IsEnd()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadChar" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::StreamReader::ReadChar" OverloadKey="::vl::stream::StreamReader::ReadChar()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="wchar_t" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::stream::TextReader" Name="TextReader">
              <ReferencingOverloadKeys>
                <Key Value="::vl::stream::TextReader@s:vl.stream.TextReader" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>