<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::parsing::analyzing::ParsingSymbolManager">
    <SymbolTree NamespaceUrlName="vl.parsing.analyzing">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager" DisplayName="ParsingSymbolManager class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition" DisplayName="ClassDefinition typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::ParsingSymbolList" DisplayName="ParsingSymbolList typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionTypeSymbolMap" DisplayName="DefinitionTypeSymbolMap typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionGrammarSymbolMap" DisplayName="DefinitionGrammarSymbolMap typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::SymbolClassDefinitionMap" DisplayName="SymbolClassDefinitionMap typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinitionSymbolMap" DisplayName="ClassDefinitionSymbolMap typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::globalSymbol" DisplayName="globalSymbol field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::tokenTypeSymbol" DisplayName="tokenTypeSymbol field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::createdSymbols" DisplayName="createdSymbols field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::definitionTypeSymbolCache" DisplayName="definitionTypeSymbolCache field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::definitionGrammarSymbolCache" DisplayName="definitionGrammarSymbolCache field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::definitionGrammarTypeCache" DisplayName="definitionGrammarTypeCache field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::symbolClassDefinitionCache" DisplayName="symbolClassDefinitionCache field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::classDefinitionSymbolCache" DisplayName="classDefinitionSymbolCache field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::TryAddSubSymbol(Ptr&lt;ParsingSymbol&gt;,* ParsingSymbol)" DisplayName="TryAddSubSymbol method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::ParsingSymbolManager()" DisplayName="ParsingSymbolManager constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::~ParsingSymbolManager()" DisplayName="~ParsingSymbolManager destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::GetGlobal()" DisplayName="GetGlobal method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::GetTokenType()" DisplayName="GetTokenType method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::GetArrayType(* ParsingSymbol)" DisplayName="GetArrayType method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::AddClass(* definitions::ParsingDefinitionClassDefinition,* ParsingSymbol,* ParsingSymbol)" DisplayName="AddClass method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::AddField(&amp; const WString,* ParsingSymbol,* ParsingSymbol)" DisplayName="AddField method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::AddEnum(&amp; const WString,* ParsingSymbol)" DisplayName="AddEnum method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::AddEnumItem(&amp; const WString,* ParsingSymbol)" DisplayName="AddEnumItem method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::AddTokenDefinition(&amp; const WString,&amp; const WString)" DisplayName="AddTokenDefinition method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::AddRuleDefinition(&amp; const WString,* ParsingSymbol)" DisplayName="AddRuleDefinition method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassDefinition(* ParsingSymbol)" DisplayName="CacheGetClassDefinition method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassType(* ClassDefinition)" DisplayName="CacheGetClassType method" Doc="false" />
        <Overloads DisplayName="CacheGetType method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType(* definitions::ParsingDefinitionType,* ParsingSymbol)" DisplayName="CacheGetType method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType(* definitions::ParsingDefinitionGrammar)" DisplayName="CacheGetType method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="CacheSetType method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType(* definitions::ParsingDefinitionType,* ParsingSymbol,* ParsingSymbol)" DisplayName="CacheSetType method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType(* definitions::ParsingDefinitionGrammar,* ParsingSymbol)" DisplayName="CacheSetType method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetSymbol(* definitions::ParsingDefinitionGrammar)" DisplayName="CacheGetSymbol method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetSymbol(* definitions::ParsingDefinitionGrammar,* ParsingSymbol)" DisplayName="CacheSetSymbol method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>