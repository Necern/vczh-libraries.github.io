<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.reflection.description.IValueList">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList" DisplayName="IValueList class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList::Set(vint,&amp; const Value)" DisplayName="Set method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList::Add(&amp; const Value)" DisplayName="Add method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList::Insert(vint,&amp; const Value)" DisplayName="Insert method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList::Remove(&amp; const Value)" DisplayName="Remove method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList::RemoveAt(vint)" DisplayName="RemoveAt method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList::Clear()" DisplayName="Clear method" Doc="false" />
        <Overloads DisplayName="Create method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList::Create()" DisplayName="Create method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList::Create(Ptr&lt;IValueReadonlyList&gt;)" DisplayName="Create method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::IValueList::Create(collections::LazyList&lt;Value&gt;)" DisplayName="Create method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>