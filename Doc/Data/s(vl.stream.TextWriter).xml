<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::stream::TextWriter">
    <ClassDecl Access="Public" Name="TextWriter" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter" OverloadKey="::vl::stream::TextWriter" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Text writer.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="WriteChar" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteChar" OverloadKey="::vl::stream::TextWriter::WriteChar(wchar_t)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write a single character.&lt;/summary&gt;
  &lt;param name="c"&gt;The character to write.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="c" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteChar::c" OverloadKey="::vl::stream::TextWriter::WriteChar(wchar_t)::c" Static="False">
                  <Type>
                    <RefTypeDecl Name="wchar_t" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteString" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteString" OverloadKey="::vl::stream::TextWriter::WriteString(* const wchar_t,vint)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write a string.&lt;/summary&gt;
  &lt;param name="string"&gt;Buffer to the string to write.&lt;/param&gt;
  &lt;param name="charCount"&gt;Size of the string in characters not including the zero terminator.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteString::string" OverloadKey="::vl::stream::TextWriter::WriteString(* const wchar_t,vint)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="charCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteString::charCount" OverloadKey="::vl::stream::TextWriter::WriteString(* const wchar_t,vint)::charCount" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteString" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteString" OverloadKey="::vl::stream::TextWriter::WriteString(* const wchar_t)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write a string.&lt;/summary&gt;
  &lt;param name="string"&gt;Buffer to the zero terminated string to write.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteString::string" OverloadKey="::vl::stream::TextWriter::WriteString(* const wchar_t)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteString" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteString" OverloadKey="::vl::stream::TextWriter::WriteString(&amp; const WString)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write a string.&lt;/summary&gt;
  &lt;param name="string"&gt;The string to write.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteString::string" OverloadKey="::vl::stream::TextWriter::WriteString(&amp; const WString)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteLine" OverloadKey="::vl::stream::TextWriter::WriteLine(* const wchar_t,vint)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write a string with a CRLF.&lt;/summary&gt;
  &lt;param name="string"&gt;Buffer to the string to write.&lt;/param&gt;
  &lt;param name="charCount"&gt;Size of the string in characters not including the zero terminator.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteLine::string" OverloadKey="::vl::stream::TextWriter::WriteLine(* const wchar_t,vint)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="charCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteLine::charCount" OverloadKey="::vl::stream::TextWriter::WriteLine(* const wchar_t,vint)::charCount" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteLine" OverloadKey="::vl::stream::TextWriter::WriteLine(* const wchar_t)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write a string with a CRLF.&lt;/summary&gt;
  &lt;param name="string"&gt;Buffer to the zero terminated string to write.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteLine::string" OverloadKey="::vl::stream::TextWriter::WriteLine(* const wchar_t)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteLine" OverloadKey="::vl::stream::TextWriter::WriteLine(&amp; const WString)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write a string with a CRLF.&lt;/summary&gt;
  &lt;param name="string"&gt;The string to write.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="string" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteLine::string" OverloadKey="::vl::stream::TextWriter::WriteLine(&amp; const WString)::string" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteMonospacedEnglishTable" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteMonospacedEnglishTable" OverloadKey="::vl::stream::TextWriter::WriteMonospacedEnglishTable(&amp; collections::Array&lt;WString&gt;,vint,vint)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tableByRow" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteMonospacedEnglishTable::tableByRow" OverloadKey="::vl::stream::TextWriter::WriteMonospacedEnglishTable(&amp; collections::Array&lt;WString&gt;,vint,vint)::tableByRow" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="rows" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteMonospacedEnglishTable::rows" OverloadKey="::vl::stream::TextWriter::WriteMonospacedEnglishTable(&amp; collections::Array&lt;WString&gt;,vint,vint)::rows" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="columns" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TextWriter::WriteMonospacedEnglishTable::columns" OverloadKey="::vl::stream::TextWriter::WriteMonospacedEnglishTable(&amp; collections::Array&lt;WString&gt;,vint,vint)::columns" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Private" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::NotCopyable" Name="NotCopyable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::NotCopyable@s:vl.NotCopyable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>