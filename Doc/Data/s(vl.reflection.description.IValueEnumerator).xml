<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::reflection::description::IValueEnumerator">
    <ClassDecl Access="Public" Name="IValueEnumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueEnumerator" OverloadKey="::vl::reflection::description::IValueEnumerator" ClassType="Class">
      <Children>
        <FuncDecl Access="Public" Name="GetCurrent" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueEnumerator::GetCurrent" OverloadKey="::vl::reflection::description::IValueEnumerator::GetCurrent()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueEnumerator::GetIndex" OverloadKey="::vl::reflection::description::IValueEnumerator::GetIndex()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Next" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::IValueEnumerator::Next" OverloadKey="::vl::reflection::description::IValueEnumerator::Next()" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueEnumerator" Name="IValueEnumerator">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueEnumerator@s:vl.reflection.description.IValueEnumerator" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>