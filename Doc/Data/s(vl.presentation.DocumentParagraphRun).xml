<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::presentation::DocumentParagraphRun">
    <ClassDecl Access="Public" Name="DocumentParagraphRun" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun" OverloadKey="::vl::presentation::DocumentParagraphRun" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Pepresents a paragraph run.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="alignment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun::alignment" OverloadKey="::vl::presentation::DocumentParagraphRun::alignment" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Paragraph alignment.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Nullable" Name="Nullable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Nullable`1@s:vl.Nullable`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="DocumentParagraphRun" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun::DocumentParagraphRun" OverloadKey="::vl::presentation::DocumentParagraphRun::DocumentParagraphRun()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Accept" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun::Accept" OverloadKey="::vl::presentation::DocumentParagraphRun::Accept(* IVisitor)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="visitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun::Accept::visitor" OverloadKey="::vl::presentation::DocumentParagraphRun::Accept(* IVisitor)::visitor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::DocumentRun::IVisitor" Name="IVisitor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::DocumentRun::IVisitor@s:vl.presentation.DocumentRun" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun::GetText" OverloadKey="::vl::presentation::DocumentParagraphRun::GetText(bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="skipNonTextContent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun::GetText::skipNonTextContent" OverloadKey="::vl::presentation::DocumentParagraphRun::GetText(bool)::skipNonTextContent" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun::GetText" OverloadKey="::vl::presentation::DocumentParagraphRun::GetText(&amp; stream::TextWriter,bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="writer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun::GetText::writer" OverloadKey="::vl::presentation::DocumentParagraphRun::GetText(&amp; stream::TextWriter,bool)::writer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::stream::TextWriter" Name="TextWriter">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::TextWriter@s:vl.stream.TextWriter" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::stream" Name="stream">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::stream@ns:vl.stream" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="skipNonTextContent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::DocumentParagraphRun::GetText::skipNonTextContent" OverloadKey="::vl::presentation::DocumentParagraphRun::GetText(&amp; stream::TextWriter,bool)::skipNonTextContent" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::DocumentContainerRun" Name="DocumentContainerRun">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::DocumentContainerRun@s:vl.presentation.DocumentContainerRun" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::DocumentParagraphRun" Name="DocumentParagraphRun">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::DocumentParagraphRun@s:vl.presentation.DocumentParagraphRun" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>