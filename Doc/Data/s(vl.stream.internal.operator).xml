<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::stream::internal::operator &lt;&lt;`1(&amp; Reader,&amp; T)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::stream::internal::T" OverloadKey="::vl::stream::internal::operator &lt;&lt;`1(&amp; Reader,&amp; T)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="operator &lt;&lt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::operator &lt;&lt;" OverloadKey="::vl::stream::internal::operator &lt;&lt;`1(&amp; Reader,&amp; T)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::stream::internal::Reader" Name="Reader">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::stream::internal::Reader@s:vl.stream.internal.Reader" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="reader" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::operator &lt;&lt;::reader" OverloadKey="::vl::stream::internal::operator &lt;&lt;`1(&amp; Reader,&amp; T)::reader" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::internal::Reader" Name="Reader">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::internal::Reader@s:vl.stream.internal.Reader" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::operator &lt;&lt;::value" OverloadKey="::vl::stream::internal::operator &lt;&lt;`1(&amp; Reader,&amp; T)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::internal::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::internal::operator &lt;&lt;`1(&amp; Reader,&amp; T)::T@s:vl.stream.internal.operator" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="::vl::stream::internal::operator &lt;&lt;`1(&amp; Writer,&amp; T)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::stream::internal::T" OverloadKey="::vl::stream::internal::operator &lt;&lt;`1(&amp; Writer,&amp; T)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="operator &lt;&lt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::operator &lt;&lt;" OverloadKey="::vl::stream::internal::operator &lt;&lt;`1(&amp; Writer,&amp; T)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::stream::internal::Writer" Name="Writer">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::stream::internal::Writer@s:vl.stream.internal.Writer" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="writer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::operator &lt;&lt;::writer" OverloadKey="::vl::stream::internal::operator &lt;&lt;`1(&amp; Writer,&amp; T)::writer" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::internal::Writer" Name="Writer">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::internal::Writer@s:vl.stream.internal.Writer" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::internal::operator &lt;&lt;::value" OverloadKey="::vl::stream::internal::operator &lt;&lt;`1(&amp; Writer,&amp; T)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::internal::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::internal::operator &lt;&lt;`1(&amp; Writer,&amp; T)::T@s:vl.stream.internal.operator" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>