<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::regex_internal::Automaton">
    <SymbolTree NamespaceUrlName="vl.regex_internal">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton" DisplayName="Automaton class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::Ref" DisplayName="Ref typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::states" DisplayName="states field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::transitions" DisplayName="transitions field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::captureNames" DisplayName="captureNames field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::startState" DisplayName="startState field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::Automaton()" DisplayName="Automaton constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewState()" DisplayName="NewState method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewTransition(* State,* State)" DisplayName="NewTransition method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewChars(* State,* State,CharRange)" DisplayName="NewChars method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewEpsilon(* State,* State)" DisplayName="NewEpsilon method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewBeginString(* State,* State)" DisplayName="NewBeginString method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewEndString(* State,* State)" DisplayName="NewEndString method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewNop(* State,* State)" DisplayName="NewNop method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewCapture(* State,* State,vint)" DisplayName="NewCapture method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewMatch(* State,* State,vint,vint)" DisplayName="NewMatch method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewPositive(* State,* State)" DisplayName="NewPositive method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewNegative(* State,* State)" DisplayName="NewNegative method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewNegativeFail(* State,* State)" DisplayName="NewNegativeFail method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex_internal::Automaton::NewEnd(* State,* State)" DisplayName="NewEnd method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>