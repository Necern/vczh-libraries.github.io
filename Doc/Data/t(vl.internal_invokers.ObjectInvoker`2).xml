<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.internal_invokers.ObjectInvoker`2{C,void,... TArgs}">
    <SymbolTree NamespaceUrlName="vl.internal_invokers">
      <SymbolParentMapping>
        <Map From="::vl::internal_invokers::ObjectInvoker`2&lt;C,void,... TArgs&gt;::C" To="::vl::internal_invokers::ObjectInvoker`2&lt;C,void,... TArgs&gt;" />
        <Map From="::vl::internal_invokers::ObjectInvoker`2&lt;C,void,... TArgs&gt;::TArgs" To="::vl::internal_invokers::ObjectInvoker`2&lt;C,void,... TArgs&gt;" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::internal_invokers::ObjectInvoker`2&lt;C,void,... TArgs&gt;" DisplayName="ObjectInvoker class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::internal_invokers::ObjectInvoker`2&lt;C,void,... TArgs&gt;::function" DisplayName="function field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::internal_invokers::ObjectInvoker`2&lt;C,void,... TArgs&gt;::ObjectInvoker(&amp; const C)" DisplayName="ObjectInvoker constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::internal_invokers::ObjectInvoker`2&lt;C,void,... TArgs&gt;::Invoke(... &amp;&amp; TArgs)" DisplayName="Invoke method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>