<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::presentation::elements::IGuiGraphicsParagraph">
    <ClassDecl Access="Public" Name="IGuiGraphicsParagraph" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Represents a paragraph of a layouted rich text content.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="NullInteractionId" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::NullInteractionId" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::NullInteractionId" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <EnumDecl Access="Public" Name="TextStyle" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle" EnumClass="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Text style. Items in this enumeration type can be combined.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <EnumItemDecl Access="Public" Name="Bold" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle::Bold" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle::Bold">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Bold.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="Italic" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle::Italic" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle::Italic">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Italic.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="Underline" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle::Underline" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle::Underline">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Underline.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="Strikeline" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle::Strikeline" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle::Strikeline">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Strikeline.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
          </Children>
        </EnumDecl>
        <EnumDecl Access="Public" Name="BreakCondition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition" EnumClass="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Inline object break condition.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <EnumItemDecl Access="Public" Name="StickToPreviousRun" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition::StickToPreviousRun" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition::StickToPreviousRun">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Stay together with the previous run if possible.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="StickToNextRun" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition::StickToNextRun" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition::StickToNextRun">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Stay together with the next run if possible.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="Alone" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition::Alone" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition::Alone">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Treat as a single run.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
          </Children>
        </EnumDecl>
        <EnumDecl Access="Public" Name="CaretRelativePosition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition" EnumClass="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Caret relative position.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <EnumItemDecl Access="Public" Name="CaretFirst" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretFirst" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretFirst">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The first caret position.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="CaretLast" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretLast" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretLast">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The last caret position.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="CaretLineFirst" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretLineFirst" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretLineFirst">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The first caret position of the current line.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="CaretLineLast" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretLineLast" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretLineLast">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The last caret position of the current line.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="CaretMoveLeft" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretMoveLeft" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretMoveLeft">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The relative left caret position.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="CaretMoveRight" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretMoveRight" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretMoveRight">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The relative right caret position.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="CaretMoveUp" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretMoveUp" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretMoveUp">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The relative up caret position.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="CaretMoveDown" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretMoveDown" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition::CaretMoveDown">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The relative down caret position.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
          </Children>
        </EnumDecl>
        <ClassDecl Access="Public" Name="InlineObjectProperties" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties" ClassType="Struct">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Inline object properties.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::size" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::size" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The size of the inline object.&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="baseline" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::baseline" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::baseline" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The baseline of the inline object.If the baseline is at the bottom, then set the baseline to -1.&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="breakCondition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::breakCondition" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::breakCondition" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The break condition of the inline object.&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition" Name="BreakCondition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::IGuiGraphicsParagraph::BreakCondition@s:vl.presentation.elements.IGuiGraphicsParagraph" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="backgroundImage" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::backgroundImage" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::backgroundImage" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The background image, nullable.&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsElement" Name="IGuiGraphicsElement">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsElement@s:vl.presentation.elements.IGuiGraphicsElement" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="callbackId" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::callbackId" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::callbackId" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;The id for callback. If the value is -1, then no callback will be received .&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="InlineObjectProperties" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::InlineObjectProperties" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties::InlineObjectProperties()" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <FuncDecl Access="Public" Name="GetProvider" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetProvider" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetProvider()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsLayoutProvider@s:vl.presentation.elements.IGuiGraphicsLayoutProvider" /&gt;&lt;/links&gt; object that created this paragraph.&lt;/summary&gt;
  &lt;returns&gt;The layout provider object.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsLayoutProvider" Name="IGuiGraphicsLayoutProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsLayoutProvider@s:vl.presentation.elements.IGuiGraphicsLayoutProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRenderTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetRenderTarget" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetRenderTarget()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the associated &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" /&gt;&lt;/links&gt; to this paragraph.&lt;/summary&gt;
  &lt;returns&gt;The associated render target.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget" Name="IGuiGraphicsRenderTarget">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetWrapLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetWrapLine" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetWrapLine()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get if line auto-wrapping is enabled for this paragraph.&lt;/summary&gt;
  &lt;returns&gt;Return true if line auto-wrapping is enabled for this paragraph.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetWrapLine" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetWrapLine" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetWrapLine(bool)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set if line auto-wrapping is enabled for this paragraph.&lt;/summary&gt;
  &lt;param name="value"&gt;True if line auto-wrapping is enabled for this paragraph.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetWrapLine::value" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetWrapLine(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMaxWidth" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetMaxWidth" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetMaxWidth()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the max width for this paragraph. If there is no max width limitation, it returns -1.&lt;/summary&gt;
  &lt;returns&gt;The max width for this paragraph.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetMaxWidth" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetMaxWidth" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetMaxWidth(vint)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the max width for this paragraph. If the max width is set to -1, the max width limitation will be removed.&lt;/summary&gt;
  &lt;param name="value"&gt;The max width.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetMaxWidth::value" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetMaxWidth(vint)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetParagraphAlignment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetParagraphAlignment" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetParagraphAlignment()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the horizontal alignment for this paragraph.&lt;/summary&gt;
  &lt;returns&gt;The alignment.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetParagraphAlignment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetParagraphAlignment" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetParagraphAlignment(Alignment)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the horizontal alignment for this paragraph.&lt;/summary&gt;
  &lt;param name="value"&gt;The alignment.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetParagraphAlignment::value" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetParagraphAlignment(Alignment)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetFont" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetFont" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetFont(vint,vint,&amp; const WString)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Replace the font within the specified range.&lt;/summary&gt;
  &lt;param name="start"&gt;The position of the first character of the specified range.&lt;/param&gt;
  &lt;param name="length"&gt;The length of the specified range by character.&lt;/param&gt;
  &lt;param name="value"&gt;The font.&lt;/param&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetFont::start" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetFont(vint,vint,&amp; const WString)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetFont::length" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetFont(vint,vint,&amp; const WString)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetFont::value" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetFont(vint,vint,&amp; const WString)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetSize" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetSize(vint,vint,vint)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Replace the size within the specified range.&lt;/summary&gt;
  &lt;param name="start"&gt;The position of the first character of the specified range.&lt;/param&gt;
  &lt;param name="length"&gt;The length of the specified range by character.&lt;/param&gt;
  &lt;param name="value"&gt;The size.&lt;/param&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetSize::start" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetSize(vint,vint,vint)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetSize::length" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetSize(vint,vint,vint)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetSize::value" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetSize(vint,vint,vint)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetStyle" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetStyle" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetStyle(vint,vint,TextStyle)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Replace the text style within the specified range.&lt;/summary&gt;
  &lt;param name="start"&gt;The position of the first character of the specified range.&lt;/param&gt;
  &lt;param name="length"&gt;The length of the specified range by character.&lt;/param&gt;
  &lt;param name="value"&gt;The text style.&lt;/param&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetStyle::start" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetStyle(vint,vint,TextStyle)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetStyle::length" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetStyle(vint,vint,TextStyle)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetStyle::value" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetStyle(vint,vint,TextStyle)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle" Name="TextStyle">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsParagraph::TextStyle@s:vl.presentation.elements.IGuiGraphicsParagraph" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetColor" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetColor(vint,vint,Color)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Replace the color within the specified range.&lt;/summary&gt;
  &lt;param name="start"&gt;The position of the first character of the specified range.&lt;/param&gt;
  &lt;param name="length"&gt;The length of the specified range by character.&lt;/param&gt;
  &lt;param name="value"&gt;The color.&lt;/param&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetColor::start" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetColor(vint,vint,Color)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetColor::length" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetColor(vint,vint,Color)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetColor::value" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetColor(vint,vint,Color)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetBackgroundColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetBackgroundColor" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetBackgroundColor(vint,vint,Color)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Replace the background color within the specified range.&lt;/summary&gt;
  &lt;param name="start"&gt;The position of the first character of the specified range.&lt;/param&gt;
  &lt;param name="length"&gt;The length of the specified range by character.&lt;/param&gt;
  &lt;param name="value"&gt;The background color.&lt;/param&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetBackgroundColor::start" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetBackgroundColor(vint,vint,Color)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetBackgroundColor::length" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetBackgroundColor(vint,vint,Color)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetBackgroundColor::value" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetBackgroundColor(vint,vint,Color)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetInlineObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetInlineObject" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetInlineObject(vint,vint,&amp; const InlineObjectProperties)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Bind an &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsElement@s:vl.presentation.elements.IGuiGraphicsElement" /&gt;&lt;/links&gt; to a range of text.&lt;/summary&gt;
  &lt;param name="start"&gt;The position of the first character of the specified range.&lt;/param&gt;
  &lt;param name="length"&gt;The length of the specified range by character.&lt;/param&gt;
  &lt;param name="properties"&gt;The properties for the inline object.&lt;/param&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetInlineObject::start" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetInlineObject(vint,vint,&amp; const InlineObjectProperties)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetInlineObject::length" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetInlineObject(vint,vint,&amp; const InlineObjectProperties)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="properties" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetInlineObject::properties" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::SetInlineObject(vint,vint,&amp; const InlineObjectProperties)::properties" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties" Name="InlineObjectProperties">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties@s:vl.presentation.elements.IGuiGraphicsParagraph" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ResetInlineObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::ResetInlineObject" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::ResetInlineObject(vint,vint)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Unbind all inline objects to a range of text.&lt;/summary&gt;
  &lt;param name="start"&gt;The position of the first character of the specified range.&lt;/param&gt;
  &lt;param name="length"&gt;The length of the specified range by character.&lt;/param&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::ResetInlineObject::start" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::ResetInlineObject(vint,vint)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::ResetInlineObject::length" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::ResetInlineObject(vint,vint)::length" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetHeight" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetHeight" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetHeight()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the layouted height of the text. The result depends on rich styled text and the two important properties that can be set using &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsParagraph::SetWrapLine(bool)@s:vl.presentation.elements.IGuiGraphicsParagraph" /&gt;&lt;/links&gt; and &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsParagraph::SetMaxWidth(vint)@s:vl.presentation.elements.IGuiGraphicsParagraph" /&gt;&lt;/links&gt;.&lt;/summary&gt;
  &lt;returns&gt;The layouted height.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="OpenCaret" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::OpenCaret" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::OpenCaret(vint,Color,bool)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Make the caret visible so that it will be rendered in the paragraph.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="caret"&gt;The caret.&lt;/param&gt;
  &lt;param name="color"&gt;The color of the caret.&lt;/param&gt;
  &lt;param name="frontSide"&gt;Set to true to display the caret for the character before it.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="caret" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::OpenCaret::caret" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::OpenCaret(vint,Color,bool)::caret" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="color" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::OpenCaret::color" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::OpenCaret(vint,Color,bool)::color" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="frontSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::OpenCaret::frontSide" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::OpenCaret(vint,Color,bool)::frontSide" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CloseCaret" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CloseCaret" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::CloseCaret()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Make the caret invisible.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Render" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::Render" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::Render(Rect)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Render the graphics element using a specified bounds.&lt;/summary&gt;
  &lt;param name="bounds"&gt;Bounds to decide the size and position of the binded graphics element.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="bounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::Render::bounds" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::Render(Rect)::bounds" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCaret" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaret" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaret(vint,CaretRelativePosition,&amp; bool)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get a new caret from the old caret with a relative position.&lt;/summary&gt;
  &lt;returns&gt;The new caret. Returns -1 if failed.&lt;/returns&gt;
  &lt;param name="comparingCaret"&gt;The caret to compare. If the position is CaretFirst or CaretLast, this argument is ignored.&lt;/param&gt;
  &lt;param name="position"&gt;The relative position.&lt;/param&gt;
  &lt;param name="preferFrontSide"&gt;Only for CaretMoveUp and CaretMoveDown. Set to true to make the caret prefer to get closer to the character before it. After this function is called, this argument stored the suggested side for displaying the new caret.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="comparingCaret" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaret::comparingCaret" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaret(vint,CaretRelativePosition,&amp; bool)::comparingCaret" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="position" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaret::position" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaret(vint,CaretRelativePosition,&amp; bool)::position" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition" Name="CaretRelativePosition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition@s:vl.presentation.elements.IGuiGraphicsParagraph" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="preferFrontSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaret::preferFrontSide" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaret(vint,CaretRelativePosition,&amp; bool)::preferFrontSide" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl Name="bool" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCaretBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretBounds" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretBounds(vint,bool)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the bounds of the caret.&lt;/summary&gt;
  &lt;returns&gt;The bounds whose width is 0. Returns an empty Rect value if failed.&lt;/returns&gt;
  &lt;param name="caret"&gt;The caret.&lt;/param&gt;
  &lt;param name="frontSide"&gt;Set to true to get the bounds of the front side, otherwise the back side. If only one side is valid, this argument is ignored.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="caret" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretBounds::caret" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretBounds(vint,bool)::caret" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="frontSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretBounds::frontSide" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretBounds(vint,bool)::frontSide" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCaretFromPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretFromPoint" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretFromPoint(Point)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the caret from a specified position.&lt;/summary&gt;
  &lt;returns&gt;The caret. Returns -1 if failed.&lt;/returns&gt;
  &lt;param name="point"&gt;The point.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="point" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretFromPoint::point" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetCaretFromPoint(Point)::point" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetInlineObjectFromPoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetInlineObjectFromPoint" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetInlineObjectFromPoint(Point,&amp; vint,&amp; vint)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the inline object from a specified position.&lt;/summary&gt;
  &lt;returns&gt;The inline object. Returns null if failed.&lt;/returns&gt;
  &lt;param name="point"&gt;The point.&lt;/param&gt;
  &lt;param name="start"&gt;Get the start position of this element.&lt;/param&gt;
  &lt;param name="length"&gt;Get the length of this element.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Nullable" Name="Nullable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Nullable`1@s:vl.Nullable`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties" Name="InlineObjectProperties">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsParagraph::InlineObjectProperties@s:vl.presentation.elements.IGuiGraphicsParagraph" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="point" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetInlineObjectFromPoint::point" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetInlineObjectFromPoint(Point,&amp; vint,&amp; vint)::point" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetInlineObjectFromPoint::start" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetInlineObjectFromPoint(Point,&amp; vint,&amp; vint)::start" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetInlineObjectFromPoint::length" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetInlineObjectFromPoint(Point,&amp; vint,&amp; vint)::length" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetNearestCaretFromTextPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetNearestCaretFromTextPos" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetNearestCaretFromTextPos(vint,bool)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the nearest caret from a text position.&lt;/summary&gt;
  &lt;returns&gt;The caret. Returns -1 if failed. If the text position is a caret, then the result will be the text position itself without considering the frontSide argument.&lt;/returns&gt;
  &lt;param name="textPos"&gt;The caret to compare. If the position is CaretFirst or CaretLast, this argument is ignored.&lt;/param&gt;
  &lt;param name="frontSide"&gt;Set to true to search in front of the text position, otherwise the opposite position.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="textPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetNearestCaretFromTextPos::textPos" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetNearestCaretFromTextPos(vint,bool)::textPos" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="frontSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetNearestCaretFromTextPos::frontSide" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::GetNearestCaretFromTextPos(vint,bool)::frontSide" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsValidCaret" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::IsValidCaret" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::IsValidCaret(vint)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the caret valid.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the caret is valid.&lt;/returns&gt;
  &lt;param name="caret"&gt;The caret to test.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="caret" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::IsValidCaret::caret" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::IsValidCaret(vint)::caret" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsValidTextPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::IsValidTextPos" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::IsValidTextPos(vint)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the text position valid.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the text position is valid.&lt;/returns&gt;
  &lt;param name="textPos"&gt;The text position to test.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="textPos" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::IGuiGraphicsParagraph::IsValidTextPos::textPos" OverloadKey="::vl::presentation::elements::IGuiGraphicsParagraph::IsValidTextPos(vint)::textPos" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsParagraph" Name="IGuiGraphicsParagraph">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::IGuiGraphicsParagraph@s:vl.presentation.elements.IGuiGraphicsParagraph" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>