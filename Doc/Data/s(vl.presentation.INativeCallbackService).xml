<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.INativeCallbackService">
    <ClassDecl Access="Public" Name="INativeCallbackService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeCallbackService" OverloadKey="::vl::presentation::INativeCallbackService" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Callback service. To access this service, use &lt;links&gt;&lt;link cref="::vl::presentation::INativeController::CallbackService()@s:vl.presentation.INativeController" /&gt;&lt;/links&gt;.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="InstallListener" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeCallbackService::InstallListener" OverloadKey="::vl::presentation::INativeCallbackService::InstallListener(* INativeControllerListener)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Install a global message listener.
&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="listener"&gt;The global message listener to install.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="listener" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeCallbackService::InstallListener::listener" OverloadKey="::vl::presentation::INativeCallbackService::InstallListener(* INativeControllerListener)::listener" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeControllerListener" Name="INativeControllerListener">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeControllerListener@s:vl.presentation.INativeControllerListener" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="UninstallListener" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeCallbackService::UninstallListener" OverloadKey="::vl::presentation::INativeCallbackService::UninstallListener(* INativeControllerListener)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Uninstall a global message listener.
&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="listener"&gt;The global message listener to uninstall.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="listener" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::INativeCallbackService::UninstallListener::listener" OverloadKey="::vl::presentation::INativeCallbackService::UninstallListener(* INativeControllerListener)::listener" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeControllerListener" Name="INativeControllerListener">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeControllerListener@s:vl.presentation.INativeControllerListener" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Interface" Name="Interface">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Interface@s:vl.Interface" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>