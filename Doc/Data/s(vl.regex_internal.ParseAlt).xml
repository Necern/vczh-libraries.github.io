<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.regex_internal.ParseAlt(&amp; ^ const wchar_t)">
    <FuncDecl Access="Public" Name="ParseAlt" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::ParseAlt" OverloadKey="::vl::regex_internal::ParseAlt(&amp; * const wchar_t)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::regex_internal::Expression" Name="Expression">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::regex_internal::Expression@s:vl.regex_internal.Expression" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex_internal::ParseAlt::input" OverloadKey="::vl::regex_internal::ParseAlt(&amp; * const wchar_t)::input" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>