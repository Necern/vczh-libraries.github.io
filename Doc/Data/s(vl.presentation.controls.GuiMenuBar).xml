<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.GuiMenuBar">
    <ClassDecl Access="Public" Name="GuiMenuBar" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar" OverloadKey="::vl::presentation::controls::GuiMenuBar" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Menu bar.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Private" Name="GetParentMenuService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar::GetParentMenuService" OverloadKey="::vl::presentation::controls::GuiMenuBar::GetParentMenuService()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService" Name="IGuiMenuService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::IGuiMenuService@s:vl.presentation.controls.IGuiMenuService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Private" Name="GetPreferredDirection" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar::GetPreferredDirection" OverloadKey="::vl::presentation::controls::GuiMenuBar::GetPreferredDirection()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService::Direction" Name="Direction">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::IGuiMenuService::Direction@s:vl.presentation.controls.IGuiMenuService" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Private" Name="IsActiveState" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar::IsActiveState" OverloadKey="::vl::presentation::controls::GuiMenuBar::IsActiveState()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Private" Name="IsSubMenuActivatedByMouseDown" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar::IsSubMenuActivatedByMouseDown" OverloadKey="::vl::presentation::controls::GuiMenuBar::IsSubMenuActivatedByMouseDown()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiMenuBar" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar::GuiMenuBar" OverloadKey="::vl::presentation::controls::GuiMenuBar::GuiMenuBar(* GuiControl::IStyleController)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a control with a specified style controller.&lt;/summary&gt;
  &lt;param name="_styleController"&gt;The style controller.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_styleController" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar::GuiMenuBar::_styleController" OverloadKey="::vl::presentation::controls::GuiMenuBar::GuiMenuBar(* GuiControl::IStyleController)::_styleController" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl::IStyleController" Name="IStyleController">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl::IStyleController@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiMenuBar" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar::~GuiMenuBar" OverloadKey="::vl::presentation::controls::GuiMenuBar::~GuiMenuBar()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="QueryService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar::QueryService" OverloadKey="::vl::presentation::controls::GuiMenuBar::QueryService(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="identifier" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiMenuBar::QueryService::identifier" OverloadKey="::vl::presentation::controls::GuiMenuBar::QueryService(&amp; const WString)::identifier" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Private" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService" Name="IGuiMenuService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::IGuiMenuService@s:vl.presentation.controls.IGuiMenuService" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenuBar" Name="GuiMenuBar">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiMenuBar@s:vl.presentation.controls.GuiMenuBar" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>