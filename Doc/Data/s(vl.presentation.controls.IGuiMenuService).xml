<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.IGuiMenuService">
    <ClassDecl Access="Public" Name="IGuiMenuService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService" OverloadKey="::vl::presentation::controls::IGuiMenuService" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;IGuiMenuService is a required service for menu item container.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="Identifier" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::Identifier" OverloadKey="::vl::presentation::controls::IGuiMenuService::Identifier" Static="True">
          <Document>&lt;Document&gt;
  &lt;summary&gt;The identifier for this service.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl Name="wchar_t" />
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <EnumDecl Access="Public" Name="Direction" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::Direction" OverloadKey="::vl::presentation::controls::IGuiMenuService::Direction" EnumClass="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Direction to decide the position for a menu with specified control.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <EnumItemDecl Access="Public" Name="Horizontal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::Direction::Horizontal" OverloadKey="::vl::presentation::controls::IGuiMenuService::Direction::Horizontal">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Aligned to the top or bottom side.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="Vertical" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::Direction::Vertical" OverloadKey="::vl::presentation::controls::IGuiMenuService::Direction::Vertical">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Aligned to the left or right side.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
          </Children>
        </EnumDecl>
        <VarDecl Access="Protected" Name="openingMenu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::openingMenu" OverloadKey="::vl::presentation::controls::IGuiMenuService::openingMenu" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="IGuiMenuService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::IGuiMenuService" OverloadKey="::vl::presentation::controls::IGuiMenuService::IGuiMenuService()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetParentMenuService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::GetParentMenuService" OverloadKey="::vl::presentation::controls::IGuiMenuService::GetParentMenuService()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the parent service. This service represents the parent menu that host the menu item control that contains this menu.&lt;/summary&gt;
  &lt;returns&gt;The parent service.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService" Name="IGuiMenuService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::IGuiMenuService@s:vl.presentation.controls.IGuiMenuService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetPreferredDirection" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::GetPreferredDirection" OverloadKey="::vl::presentation::controls::IGuiMenuService::GetPreferredDirection()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the preferred direction to open the sub menu.&lt;/summary&gt;
  &lt;returns&gt;The preferred direction to open the sub menu.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService::Direction" Name="Direction">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::IGuiMenuService::Direction@s:vl.presentation.controls.IGuiMenuService" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsActiveState" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::IsActiveState" OverloadKey="::vl::presentation::controls::IGuiMenuService::IsActiveState()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is this menu is active. When an menu is active, the sub menu is automatically opened when the corresponding menu item is opened.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this menu is active.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsSubMenuActivatedByMouseDown" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::IsSubMenuActivatedByMouseDown" OverloadKey="::vl::presentation::controls::IGuiMenuService::IsSubMenuActivatedByMouseDown()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test all sub menu items are actived by mouse down.&lt;/summary&gt;
  &lt;returns&gt;Returns true if all sub menu items are actived by mouse down.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MenuItemExecuted" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::MenuItemExecuted" OverloadKey="::vl::presentation::controls::IGuiMenuService::MenuItemExecuted()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when the menu item is executed.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetOpeningMenu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::GetOpeningMenu" OverloadKey="::vl::presentation::controls::IGuiMenuService::GetOpeningMenu()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the opening sub menu.&lt;/summary&gt;
  &lt;returns&gt;The opening sub menu.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MenuOpened" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::MenuOpened" OverloadKey="::vl::presentation::controls::IGuiMenuService::MenuOpened(* GuiMenu)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when the sub menu is opened.&lt;/summary&gt;
  &lt;param name="menu"&gt;The sub menu.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="menu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::MenuOpened::menu" OverloadKey="::vl::presentation::controls::IGuiMenuService::MenuOpened(* GuiMenu)::menu" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MenuClosed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::MenuClosed" OverloadKey="::vl::presentation::controls::IGuiMenuService::MenuClosed(* GuiMenu)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when the sub menu is closed.&lt;/summary&gt;
  &lt;param name="menu"&gt;The sub menu.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="menu" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiMenuService::MenuClosed::menu" OverloadKey="::vl::presentation::controls::IGuiMenuService::MenuClosed(* GuiMenu)::menu" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService" Name="IGuiMenuService">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::IGuiMenuService@s:vl.presentation.controls.IGuiMenuService" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>