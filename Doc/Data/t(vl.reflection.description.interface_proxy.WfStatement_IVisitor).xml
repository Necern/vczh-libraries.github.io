<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.reflection.description.interface_proxy.WfStatement_IVisitor">
    <SymbolTree NamespaceUrlName="vl.reflection.description.interface_proxy">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor" DisplayName="WfStatement_IVisitor class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::WfStatement_IVisitor(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="WfStatement_IVisitor constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfBreakStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfContinueStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfReturnStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfDeleteStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfRaiseExceptionStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfIfStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfSwitchStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfWhileStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfForEachStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfTryStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfBlockStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfExpressionStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::interface_proxy::WfStatement_IVisitor::Visit(* vl::workflow::WfVariableStatement)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>