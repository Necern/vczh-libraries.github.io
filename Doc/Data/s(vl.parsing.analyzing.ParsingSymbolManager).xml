<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::parsing::analyzing::ParsingSymbolManager">
    <ClassDecl Access="Public" Name="ParsingSymbolManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager" ClassType="Class">
      <Children>
        <TypedefDecl Access="Private" Name="ClassDefinition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionClassDefinition" Name="ParsingDefinitionClassDefinition">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::definitions::ParsingDefinitionClassDefinition@s:vl.parsing.definitions.ParsingDefinitionClassDefinition" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ParsingSymbolList" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::ParsingSymbolList" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::ParsingSymbolList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="DefinitionTypeSymbolMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionTypeSymbolMap" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionTypeSymbolMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::DefinitionTypeScopePair" Name="DefinitionTypeScopePair">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::DefinitionTypeScopePair@s:vl.parsing.analyzing.DefinitionTypeScopePair" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="DefinitionGrammarSymbolMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionGrammarSymbolMap" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionGrammarSymbolMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionGrammar" Name="ParsingDefinitionGrammar">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::definitions::ParsingDefinitionGrammar@s:vl.parsing.definitions.ParsingDefinitionGrammar" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="SymbolClassDefinitionMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::SymbolClassDefinitionMap" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::SymbolClassDefinitionMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition" Name="ClassDefinition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition@s:vl.parsing.analyzing.ParsingSymbolManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ClassDefinitionSymbolMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinitionSymbolMap" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinitionSymbolMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition" Name="ClassDefinition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition@s:vl.parsing.analyzing.ParsingSymbolManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Protected" Name="globalSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::globalSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::globalSymbol" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="tokenTypeSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::tokenTypeSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::tokenTypeSymbol" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="createdSymbols" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::createdSymbols" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::createdSymbols" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::ParsingSymbolList" Name="ParsingSymbolList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::ParsingSymbolList@s:vl.parsing.analyzing.ParsingSymbolManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="definitionTypeSymbolCache" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::definitionTypeSymbolCache" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::definitionTypeSymbolCache" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionTypeSymbolMap" Name="DefinitionTypeSymbolMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionTypeSymbolMap@s:vl.parsing.analyzing.ParsingSymbolManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="definitionGrammarSymbolCache" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::definitionGrammarSymbolCache" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::definitionGrammarSymbolCache" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionGrammarSymbolMap" Name="DefinitionGrammarSymbolMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionGrammarSymbolMap@s:vl.parsing.analyzing.ParsingSymbolManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="definitionGrammarTypeCache" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::definitionGrammarTypeCache" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::definitionGrammarTypeCache" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionGrammarSymbolMap" Name="DefinitionGrammarSymbolMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::DefinitionGrammarSymbolMap@s:vl.parsing.analyzing.ParsingSymbolManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="symbolClassDefinitionCache" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::symbolClassDefinitionCache" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::symbolClassDefinitionCache" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::SymbolClassDefinitionMap" Name="SymbolClassDefinitionMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::SymbolClassDefinitionMap@s:vl.parsing.analyzing.ParsingSymbolManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="classDefinitionSymbolCache" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::classDefinitionSymbolCache" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::classDefinitionSymbolCache" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinitionSymbolMap" Name="ClassDefinitionSymbolMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinitionSymbolMap@s:vl.parsing.analyzing.ParsingSymbolManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="TryAddSubSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::TryAddSubSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::TryAddSubSymbol(Ptr&lt;ParsingSymbol&gt;,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="subSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::TryAddSubSymbol::subSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::TryAddSubSymbol(Ptr&lt;ParsingSymbol&gt;,* ParsingSymbol)::subSymbol" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="parentSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::TryAddSubSymbol::parentSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::TryAddSubSymbol(Ptr&lt;ParsingSymbol&gt;,* ParsingSymbol)::parentSymbol" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ParsingSymbolManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::ParsingSymbolManager" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::ParsingSymbolManager()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~ParsingSymbolManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::~ParsingSymbolManager" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::~ParsingSymbolManager()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetGlobal" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::GetGlobal" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::GetGlobal()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTokenType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::GetTokenType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::GetTokenType()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetArrayType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::GetArrayType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::GetArrayType(* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="elementType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::GetArrayType::elementType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::GetArrayType(* ParsingSymbol)::elementType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddClass" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddClass" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddClass(* definitions::ParsingDefinitionClassDefinition,* ParsingSymbol,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="classDef" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddClass::classDef" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddClass(* definitions::ParsingDefinitionClassDefinition,* ParsingSymbol,* ParsingSymbol)::classDef" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionClassDefinition" Name="ParsingDefinitionClassDefinition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions::ParsingDefinitionClassDefinition@s:vl.parsing.definitions.ParsingDefinitionClassDefinition" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="baseType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddClass::baseType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddClass(* definitions::ParsingDefinitionClassDefinition,* ParsingSymbol,* ParsingSymbol)::baseType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="parentType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddClass::parentType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddClass(* definitions::ParsingDefinitionClassDefinition,* ParsingSymbol,* ParsingSymbol)::parentType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddField" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddField" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddField(&amp; const WString,* ParsingSymbol,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddField::name" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddField(&amp; const WString,* ParsingSymbol,* ParsingSymbol)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddField::classType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddField(&amp; const WString,* ParsingSymbol,* ParsingSymbol)::classType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="fieldType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddField::fieldType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddField(&amp; const WString,* ParsingSymbol,* ParsingSymbol)::fieldType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddEnum" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnum" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnum(&amp; const WString,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnum::name" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnum(&amp; const WString,* ParsingSymbol)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="parentType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnum::parentType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnum(&amp; const WString,* ParsingSymbol)::parentType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddEnumItem" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnumItem" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnumItem(&amp; const WString,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnumItem::name" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnumItem(&amp; const WString,* ParsingSymbol)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="enumType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnumItem::enumType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddEnumItem(&amp; const WString,* ParsingSymbol)::enumType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddTokenDefinition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddTokenDefinition" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddTokenDefinition(&amp; const WString,&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddTokenDefinition::name" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddTokenDefinition(&amp; const WString,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="regex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddTokenDefinition::regex" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddTokenDefinition(&amp; const WString,&amp; const WString)::regex" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddRuleDefinition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddRuleDefinition" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddRuleDefinition(&amp; const WString,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddRuleDefinition::name" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddRuleDefinition(&amp; const WString,* ParsingSymbol)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="ruleType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::AddRuleDefinition::ruleType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::AddRuleDefinition(&amp; const WString,* ParsingSymbol)::ruleType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CacheGetClassDefinition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassDefinition" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassDefinition(* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition" Name="ClassDefinition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition@s:vl.parsing.analyzing.ParsingSymbolManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassDefinition::type" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassDefinition(* ParsingSymbol)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CacheGetClassType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassType(* ClassDefinition)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassType::type" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetClassType(* ClassDefinition)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition" Name="ClassDefinition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbolManager::ClassDefinition@s:vl.parsing.analyzing.ParsingSymbolManager" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CacheGetType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType(* definitions::ParsingDefinitionType,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType::type" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType(* definitions::ParsingDefinitionType,* ParsingSymbol)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionType" Name="ParsingDefinitionType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions::ParsingDefinitionType@s:vl.parsing.definitions.ParsingDefinitionType" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType::scope" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType(* definitions::ParsingDefinitionType,* ParsingSymbol)::scope" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CacheSetType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType(* definitions::ParsingDefinitionType,* ParsingSymbol,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType::type" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType(* definitions::ParsingDefinitionType,* ParsingSymbol,* ParsingSymbol)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionType" Name="ParsingDefinitionType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions::ParsingDefinitionType@s:vl.parsing.definitions.ParsingDefinitionType" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType::scope" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType(* definitions::ParsingDefinitionType,* ParsingSymbol,* ParsingSymbol)::scope" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType::symbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType(* definitions::ParsingDefinitionType,* ParsingSymbol,* ParsingSymbol)::symbol" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CacheGetSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetSymbol(* definitions::ParsingDefinitionGrammar)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="grammar" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetSymbol::grammar" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetSymbol(* definitions::ParsingDefinitionGrammar)::grammar" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionGrammar" Name="ParsingDefinitionGrammar">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions::ParsingDefinitionGrammar@s:vl.parsing.definitions.ParsingDefinitionGrammar" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CacheSetSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetSymbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetSymbol(* definitions::ParsingDefinitionGrammar,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="grammar" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetSymbol::grammar" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetSymbol(* definitions::ParsingDefinitionGrammar,* ParsingSymbol)::grammar" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionGrammar" Name="ParsingDefinitionGrammar">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions::ParsingDefinitionGrammar@s:vl.parsing.definitions.ParsingDefinitionGrammar" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetSymbol::symbol" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetSymbol(* definitions::ParsingDefinitionGrammar,* ParsingSymbol)::symbol" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CacheGetType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType(* definitions::ParsingDefinitionGrammar)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="grammar" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType::grammar" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheGetType(* definitions::ParsingDefinitionGrammar)::grammar" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionGrammar" Name="ParsingDefinitionGrammar">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions::ParsingDefinitionGrammar@s:vl.parsing.definitions.ParsingDefinitionGrammar" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CacheSetType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType(* definitions::ParsingDefinitionGrammar,* ParsingSymbol)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="grammar" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType::grammar" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType(* definitions::ParsingDefinitionGrammar,* ParsingSymbol)::grammar" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::definitions::ParsingDefinitionGrammar" Name="ParsingDefinitionGrammar">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::definitions::ParsingDefinitionGrammar@s:vl.parsing.definitions.ParsingDefinitionGrammar" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::definitions" Name="definitions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::definitions@ns:vl.parsing.definitions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType::type" OverloadKey="::vl::parsing::analyzing::ParsingSymbolManager::CacheSetType(* definitions::ParsingDefinitionGrammar,* ParsingSymbol)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>