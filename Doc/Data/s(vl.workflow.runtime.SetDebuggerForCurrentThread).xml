<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.runtime.SetDebuggerForCurrentThread(Ptr{WfDebugger})">
    <FuncDecl Access="Public" Name="SetDebuggerForCurrentThread" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::SetDebuggerForCurrentThread" OverloadKey="::vl::workflow::runtime::SetDebuggerForCurrentThread(Ptr&lt;WfDebugger&gt;)" Virtual="Normal" Function="Function">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Set the debugger for the current thread.&lt;/summary&gt;
  &lt;param name="debugger"&gt;The debugger.&lt;/param&gt;
&lt;/Document&gt;</Document>
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="debugger" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::runtime::SetDebuggerForCurrentThread::debugger" OverloadKey="::vl::workflow::runtime::SetDebuggerForCurrentThread(Ptr&lt;WfDebugger&gt;)::debugger" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfDebugger" Name="WfDebugger">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::runtime::WfDebugger@s:vl.workflow.runtime.WfDebugger" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>