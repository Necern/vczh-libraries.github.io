<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.parsing.analyzing.Transition">
    <ClassDecl Access="Public" Name="Transition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition" OverloadKey="::vl::parsing::analyzing::Transition" ClassType="Class">
      <Children>
        <EnumDecl Access="Public" Name="TransitionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::TransitionType" OverloadKey="::vl::parsing::analyzing::Transition::TransitionType" EnumClass="False">
          <Children>
            <EnumItemDecl Access="Public" Name="TokenBegin" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::TransitionType::TokenBegin" OverloadKey="::vl::parsing::analyzing::Transition::TransitionType::TokenBegin" />
            <EnumItemDecl Access="Public" Name="TokenFinish" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::TransitionType::TokenFinish" OverloadKey="::vl::parsing::analyzing::Transition::TransitionType::TokenFinish" />
            <EnumItemDecl Access="Public" Name="NormalReduce" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::TransitionType::NormalReduce" OverloadKey="::vl::parsing::analyzing::Transition::TransitionType::NormalReduce" />
            <EnumItemDecl Access="Public" Name="LeftRecursiveReduce" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::TransitionType::LeftRecursiveReduce" OverloadKey="::vl::parsing::analyzing::Transition::TransitionType::LeftRecursiveReduce" />
            <EnumItemDecl Access="Public" Name="Epsilon" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::TransitionType::Epsilon" OverloadKey="::vl::parsing::analyzing::Transition::TransitionType::Epsilon" />
            <EnumItemDecl Access="Public" Name="Symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::TransitionType::Symbol" OverloadKey="::vl::parsing::analyzing::Transition::TransitionType::Symbol" />
          </Children>
        </EnumDecl>
        <EnumDecl Access="Public" Name="StackOperationType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::StackOperationType" OverloadKey="::vl::parsing::analyzing::Transition::StackOperationType" EnumClass="False">
          <Children>
            <EnumItemDecl Access="Public" Name="None" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::StackOperationType::None" OverloadKey="::vl::parsing::analyzing::Transition::StackOperationType::None" />
            <EnumItemDecl Access="Public" Name="ShiftReduceCompacted" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::StackOperationType::ShiftReduceCompacted" OverloadKey="::vl::parsing::analyzing::Transition::StackOperationType::ShiftReduceCompacted" />
            <EnumItemDecl Access="Public" Name="LeftRecursive" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::StackOperationType::LeftRecursive" OverloadKey="::vl::parsing::analyzing::Transition::StackOperationType::LeftRecursive" />
          </Children>
        </EnumDecl>
        <VarDecl Access="Public" Name="source" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::source" OverloadKey="::vl::parsing::analyzing::Transition::source" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::State" Name="State">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::State@s:vl.parsing.analyzing.State" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="target" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::target" OverloadKey="::vl::parsing::analyzing::Transition::target" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::State" Name="State">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::State@s:vl.parsing.analyzing.State" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="actions" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::actions" OverloadKey="::vl::parsing::analyzing::Transition::actions" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::Action" Name="Action">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::analyzing::Action@s:vl.parsing.analyzing.Action" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="transitionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::transitionType" OverloadKey="::vl::parsing::analyzing::Transition::transitionType" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::Transition::TransitionType" Name="TransitionType">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::Transition::TransitionType@s:vl.parsing.analyzing.Transition" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="stackOperationType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::stackOperationType" OverloadKey="::vl::parsing::analyzing::Transition::stackOperationType" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::Transition::StackOperationType" Name="StackOperationType">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::analyzing::Transition::StackOperationType@s:vl.parsing.analyzing.Transition" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="transitionSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::transitionSymbol" OverloadKey="::vl::parsing::analyzing::Transition::transitionSymbol" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::ParsingSymbol" Name="ParsingSymbol">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::analyzing::ParsingSymbol@s:vl.parsing.analyzing.ParsingSymbol" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="Transition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::Transition" OverloadKey="::vl::parsing::analyzing::Transition::Transition()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~Transition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::~Transition" OverloadKey="::vl::parsing::analyzing::Transition::~Transition()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsEquivalent" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::IsEquivalent" OverloadKey="::vl::parsing::analyzing::Transition::IsEquivalent(* Transition,* Transition,bool)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="t1" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::IsEquivalent::t1" OverloadKey="::vl::parsing::analyzing::Transition::IsEquivalent(* Transition,* Transition,bool)::t1" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::Transition" Name="Transition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::Transition@s:vl.parsing.analyzing.Transition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="t2" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::IsEquivalent::t2" OverloadKey="::vl::parsing::analyzing::Transition::IsEquivalent(* Transition,* Transition,bool)::t2" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::analyzing::Transition" Name="Transition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::analyzing::Transition@s:vl.parsing.analyzing.Transition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="careSourceAndTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::analyzing::Transition::IsEquivalent::careSourceAndTarget" OverloadKey="::vl::parsing::analyzing::Transition::IsEquivalent(* Transition,* Transition,bool)::careSourceAndTarget" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>