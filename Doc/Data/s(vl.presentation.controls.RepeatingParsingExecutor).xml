<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.RepeatingParsingExecutor">
    <ClassDecl Access="Public" Name="RepeatingParsingExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Repeating parsing executor.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <ClassDecl Access="Public" Name="ICallback" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" ClassType="Class">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Callback.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <FuncDecl Access="Public" Name="OnParsingFinishedAsync" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback::OnParsingFinishedAsync" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback::OnParsingFinishedAsync(&amp; const RepeatingParsingOutput)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Callback when a parsing task is finished.&lt;/summary&gt;
  &lt;param name="output"&gt;the result of the parsing.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback::OnParsingFinishedAsync::output" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback::OnParsingFinishedAsync(&amp; const RepeatingParsingOutput)::output" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingOutput" Name="RepeatingParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingParsingOutput@s:vl.presentation.controls.RepeatingParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="RequireAutoSubmitTask" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback::RequireAutoSubmitTask" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback::RequireAutoSubmitTask(bool)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Callback when &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt; requires enabling or disabling automatically repeating calling to the SubmitTask function.&lt;/summary&gt;
  &lt;param name="enabled"&gt;Set to true to require an automatically repeating calling to the SubmitTask function&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="enabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback::RequireAutoSubmitTask::enabled" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback::RequireAutoSubmitTask(bool)::enabled" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Interface" Name="Interface">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Interface@s:vl.Interface" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <ClassDecl Access="Public" Name="IParsingAnalyzer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer" ClassType="Class">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Parsing analyzer.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <FuncDecl Access="Private" Name="ToParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToParent" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToParent(* parsing::ParsingTreeNode,* const RepeatingPartialParsingOutput)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToParent::node" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToParent(* parsing::ParsingTreeNode,* const RepeatingPartialParsingOutput)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToParent::output" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToParent(* parsing::ParsingTreeNode,* const RepeatingPartialParsingOutput)::output" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingPartialParsingOutput" Name="RepeatingPartialParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingPartialParsingOutput@s:vl.presentation.controls.RepeatingPartialParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Private" Name="ToChild" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild(* parsing::ParsingTreeObject,* const RepeatingPartialParsingOutput)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild::node" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild(* parsing::ParsingTreeObject,* const RepeatingPartialParsingOutput)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild::output" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild(* parsing::ParsingTreeObject,* const RepeatingPartialParsingOutput)::output" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingPartialParsingOutput" Name="RepeatingPartialParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingPartialParsingOutput@s:vl.presentation.controls.RepeatingPartialParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Private" Name="ToChild" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild(Ptr&lt;parsing::ParsingTreeNode&gt;,* const RepeatingPartialParsingOutput)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild::node" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild(Ptr&lt;parsing::ParsingTreeNode&gt;,* const RepeatingPartialParsingOutput)::node" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild::output" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::ToChild(Ptr&lt;parsing::ParsingTreeNode&gt;,* const RepeatingPartialParsingOutput)::output" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingPartialParsingOutput" Name="RepeatingPartialParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingPartialParsingOutput@s:vl.presentation.controls.RepeatingPartialParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="GetParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetParent" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetParent(* parsing::ParsingTreeNode,* const RepeatingPartialParsingOutput)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get a syntax tree node's parent when the whole tree is in a partial modified state. You should use this function instead of ParsingTreeNode::GetParent when implementing this interface.&lt;/summary&gt;
  &lt;returns&gt;Returns the parent node.&lt;/returns&gt;
  &lt;param name="node"&gt;The node.&lt;/param&gt;
  &lt;param name="output"&gt;The partial parsing output, which describes how the whole tree is partial modified.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetParent::node" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetParent(* parsing::ParsingTreeNode,* const RepeatingPartialParsingOutput)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetParent::output" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetParent(* parsing::ParsingTreeNode,* const RepeatingPartialParsingOutput)::output" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingPartialParsingOutput" Name="RepeatingPartialParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingPartialParsingOutput@s:vl.presentation.controls.RepeatingPartialParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="GetMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetMember" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetMember(* parsing::ParsingTreeObject,&amp; const WString,* const RepeatingPartialParsingOutput)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get a syntax tree node's member when the whole tree is in a partial modified state. You should use this function instead of ParsingTreeObject::GetMember when implementing this interface.&lt;/summary&gt;
  &lt;returns&gt;Returns the member node.&lt;/returns&gt;
  &lt;param name="node"&gt;The node.&lt;/param&gt;
  &lt;param name="name"&gt;The name of the member.&lt;/param&gt;
  &lt;param name="output"&gt;The partial parsing output, which describes how the whole tree is partial modified.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetMember::node" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetMember(* parsing::ParsingTreeObject,&amp; const WString,* const RepeatingPartialParsingOutput)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetMember::name" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetMember(* parsing::ParsingTreeObject,&amp; const WString,* const RepeatingPartialParsingOutput)::name" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::WString@s:vl.WString" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetMember::output" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetMember(* parsing::ParsingTreeObject,&amp; const WString,* const RepeatingPartialParsingOutput)::output" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingPartialParsingOutput" Name="RepeatingPartialParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingPartialParsingOutput@s:vl.presentation.controls.RepeatingPartialParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="GetItem" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetItem" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetItem(* parsing::ParsingTreeArray,vint,* const RepeatingPartialParsingOutput)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Get a syntax tree node's item when the whole tree is in a partial modified state. You should use this function instead of ParsingTreeArray::GetItem when implementing this interface.&lt;/summary&gt;
  &lt;returns&gt;Returns the item node.&lt;/returns&gt;
  &lt;param name="node"&gt;The node.&lt;/param&gt;
  &lt;param name="index"&gt;The index of the item.&lt;/param&gt;
  &lt;param name="output"&gt;The partial parsing output, which describes how the whole tree is partial modified.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetItem::node" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetItem(* parsing::ParsingTreeArray,vint,* const RepeatingPartialParsingOutput)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeArray" Name="ParsingTreeArray">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::ParsingTreeArray@s:vl.parsing.ParsingTreeArray" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetItem::index" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetItem(* parsing::ParsingTreeArray,vint,* const RepeatingPartialParsingOutput)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetItem::output" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetItem(* parsing::ParsingTreeArray,vint,* const RepeatingPartialParsingOutput)::output" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingPartialParsingOutput" Name="RepeatingPartialParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingPartialParsingOutput@s:vl.presentation.controls.RepeatingPartialParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Attach" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::Attach" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::Attach(* RepeatingParsingExecutor)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Called when a &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt; is created.&lt;/summary&gt;
  &lt;param name="executor"&gt;The releated &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt;.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="executor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::Attach::executor" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::Attach(* RepeatingParsingExecutor)::executor" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor" Name="RepeatingParsingExecutor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Detach" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::Detach" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::Detach(* RepeatingParsingExecutor)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Called when a &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt; is destroyed.&lt;/summary&gt;
  &lt;param name="executor"&gt;The releated &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt;.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="executor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::Detach::executor" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::Detach(* RepeatingParsingExecutor)::executor" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor" Name="RepeatingParsingExecutor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="CreateCacheAsync" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::CreateCacheAsync" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::CreateCacheAsync(&amp; const RepeatingParsingOutput)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Called when a new parsing result is produced. A parsing analyzer can create a cache to be attached to the output containing anything necessary. This function does not run in UI thread.&lt;/summary&gt;
  &lt;param name="output"&gt;The new parsing result.&lt;/param&gt;
  &lt;returns&gt;The created cache object, which can be null.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::CreateCacheAsync::output" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::CreateCacheAsync(&amp; const RepeatingParsingOutput)::output" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingOutput" Name="RepeatingParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingParsingOutput@s:vl.presentation.controls.RepeatingParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetSemanticIdForTokenAsync" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetSemanticIdForTokenAsync" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetSemanticIdForTokenAsync(&amp; const ParsingTokenContext,&amp; const RepeatingParsingOutput)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Called when an semantic id for a token is needed. If an semantic id is returned, a context sensitive color can be assigned to this token. This functio does not run in UI thread, but it will only be called (for several times) after the cache object is initialized.&lt;/summary&gt;
  &lt;param name="tokenContext"&gt;The token context.&lt;/param&gt;
  &lt;param name="output"&gt;The current parsing result.&lt;/param&gt;
  &lt;returns&gt;The semantic id.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="tokenContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetSemanticIdForTokenAsync::tokenContext" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetSemanticIdForTokenAsync(&amp; const ParsingTokenContext,&amp; const RepeatingParsingOutput)::tokenContext" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ParsingTokenContext" Name="ParsingTokenContext">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::ParsingTokenContext@s:vl.presentation.controls.ParsingTokenContext" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="output" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetSemanticIdForTokenAsync::output" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetSemanticIdForTokenAsync(&amp; const ParsingTokenContext,&amp; const RepeatingParsingOutput)::output" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingOutput" Name="RepeatingParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingParsingOutput@s:vl.presentation.controls.RepeatingParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetCandidateItemsAsync" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetCandidateItemsAsync" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetCandidateItemsAsync(&amp; const ParsingTokenContext,&amp; const RepeatingPartialParsingOutput,&amp; collections::List&lt;ParsingCandidateItem&gt;)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Called when multiple auto complete candidate items for a token is needed. If nothing is written into the "candidateItems" parameter and the grammar also doesn't provide static candidate items, nothing will popup. This functio does not run in UI thread, but it will only be called (for several times) after the cache object is initialized.&lt;/summary&gt;
  &lt;param name="tokenContext"&gt;The token context.&lt;/param&gt;
  &lt;param name="partialOutput"&gt;The partial parsing result. It contains the current parsing result, and an incremental parsing result. If the calculation of candidate items are is very context sensitive, then you should be very careful when traversing the syntax tree, by carefully looking at the "originalNode" and the "modifiedNode" in the "partialOutput" parameter.&lt;/param&gt;
  &lt;param name="candidateItems"&gt;The candidate items.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="tokenContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetCandidateItemsAsync::tokenContext" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetCandidateItemsAsync(&amp; const ParsingTokenContext,&amp; const RepeatingPartialParsingOutput,&amp; collections::List&lt;ParsingCandidateItem&gt;)::tokenContext" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ParsingTokenContext" Name="ParsingTokenContext">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::ParsingTokenContext@s:vl.presentation.controls.ParsingTokenContext" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="partialOutput" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetCandidateItemsAsync::partialOutput" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetCandidateItemsAsync(&amp; const ParsingTokenContext,&amp; const RepeatingPartialParsingOutput,&amp; collections::List&lt;ParsingCandidateItem&gt;)::partialOutput" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingPartialParsingOutput" Name="RepeatingPartialParsingOutput">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::RepeatingPartialParsingOutput@s:vl.presentation.controls.RepeatingPartialParsingOutput" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="candidateItems" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetCandidateItemsAsync::candidateItems" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetCandidateItemsAsync(&amp; const ParsingTokenContext,&amp; const RepeatingPartialParsingOutput,&amp; collections::List&lt;ParsingCandidateItem&gt;)::candidateItems" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ParsingCandidateItem" Name="ParsingCandidateItem">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::ParsingCandidateItem@s:vl.presentation.controls.ParsingCandidateItem" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="CreateTagForCandidateItem" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::CreateTagForCandidateItem" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::CreateTagForCandidateItem(&amp; ParsingCandidateItem)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Create a tag object for a candidate item without a tag object. An candidate item without a tag maybe created by calling &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::GetCandidateItemsAsync(&amp;amp; const ParsingTokenContext,&amp;amp; const RepeatingPartialParsingOutput,&amp;amp; collections::List&amp;lt;ParsingCandidateItem&amp;gt;)@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt; or any token marked by a @Candidate attribute in the grammar.&lt;/summary&gt;
  &lt;param name="item"&gt;The candidate item.&lt;/param&gt;
  &lt;returns&gt;The tag object. In most of the case this object is used for data binding or any other purpose when you want to customize the auto complete control. Returns null if the specified [T.vl.presentation.controls.GuiTextBoxAutoCompleteBase.IAutoCompleteControlProvider] can handle null tag correctly.&lt;/returns&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::CreateTagForCandidateItem::item" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer::CreateTagForCandidateItem(&amp; ParsingCandidateItem)::item" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ParsingCandidateItem" Name="ParsingCandidateItem">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::ParsingCandidateItem@s:vl.presentation.controls.ParsingCandidateItem" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Interface" Name="Interface">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Interface@s:vl.Interface" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <ClassDecl Access="Public" Name="CallbackBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase" ClassType="Class">
          <Document>&lt;Document&gt;
  &lt;summary&gt;A base class for implementing a callback.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <VarDecl Access="Private" Name="callbackAutoPushing" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::callbackAutoPushing" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::callbackAutoPushing" Static="False">
              <Type>
                <RefTypeDecl Name="bool" />
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="callbackElement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::callbackElement" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::callbackElement" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiColorizedTextElement" Name="GuiColorizedTextElement">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::GuiColorizedTextElement@s:vl.presentation.elements.GuiColorizedTextElement" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="callbackElementModifyLock" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::callbackElementModifyLock" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::callbackElementModifyLock" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::SpinLock" Name="SpinLock">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::SpinLock@s:vl.SpinLock" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="parsingExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::parsingExecutor" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::parsingExecutor" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor" Name="RepeatingParsingExecutor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="CallbackBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::CallbackBase" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::CallbackBase(Ptr&lt;RepeatingParsingExecutor&gt;)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_parsingExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::CallbackBase::_parsingExecutor" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::CallbackBase(Ptr&lt;RepeatingParsingExecutor&gt;)::_parsingExecutor" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor" Name="RepeatingParsingExecutor">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="~CallbackBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::~CallbackBase" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::~CallbackBase()" Virtual="Normal" Function="Destructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="RequireAutoSubmitTask" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::RequireAutoSubmitTask" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::RequireAutoSubmitTask(bool)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="enabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::RequireAutoSubmitTask::enabled" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::RequireAutoSubmitTask(bool)::enabled" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Attach" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_element" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach::_element" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)::_element" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiColorizedTextElement" Name="GuiColorizedTextElement">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::elements::GuiColorizedTextElement@s:vl.presentation.elements.GuiColorizedTextElement" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_elementModifyLock" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach::_elementModifyLock" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)::_elementModifyLock" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::SpinLock" Name="SpinLock">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::SpinLock@s:vl.SpinLock" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_ownerComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach::_ownerComposition" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)::_ownerComposition" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="editVersion" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach::editVersion" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Attach(* elements::GuiColorizedTextElement,&amp; SpinLock,* compositions::GuiGraphicsComposition,vuint)::editVersion" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vuint" Name="vuint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vuint@s:vl.vuint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Detach" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Detach" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::Detach()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="TextEditPreview" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditPreview" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditPreview(&amp; TextEditPreviewStruct)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditPreview::arguments" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditPreview(&amp; TextEditPreviewStruct)::arguments" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ICommonTextEditCallback::TextEditPreviewStruct" Name="TextEditPreviewStruct">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::ICommonTextEditCallback::TextEditPreviewStruct@s:vl.presentation.controls.ICommonTextEditCallback" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="TextEditNotify" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditNotify" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditNotify(&amp; const TextEditNotifyStruct)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditNotify::arguments" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditNotify(&amp; const TextEditNotifyStruct)::arguments" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ICommonTextEditCallback::TextEditNotifyStruct" Name="TextEditNotifyStruct">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::ICommonTextEditCallback::TextEditNotifyStruct@s:vl.presentation.controls.ICommonTextEditCallback" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="TextCaretChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextCaretChanged" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextCaretChanged(&amp; const TextCaretChangedStruct)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextCaretChanged::arguments" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextCaretChanged(&amp; const TextCaretChangedStruct)::arguments" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ICommonTextEditCallback::TextCaretChangedStruct" Name="TextCaretChangedStruct">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::presentation::controls::ICommonTextEditCallback::TextCaretChangedStruct@s:vl.presentation.controls.ICommonTextEditCallback" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="TextEditFinished" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditFinished" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditFinished(vuint)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="editVersion" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditFinished::editVersion" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::CallbackBase::TextEditFinished(vuint)::editVersion" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vuint" Name="vuint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vuint@s:vl.vuint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" Name="ICallback">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::ICallback@s:vl.presentation.controls.RepeatingParsingExecutor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::ICommonTextEditCallback" Name="ICommonTextEditCallback">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::ICommonTextEditCallback@s:vl.presentation.controls.ICommonTextEditCallback" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <ClassDecl Access="Public" Name="TokenMetaData" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="tableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::tableTokenIndex" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::tableTokenIndex" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="lexerTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::lexerTokenIndex" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::lexerTokenIndex" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="defaultColorIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::defaultColorIndex" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::defaultColorIndex" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="hasContextColor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::hasContextColor" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::hasContextColor" Static="False">
              <Type>
                <RefTypeDecl Name="bool" />
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="hasAutoComplete" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::hasAutoComplete" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::hasAutoComplete" Static="False">
              <Type>
                <RefTypeDecl Name="bool" />
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="isCandidate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::isCandidate" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::isCandidate" Static="False">
              <Type>
                <RefTypeDecl Name="bool" />
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="unescapedRegexText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::unescapedRegexText" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData::unescapedRegexText" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <ClassDecl Access="Public" Name="FieldMetaData" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="colorIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData::colorIndex" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData::colorIndex" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="semantics" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData::semantics" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData::semantics" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <GenericTypeDecl>
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections@ns:vl.collections" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <VarDecl Access="Private" Name="grammarParser" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::grammarParser" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::grammarParser" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingGeneralParser" Name="ParsingGeneralParser">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingGeneralParser@s:vl.parsing.tabling.ParsingGeneralParser" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="grammarRule" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::grammarRule" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::grammarRule" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="analyzer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::analyzer" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::analyzer" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer" Name="IParsingAnalyzer">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer@s:vl.presentation.controls.RepeatingParsingExecutor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="callbacks" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::callbacks" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::callbacks" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" Name="ICallback">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::ICallback@s:vl.presentation.controls.RepeatingParsingExecutor" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="activatedCallbacks" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::activatedCallbacks" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::activatedCallbacks" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" Name="ICallback">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::ICallback@s:vl.presentation.controls.RepeatingParsingExecutor" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="autoPushingCallback" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::autoPushingCallback" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::autoPushingCallback" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" Name="ICallback">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::ICallback@s:vl.presentation.controls.RepeatingParsingExecutor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <TypedefDecl Access="Private" Name="FieldDesc" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldDesc" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldDesc">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Private" Name="tokenIndexMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::tokenIndexMap" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::tokenIndexMap" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="semanticIndexMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::semanticIndexMap" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::semanticIndexMap" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::SortedList" Name="SortedList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::SortedList`2@s:vl.collections.SortedList`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="tokenMetaDatas" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::tokenMetaDatas" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::tokenMetaDatas" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData" Name="TokenMetaData">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData@s:vl.presentation.controls.RepeatingParsingExecutor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="fieldMetaDatas" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::fieldMetaDatas" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::fieldMetaDatas" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldDesc" Name="FieldDesc">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::FieldDesc@s:vl.presentation.controls.RepeatingParsingExecutor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData" Name="FieldMetaData">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData@s:vl.presentation.controls.RepeatingParsingExecutor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="Execute" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::Execute" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::Execute(&amp; const RepeatingParsingInput)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::Execute::input" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::Execute(&amp; const RepeatingParsingInput)::input" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingInput" Name="RepeatingParsingInput">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::RepeatingParsingInput@s:vl.presentation.controls.RepeatingParsingInput" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="PrepareMetaData" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::PrepareMetaData" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::PrepareMetaData()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnContextFinishedAsync" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::OnContextFinishedAsync" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::OnContextFinishedAsync(&amp; RepeatingParsingOutput)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when semantic analyzing is needed. It is encouraged to set the "cache" fields in "context" argument. If there is an &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt; binded to the &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt;, this function can be automatically done.&lt;/summary&gt;
  &lt;param name="context"&gt;The parsing result.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::OnContextFinishedAsync::context" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::OnContextFinishedAsync(&amp; RepeatingParsingOutput)::context" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingOutput" Name="RepeatingParsingOutput">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::RepeatingParsingOutput@s:vl.presentation.controls.RepeatingParsingOutput" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RepeatingParsingExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::RepeatingParsingExecutor" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::RepeatingParsingExecutor(Ptr&lt;parsing::tabling::ParsingGeneralParser&gt;,&amp; const WString,Ptr&lt;IParsingAnalyzer&gt;)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Initialize the parsing executor.&lt;/summary&gt;
  &lt;param name="_grammarParser"&gt;Parser generated from a grammar.&lt;/param&gt;
  &lt;param name="_grammarRule"&gt;The rule name to parse a complete code.&lt;/param&gt;
  &lt;param name="_analyzer"&gt;The parsing analyzer to create semantic metadatas, it can be null.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_grammarParser" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::RepeatingParsingExecutor::_grammarParser" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::RepeatingParsingExecutor(Ptr&lt;parsing::tabling::ParsingGeneralParser&gt;,&amp; const WString,Ptr&lt;IParsingAnalyzer&gt;)::_grammarParser" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingGeneralParser" Name="ParsingGeneralParser">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingGeneralParser@s:vl.parsing.tabling.ParsingGeneralParser" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_grammarRule" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::RepeatingParsingExecutor::_grammarRule" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::RepeatingParsingExecutor(Ptr&lt;parsing::tabling::ParsingGeneralParser&gt;,&amp; const WString,Ptr&lt;IParsingAnalyzer&gt;)::_grammarRule" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_analyzer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::RepeatingParsingExecutor::_analyzer" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::RepeatingParsingExecutor(Ptr&lt;parsing::tabling::ParsingGeneralParser&gt;,&amp; const WString,Ptr&lt;IParsingAnalyzer&gt;)::_analyzer" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer" Name="IParsingAnalyzer">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer@s:vl.presentation.controls.RepeatingParsingExecutor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~RepeatingParsingExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::~RepeatingParsingExecutor" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::~RepeatingParsingExecutor()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetParser" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetParser" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetParser()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the internal parser that parse the text.&lt;/summary&gt;
  &lt;returns&gt;The internal parser.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingGeneralParser" Name="ParsingGeneralParser">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingGeneralParser@s:vl.parsing.tabling.ParsingGeneralParser" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AttachCallback" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::AttachCallback" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::AttachCallback(* ICallback)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Detach callback.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="value"&gt;The callback.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::AttachCallback::value" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::AttachCallback(* ICallback)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" Name="ICallback">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::ICallback@s:vl.presentation.controls.RepeatingParsingExecutor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DetachCallback" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::DetachCallback" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::DetachCallback(* ICallback)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Detach callback.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="value"&gt;The callback.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::DetachCallback::value" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::DetachCallback(* ICallback)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" Name="ICallback">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::ICallback@s:vl.presentation.controls.RepeatingParsingExecutor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ActivateCallback" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::ActivateCallback" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::ActivateCallback(* ICallback)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Activate a callback. Activating a callback means that the callback owner has an ability to watch a text box modification, e.g., an attached &lt;links&gt;&lt;link cref="::vl::presentation::controls::ICommonTextEditCallback@s:vl.presentation.controls.ICommonTextEditCallback" /&gt;&lt;/links&gt; that is also an &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor::ICallback@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt;. The &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt; may require one of the activated callback to push code for parsing automatically via a call to &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor::ICallback::RequireAutoSubmitTask(bool)@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt;.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="value"&gt;The callback.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::ActivateCallback::value" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::ActivateCallback(* ICallback)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" Name="ICallback">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::ICallback@s:vl.presentation.controls.RepeatingParsingExecutor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DeactivateCallback" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::DeactivateCallback" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::DeactivateCallback(* ICallback)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Deactivate a callback. See &lt;links&gt;&lt;link cref="::vl::presentation::controls::RepeatingParsingExecutor::ActivateCallback(* ICallback)@s:vl.presentation.controls.RepeatingParsingExecutor" /&gt;&lt;/links&gt; for deatils.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="value"&gt;The callback.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::DeactivateCallback::value" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::DeactivateCallback(* ICallback)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::ICallback" Name="ICallback">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::ICallback@s:vl.presentation.controls.RepeatingParsingExecutor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAnalyzer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAnalyzer" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAnalyzer()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the parsing analyzer.&lt;/summary&gt;
  &lt;returns&gt;The parsing analyzer.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer" Name="IParsingAnalyzer">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer@s:vl.presentation.controls.RepeatingParsingExecutor" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetTokenIndex" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetTokenIndex(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tokenName" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetTokenIndex::tokenName" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetTokenIndex(&amp; const WString)::tokenName" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetSemanticId" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticId" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticId(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticId::name" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticId(&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetSemanticName" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticName" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticName(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="id" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticName::id" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticName(vint)::id" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTokenMetaData" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetTokenMetaData" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetTokenMetaData(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData" Name="TokenMetaData">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::TokenMetaData@s:vl.presentation.controls.RepeatingParsingExecutor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="regexTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetTokenMetaData::regexTokenIndex" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetTokenMetaData(vint)::regexTokenIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetFieldMetaData" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetFieldMetaData" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetFieldMetaData(&amp; const WString,&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData" Name="FieldMetaData">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::RepeatingParsingExecutor::FieldMetaData@s:vl.presentation.controls.RepeatingParsingExecutor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetFieldMetaData::type" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetFieldMetaData(&amp; const WString,&amp; const WString)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="field" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetFieldMetaData::field" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetFieldMetaData(&amp; const WString,&amp; const WString)::field" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAttribute" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAttribute" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAttribute(vint,&amp; const WString,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::AttributeInfo" Name="AttributeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::AttributeInfo@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAttribute::index" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAttribute(vint,&amp; const WString,vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAttribute::name" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAttribute(vint,&amp; const WString,vint)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="argumentCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAttribute::argumentCount" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAttribute(vint,&amp; const WString,vint)::argumentCount" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetColorAttribute" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetColorAttribute" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetColorAttribute(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::AttributeInfo" Name="AttributeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::AttributeInfo@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetColorAttribute::index" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetColorAttribute(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetContextColorAttribute" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetContextColorAttribute" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetContextColorAttribute(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::AttributeInfo" Name="AttributeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::AttributeInfo@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetContextColorAttribute::index" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetContextColorAttribute(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetSemanticAttribute" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticAttribute" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticAttribute(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::AttributeInfo" Name="AttributeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::AttributeInfo@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticAttribute::index" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetSemanticAttribute(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCandidateAttribute" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetCandidateAttribute" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetCandidateAttribute(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::AttributeInfo" Name="AttributeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::AttributeInfo@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetCandidateAttribute::index" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetCandidateAttribute(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAutoCompleteAttribute" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAutoCompleteAttribute" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAutoCompleteAttribute(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::AttributeInfo" Name="AttributeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::AttributeInfo@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAutoCompleteAttribute::index" OverloadKey="::vl::presentation::controls::RepeatingParsingExecutor::GetAutoCompleteAttribute(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::RepeatingTaskExecutor" Name="RepeatingTaskExecutor">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::RepeatingTaskExecutor`1@s:vl.RepeatingTaskExecutor`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingInput" Name="RepeatingParsingInput">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::RepeatingParsingInput@s:vl.presentation.controls.RepeatingParsingInput" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::RepeatingParsingExecutor" Name="RepeatingParsingExecutor">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::RepeatingParsingExecutor@s:vl.presentation.controls.RepeatingParsingExecutor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>