<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.StructTypeDescriptor`2">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="TSerializer" Tags="x86, Windows" NameKey="::vl::reflection::description::TSerializer" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::TSerializer" />
        <TypeParameterDecl Access="Public" Name="TDFlags" Tags="x86, Windows" NameKey="::vl::reflection::description::TDFlags" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::TDFlags" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="StructTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="typedSerializer" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::typedSerializer" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::typedSerializer" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TSerializer" Name="TSerializer">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::StructTypeDescriptor`2::TSerializer@s:vl.reflection.description.StructTypeDescriptor`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="StructTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::StructTypeDescriptor" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::StructTypeDescriptor()" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetPropertyCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::GetPropertyCount" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::GetPropertyCount()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetProperty" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::GetProperty" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::GetProperty(vint)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo" Name="IPropertyInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IPropertyInfo@s:vl.reflection.description.IPropertyInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::GetProperty::index" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::GetProperty(vint)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="IsPropertyExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::IsPropertyExists" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::IsPropertyExists(&amp; const WString,bool)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::IsPropertyExists::name" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::IsPropertyExists(&amp; const WString,bool)::name" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::WString@s:vl.WString" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="inheritable" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::IsPropertyExists::inheritable" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::IsPropertyExists(&amp; const WString,bool)::inheritable" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetPropertyByName" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::GetPropertyByName" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::GetPropertyByName(&amp; const WString,bool)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo" Name="IPropertyInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IPropertyInfo@s:vl.reflection.description.IPropertyInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::GetPropertyByName::name" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::GetPropertyByName(&amp; const WString,bool)::name" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::WString@s:vl.WString" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="inheritable" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StructTypeDescriptor::GetPropertyByName::inheritable" OverloadKey="::vl::reflection::description::StructTypeDescriptor`2::GetPropertyByName(&amp; const WString,bool)::inheritable" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::SerializableTypeDescriptor" Name="SerializableTypeDescriptor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::SerializableTypeDescriptor`2@s:vl.reflection.description.SerializableTypeDescriptor`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TSerializer" Name="TSerializer">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::StructTypeDescriptor`2::TSerializer@s:vl.reflection.description.StructTypeDescriptor`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TDFlags" Name="TDFlags">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::StructTypeDescriptor`2::TDFlags@s:vl.reflection.description.StructTypeDescriptor`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>