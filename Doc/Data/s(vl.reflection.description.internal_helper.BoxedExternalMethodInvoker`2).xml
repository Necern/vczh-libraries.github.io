<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.internal_helper.BoxedExternalMethodInvoker`2{TClass,void,... TArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="TClass" Tags="x86, Windows" NameKey="::vl::reflection::description::internal_helper::TClass" OverloadKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::TClass" />
        <TypeParameterDecl Access="Public" Name="TArgs" Tags="x86, Windows" NameKey="::vl::reflection::description::internal_helper::TArgs" OverloadKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::TArgs" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::internal_helper::TClass" Name="TClass">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::TClass@s:vl.reflection.description.internal_helper.BoxedExternalMethodInvoker`2{TClass,void,... TArgs}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <RefTypeDecl Name="void" />
        <VariadicArgumentTypeDecl>
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::internal_helper::TArgs" Name="TArgs">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::TArgs@s:vl.reflection.description.internal_helper.BoxedExternalMethodInvoker`2{TClass,void,... TArgs}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
        </VariadicArgumentTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="BoxedExternalMethodInvoker" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker" OverloadKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;" ClassType="Struct">
          <Children>
            <FuncDecl Access="Public" Name="Invoke" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker::Invoke" OverloadKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::Invoke(* TClass,* function (* TClass, ... TArgs) : void,* MethodInfoImpl,&amp; collections::Array&lt;Value&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="object" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker::Invoke::object" OverloadKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::Invoke(* TClass,* function (* TClass, ... TArgs) : void,* MethodInfoImpl,&amp; collections::Array&lt;Value&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)::object" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::internal_helper::TClass" Name="TClass">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::TClass@s:vl.reflection.description.internal_helper.BoxedExternalMethodInvoker`2{TClass,void,... TArgs}" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="method" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker::Invoke::method" OverloadKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::Invoke(* TClass,* function (* TClass, ... TArgs) : void,* MethodInfoImpl,&amp; collections::Array&lt;Value&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)::method" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <FunctionTypeDecl CallingConvention="Default" Const="False">
                              <ReturnType>
                                <RefTypeDecl Name="void" />
                              </ReturnType>
                              <Parameters>
                                <VarDecl Access="Public" Static="False">
                                  <Type>
                                    <DecorateTypeDecl Decoration="Pointer">
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::internal_helper::TClass" Name="TClass">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::TClass@s:vl.reflection.description.internal_helper.BoxedExternalMethodInvoker`2{TClass,void,... TArgs}" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                    </DecorateTypeDecl>
                                  </Type>
                                </VarDecl>
                                <VarDecl Access="Public" Static="False">
                                  <Type>
                                    <VariadicArgumentTypeDecl>
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::internal_helper::TArgs" Name="TArgs">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::TArgs@s:vl.reflection.description.internal_helper.BoxedExternalMethodInvoker`2{TClass,void,... TArgs}" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                    </VariadicArgumentTypeDecl>
                                  </Type>
                                </VarDecl>
                              </Parameters>
                            </FunctionTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="methodInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker::Invoke::methodInfo" OverloadKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::Invoke(* TClass,* function (* TClass, ... TArgs) : void,* MethodInfoImpl,&amp; collections::Array&lt;Value&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)::methodInfo" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::MethodInfoImpl" Name="MethodInfoImpl">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::MethodInfoImpl@s:vl.reflection.description.MethodInfoImpl" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker::Invoke::arguments" OverloadKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::Invoke(* TClass,* function (* TClass, ... TArgs) : void,* MethodInfoImpl,&amp; collections::Array&lt;Value&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)::arguments" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="args" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker::Invoke::args" OverloadKey="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::Invoke(* TClass,* function (* TClass, ... TArgs) : void,* MethodInfoImpl,&amp; collections::Array&lt;Value&gt;,... &amp;&amp; RemoveCVR&lt;TArgs&gt;::Type)::args" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <DecorateTypeDecl Decoration="RightRef">
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::RemoveCVR::Type" Name="Type">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::RemoveCVR`1::Type@s:vl.RemoveCVR`1" />
                                    <Key Value="::vl::RemoveCVR`1&lt;&amp; T&gt;::Type@s:vl.RemoveCVR`1{&amp; T}" />
                                    <Key Value="::vl::RemoveCVR`1&lt;&amp;&amp; T&gt;::Type@s:vl.RemoveCVR`1{&amp;&amp; T}" />
                                    <Key Value="::vl::RemoveCVR`1&lt;const T&gt;::Type@s:vl.RemoveCVR`1{const T}" />
                                    <Key Value="::vl::RemoveCVR`1&lt;volatile T&gt;::Type@s:vl.RemoveCVR`1{volatile T}" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <GenericTypeDecl>
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::RemoveCVR" Name="RemoveCVR">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::RemoveCVR`1@s:vl.RemoveCVR`1" />
                                            <Key Value="::vl::RemoveCVR`1&lt;&amp; T&gt;@s:vl.RemoveCVR`1{&amp; T}" />
                                            <Key Value="::vl::RemoveCVR`1&lt;&amp;&amp; T&gt;@s:vl.RemoveCVR`1{&amp;&amp; T}" />
                                            <Key Value="::vl::RemoveCVR`1&lt;const T&gt;@s:vl.RemoveCVR`1{const T}" />
                                            <Key Value="::vl::RemoveCVR`1&lt;volatile T&gt;@s:vl.RemoveCVR`1{volatile T}" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                      <TypeArguments>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::internal_helper::TArgs" Name="TArgs">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::internal_helper::BoxedExternalMethodInvoker`2&lt;TClass,void,... TArgs&gt;::TArgs@s:vl.reflection.description.internal_helper.BoxedExternalMethodInvoker`2{TClass,void,... TArgs}" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </TypeArguments>
                                    </GenericTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>