<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::parsing::Log(* ParsingTreeNode,&amp; const WString,&amp; stream::TextWriter,&amp; const WString)">
    <FuncDecl Access="Public" Name="Log" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::Log" OverloadKey="::vl::parsing::Log(* ParsingTreeNode,&amp; const WString,&amp; stream::TextWriter,&amp; const WString)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::Log::node" OverloadKey="::vl::parsing::Log(* ParsingTreeNode,&amp; const WString,&amp; stream::TextWriter,&amp; const WString)::node" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="originalInput" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::Log::originalInput" OverloadKey="::vl::parsing::Log(* ParsingTreeNode,&amp; const WString,&amp; stream::TextWriter,&amp; const WString)::originalInput" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="writer" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::Log::writer" OverloadKey="::vl::parsing::Log(* ParsingTreeNode,&amp; const WString,&amp; stream::TextWriter,&amp; const WString)::writer" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::stream::TextWriter" Name="TextWriter">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::stream::TextWriter@s:vl.stream.TextWriter" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::stream" Name="stream">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream@ns:vl.stream" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="prefix" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::Log::prefix" OverloadKey="::vl::parsing::Log(* ParsingTreeNode,&amp; const WString,&amp; stream::TextWriter,&amp; const WString)::prefix" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>