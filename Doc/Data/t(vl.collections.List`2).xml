<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::collections::List`2">
    <SymbolTree NamespaceUrlName="vl.collections">
      <SymbolParentMapping>
        <Map From="::vl::collections::List`2::T" To="::vl::collections::List`2" />
        <Map From="::vl::collections::List`2::K" To="::vl::collections::List`2" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::List`2" DisplayName="List class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::List`2::List()" DisplayName="List constructor" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::List`2::Contains(&amp; const K)const" DisplayName="Contains method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::List`2::IndexOf(&amp; const K)const" DisplayName="IndexOf method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::List`2::Add(&amp; const T)" DisplayName="Add method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::List`2::Insert(vint,&amp; const T)" DisplayName="Insert method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::List`2::Remove(&amp; const K)" DisplayName="Remove method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::List`2::Set(vint,&amp; const T)" DisplayName="Set method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::collections::List`2::operator [](vint)" DisplayName="operator [] method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>