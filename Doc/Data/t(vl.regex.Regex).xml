<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.regex.Regex">
    <SymbolTree NamespaceUrlName="vl.regex">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex" DisplayName="Regex class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::pure" DisplayName="pure field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::rich" DisplayName="rich field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::Process(&amp; const WString,bool,bool,bool,&amp; RegexMatch::List)const" DisplayName="Process method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::Regex(&amp; const WString,bool)" DisplayName="Regex constructor" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::~Regex()" DisplayName="~Regex destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::IsPureMatch()const" DisplayName="IsPureMatch method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::IsPureTest()const" DisplayName="IsPureTest method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::MatchHead(&amp; const WString)const" DisplayName="MatchHead method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::Match(&amp; const WString)const" DisplayName="Match method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::TestHead(&amp; const WString)const" DisplayName="TestHead method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::Test(&amp; const WString)const" DisplayName="Test method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::Search(&amp; const WString,&amp; RegexMatch::List)const" DisplayName="Search method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::Split(&amp; const WString,bool,&amp; RegexMatch::List)const" DisplayName="Split method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::Regex::Cut(&amp; const WString,bool,&amp; RegexMatch::List)const" DisplayName="Cut method" Doc="true" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>