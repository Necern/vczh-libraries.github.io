<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.parsing.tabling.ParsingState">
    <ClassDecl Access="Public" Name="ParsingState" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState" OverloadKey="::vl::parsing::tabling::ParsingState" ClassType="Class">
      <Children>
        <ClassDecl Access="Public" Name="ShiftReduceRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ShiftReduceRange" OverloadKey="::vl::parsing::tabling::ParsingState::ShiftReduceRange" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="shiftToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ShiftReduceRange::shiftToken" OverloadKey="::vl::parsing::tabling::ParsingState::ShiftReduceRange::shiftToken" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="reduceToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ShiftReduceRange::reduceToken" OverloadKey="::vl::parsing::tabling::ParsingState::ShiftReduceRange::reduceToken" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="ShiftReduceRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ShiftReduceRange::ShiftReduceRange" OverloadKey="::vl::parsing::tabling::ParsingState::ShiftReduceRange::ShiftReduceRange()" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <ClassDecl Access="Public" Name="TransitionResult" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult" ClassType="Struct">
          <Children>
            <EnumDecl Access="Public" Name="TransitionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType" EnumClass="False">
              <Children>
                <EnumItemDecl Access="Public" Name="ExecuteInstructions" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::ExecuteInstructions" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::ExecuteInstructions" />
                <EnumItemDecl Access="Public" Name="AmbiguityBegin" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::AmbiguityBegin" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::AmbiguityBegin" />
                <EnumItemDecl Access="Public" Name="AmbiguityBranch" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::AmbiguityBranch" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::AmbiguityBranch" />
                <EnumItemDecl Access="Public" Name="AmbiguityEnd" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::AmbiguityEnd" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::AmbiguityEnd" />
                <EnumItemDecl Access="Public" Name="SkipToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::SkipToken" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType::SkipToken" />
              </Children>
            </EnumDecl>
            <VarDecl Access="Public" Name="transitionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::transitionType" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::transitionType" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType" Name="TransitionType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType@s:vl.parsing.tabling.ParsingState" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="ambiguityAffectedStackNodeCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::ambiguityAffectedStackNodeCount" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::ambiguityAffectedStackNodeCount" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="ambiguityNodeType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::ambiguityNodeType" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::ambiguityNodeType" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="tableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::tableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::tableTokenIndex" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="tableStateSource" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::tableStateSource" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::tableStateSource" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="tableStateTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::tableStateTarget" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::tableStateTarget" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="tokenIndexInStream" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::tokenIndexInStream" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::tokenIndexInStream" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="token" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::token" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::token" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="transition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::transition" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::transition" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::TransitionItem" Name="TransitionItem">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::TransitionItem@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="instructionBegin" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::instructionBegin" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::instructionBegin" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="instructionCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::instructionCount" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::instructionCount" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="shiftReduceRanges" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::shiftReduceRanges" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::shiftReduceRanges" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <GenericTypeDecl>
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections@ns:vl.collections" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::ShiftReduceRange" Name="ShiftReduceRange">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::ShiftReduceRange@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="TransitionResult" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionResult" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionResult(TransitionType)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_transitionType" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionResult::_transitionType" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionResult(TransitionType)::_transitionType" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType" Name="TransitionType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::TransitionResult::TransitionType@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::operator" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::operator()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="AddShiftReduceRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::AddShiftReduceRange" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::AddShiftReduceRange(* regex::RegexToken,* regex::RegexToken)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="shiftToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::AddShiftReduceRange::shiftToken" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::AddShiftReduceRange(* regex::RegexToken,* regex::RegexToken)::shiftToken" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::regex@ns:vl.regex" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="reduceToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TransitionResult::AddShiftReduceRange::reduceToken" OverloadKey="::vl::parsing::tabling::ParsingState::TransitionResult::AddShiftReduceRange(* regex::RegexToken,* regex::RegexToken)::reduceToken" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::regex@ns:vl.regex" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <ClassDecl Access="Public" Name="Future" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future" OverloadKey="::vl::parsing::tabling::ParsingState::Future" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="currentState" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::currentState" OverloadKey="::vl::parsing::tabling::ParsingState::Future::currentState" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="reduceStateCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::reduceStateCount" OverloadKey="::vl::parsing::tabling::ParsingState::Future::reduceStateCount" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="shiftStates" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::shiftStates" OverloadKey="::vl::parsing::tabling::ParsingState::Future::shiftStates" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="selectedRegexToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::selectedRegexToken" OverloadKey="::vl::parsing::tabling::ParsingState::Future::selectedRegexToken" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="selectedToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::selectedToken" OverloadKey="::vl::parsing::tabling::ParsingState::Future::selectedToken" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="selectedItem" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::selectedItem" OverloadKey="::vl::parsing::tabling::ParsingState::Future::selectedItem" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::TransitionItem" Name="TransitionItem">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::TransitionItem@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="previous" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::previous" OverloadKey="::vl::parsing::tabling::ParsingState::Future::previous" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="next" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::next" OverloadKey="::vl::parsing::tabling::ParsingState::Future::next" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="Future" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::Future" OverloadKey="::vl::parsing::tabling::ParsingState::Future::Future()" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Clone" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Future::Clone" OverloadKey="::vl::parsing::tabling::ParsingState::Future::Clone()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <ClassDecl Access="Public" Name="StateGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="stateStack" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::stateStack" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::stateStack" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="currentState" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::currentState" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::currentState" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="tokenSequenceIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::tokenSequenceIndex" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::tokenSequenceIndex" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="shiftTokenStack" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::shiftTokenStack" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::shiftTokenStack" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex@ns:vl.regex" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="shiftToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::shiftToken" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::shiftToken" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="reduceToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::reduceToken" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::reduceToken" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="StateGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup()" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="StateGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup(&amp; const ParsingTable::RuleInfo)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="info" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup::info" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup(&amp; const ParsingTable::RuleInfo)::info" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::RuleInfo" Name="RuleInfo">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingTable::RuleInfo@s:vl.parsing.tabling.ParsingTable" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="StateGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup(&amp; const StateGroup)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="group" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup::group" OverloadKey="::vl::parsing::tabling::ParsingState::StateGroup::StateGroup(&amp; const StateGroup)::group" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::StateGroup" Name="StateGroup">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingState::StateGroup@s:vl.parsing.tabling.ParsingState" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <VarDecl Access="Private" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::input" OverloadKey="::vl::parsing::tabling::ParsingState::input" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="table" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::table" OverloadKey="::vl::parsing::tabling::ParsingState::table" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="tokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::tokens" OverloadKey="::vl::parsing::tabling::ParsingState::tokens" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex@ns:vl.regex" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="walker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::walker" OverloadKey="::vl::parsing::tabling::ParsingState::walker" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker" Name="ParsingTokenWalker">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingTokenWalker@s:vl.parsing.tabling.ParsingTokenWalker" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="parsingRule" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::parsingRule" OverloadKey="::vl::parsing::tabling::ParsingState::parsingRule" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
              <ReferencingOverloadKeys>
                <Key Value="::vl::WString@s:vl.WString" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="parsingRuleStartState" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::parsingRuleStartState" OverloadKey="::vl::parsing::tabling::ParsingState::parsingRuleStartState" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Private" Name="stateGroup" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::stateGroup" OverloadKey="::vl::parsing::tabling::ParsingState::stateGroup" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::StateGroup" Name="StateGroup">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingState::StateGroup@s:vl.parsing.tabling.ParsingState" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="ParsingState" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ParsingState" OverloadKey="::vl::parsing::tabling::ParsingState::ParsingState(&amp; const WString,Ptr&lt;ParsingTable&gt;,vint)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_input" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ParsingState::_input" OverloadKey="::vl::parsing::tabling::ParsingState::ParsingState(&amp; const WString,Ptr&lt;ParsingTable&gt;,vint)::_input" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_table" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ParsingState::_table" OverloadKey="::vl::parsing::tabling::ParsingState::ParsingState(&amp; const WString,Ptr&lt;ParsingTable&gt;,vint)::_table" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="codeIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ParsingState::codeIndex" OverloadKey="::vl::parsing::tabling::ParsingState::ParsingState(&amp; const WString,Ptr&lt;ParsingTable&gt;,vint)::codeIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~ParsingState" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::~ParsingState" OverloadKey="::vl::parsing::tabling::ParsingState::~ParsingState()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetInput" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetInput" OverloadKey="::vl::parsing::tabling::ParsingState::GetInput()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTable" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetTable" OverloadKey="::vl::parsing::tabling::ParsingState::GetTable()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetTokens" OverloadKey="::vl::parsing::tabling::ParsingState::GetTokens()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::regex@ns:vl.regex" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetToken" OverloadKey="::vl::parsing::tabling::ParsingState::GetToken(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetToken::index" OverloadKey="::vl::parsing::tabling::ParsingState::GetToken(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Reset" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Reset" OverloadKey="::vl::parsing::tabling::ParsingState::Reset(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="rule" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Reset::rule" OverloadKey="::vl::parsing::tabling::ParsingState::Reset(&amp; const WString)::rule" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetParsingRule" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetParsingRule" OverloadKey="::vl::parsing::tabling::ParsingState::GetParsingRule()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetParsingRuleStartState" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetParsingRuleStartState" OverloadKey="::vl::parsing::tabling::ParsingState::GetParsingRuleStartState()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCurrentToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetCurrentToken" OverloadKey="::vl::parsing::tabling::ParsingState::GetCurrentToken()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCurrentTableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetCurrentTableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingState::GetCurrentTableTokenIndex()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetStateStack" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetStateStack" OverloadKey="::vl::parsing::tabling::ParsingState::GetStateStack()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCurrentState" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::GetCurrentState" OverloadKey="::vl::parsing::tabling::ParsingState::GetCurrentState()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SkipCurrentToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::SkipCurrentToken" OverloadKey="::vl::parsing::tabling::ParsingState::SkipCurrentToken()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TestTransitionItemInFuture" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture" OverloadKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture(vint,* Future,* ParsingTable::TransitionItem,* const collections::IEnumerable&lt;vint&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture::tableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture(vint,* Future,* ParsingTable::TransitionItem,* const collections::IEnumerable&lt;vint&gt;)::tableTokenIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="future" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture::future" OverloadKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture(vint,* Future,* ParsingTable::TransitionItem,* const collections::IEnumerable&lt;vint&gt;)::future" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture::item" OverloadKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture(vint,* Future,* ParsingTable::TransitionItem,* const collections::IEnumerable&lt;vint&gt;)::item" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::TransitionItem" Name="TransitionItem">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable::TransitionItem@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="lookAheadTokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture::lookAheadTokens" OverloadKey="::vl::parsing::tabling::ParsingState::TestTransitionItemInFuture(vint,* Future,* ParsingTable::TransitionItem,* const collections::IEnumerable&lt;vint&gt;)::lookAheadTokens" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::vint@s:vl.vint" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MatchTokenInFuture" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::MatchTokenInFuture" OverloadKey="::vl::parsing::tabling::ParsingState::MatchTokenInFuture(vint,* Future,* const collections::IEnumerable&lt;vint&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::TransitionItem" Name="TransitionItem">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::TransitionItem@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::MatchTokenInFuture::tableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingState::MatchTokenInFuture(vint,* Future,* const collections::IEnumerable&lt;vint&gt;)::tableTokenIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="future" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::MatchTokenInFuture::future" OverloadKey="::vl::parsing::tabling::ParsingState::MatchTokenInFuture(vint,* Future,* const collections::IEnumerable&lt;vint&gt;)::future" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="lookAheadTokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::MatchTokenInFuture::lookAheadTokens" OverloadKey="::vl::parsing::tabling::ParsingState::MatchTokenInFuture(vint,* Future,* const collections::IEnumerable&lt;vint&gt;)::lookAheadTokens" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::vint@s:vl.vint" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MatchToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::MatchToken" OverloadKey="::vl::parsing::tabling::ParsingState::MatchToken(vint,* const collections::IEnumerable&lt;vint&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::TransitionItem" Name="TransitionItem">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingTable::TransitionItem@s:vl.parsing.tabling.ParsingTable" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::MatchToken::tableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingState::MatchToken(vint,* const collections::IEnumerable&lt;vint&gt;)::tableTokenIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="lookAheadTokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::MatchToken::lookAheadTokens" OverloadKey="::vl::parsing::tabling::ParsingState::MatchToken(vint,* const collections::IEnumerable&lt;vint&gt;)::lookAheadTokens" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::vint@s:vl.vint" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RunTransitionInFuture" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransitionInFuture" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransitionInFuture(* ParsingTable::TransitionItem,* Future,* Future)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="transition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransitionInFuture::transition" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransitionInFuture(* ParsingTable::TransitionItem,* Future,* Future)::transition" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::TransitionItem" Name="TransitionItem">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable::TransitionItem@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="previous" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransitionInFuture::previous" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransitionInFuture(* ParsingTable::TransitionItem,* Future,* Future)::previous" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="now" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransitionInFuture::now" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransitionInFuture(* ParsingTable::TransitionItem,* Future,* Future)::now" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RunTransition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransition" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransition(* ParsingTable::TransitionItem,* regex::RegexToken,vint,vint,bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::TransitionResult" Name="TransitionResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingState::TransitionResult@s:vl.parsing.tabling.ParsingState" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState" Name="ParsingState">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingState@s:vl.parsing.tabling.ParsingState" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="transition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransition::transition" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransition(* ParsingTable::TransitionItem,* regex::RegexToken,vint,vint,bool)::transition" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::TransitionItem" Name="TransitionItem">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable::TransitionItem@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="regexToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransition::regexToken" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransition(* ParsingTable::TransitionItem,* regex::RegexToken,vint,vint,bool)::regexToken" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex@ns:vl.regex" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="instructionBegin" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransition::instructionBegin" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransition(* ParsingTable::TransitionItem,* regex::RegexToken,vint,vint,bool)::instructionBegin" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="instructionCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransition::instructionCount" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransition(* ParsingTable::TransitionItem,* regex::RegexToken,vint,vint,bool)::instructionCount" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="lastPart" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransition::lastPart" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransition(* ParsingTable::TransitionItem,* regex::RegexToken,vint,vint,bool)::lastPart" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RunTransition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransition" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransition(* ParsingTable::TransitionItem,* regex::RegexToken)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::TransitionResult" Name="TransitionResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingState::TransitionResult@s:vl.parsing.tabling.ParsingState" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState" Name="ParsingState">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingState@s:vl.parsing.tabling.ParsingState" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="transition" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransition::transition" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransition(* ParsingTable::TransitionItem,* regex::RegexToken)::transition" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable::TransitionItem" Name="TransitionItem">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable::TransitionItem@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="regexToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RunTransition::regexToken" OverloadKey="::vl::parsing::tabling::ParsingState::RunTransition(* ParsingTable::TransitionItem,* regex::RegexToken)::regexToken" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex@ns:vl.regex" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadTokenInFuture" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture" OverloadKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture(vint,* Future,* Future,* const collections::IEnumerable&lt;vint&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture::tableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture(vint,* Future,* Future,* const collections::IEnumerable&lt;vint&gt;)::tableTokenIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="previous" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture::previous" OverloadKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture(vint,* Future,* Future,* const collections::IEnumerable&lt;vint&gt;)::previous" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="now" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture::now" OverloadKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture(vint,* Future,* Future,* const collections::IEnumerable&lt;vint&gt;)::now" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="lookAheadTokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture::lookAheadTokens" OverloadKey="::vl::parsing::tabling::ParsingState::ReadTokenInFuture(vint,* Future,* Future,* const collections::IEnumerable&lt;vint&gt;)::lookAheadTokens" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::vint@s:vl.vint" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadToken" OverloadKey="::vl::parsing::tabling::ParsingState::ReadToken(vint,* regex::RegexToken,* const collections::IEnumerable&lt;vint&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::TransitionResult" Name="TransitionResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingState::TransitionResult@s:vl.parsing.tabling.ParsingState" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadToken::tableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingState::ReadToken(vint,* regex::RegexToken,* const collections::IEnumerable&lt;vint&gt;)::tableTokenIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="regexToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadToken::regexToken" OverloadKey="::vl::parsing::tabling::ParsingState::ReadToken(vint,* regex::RegexToken,* const collections::IEnumerable&lt;vint&gt;)::regexToken" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex@ns:vl.regex" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="lookAheadTokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadToken::lookAheadTokens" OverloadKey="::vl::parsing::tabling::ParsingState::ReadToken(vint,* regex::RegexToken,* const collections::IEnumerable&lt;vint&gt;)::lookAheadTokens" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::collections@ns:vl.collections" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::vint@s:vl.vint" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ReadToken" OverloadKey="::vl::parsing::tabling::ParsingState::ReadToken()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::TransitionResult" Name="TransitionResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingState::TransitionResult@s:vl.parsing.tabling.ParsingState" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TestExplore" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TestExplore" OverloadKey="::vl::parsing::tabling::ParsingState::TestExplore(vint,* Future)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TestExplore::tableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingState::TestExplore(vint,* Future)::tableTokenIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="previous" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TestExplore::previous" OverloadKey="::vl::parsing::tabling::ParsingState::TestExplore(vint,* Future)::previous" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Explore" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Explore" OverloadKey="::vl::parsing::tabling::ParsingState::Explore(vint,* Future,&amp; collections::List&lt;* Future&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Explore::tableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingState::Explore(vint,* Future,&amp; collections::List&lt;* Future&gt;)::tableTokenIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="previous" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Explore::previous" OverloadKey="::vl::parsing::tabling::ParsingState::Explore(vint,* Future,&amp; collections::List&lt;* Future&gt;)::previous" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="possibilities" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::Explore::possibilities" OverloadKey="::vl::parsing::tabling::ParsingState::Explore(vint,* Future,&amp; collections::List&lt;* Future&gt;)::possibilities" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExploreStep" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreStep" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreStep(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="previousFutures" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreStep::previousFutures" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreStep(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::previousFutures" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreStep::start" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreStep(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreStep::count" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreStep(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::count" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="possibilities" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreStep::possibilities" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreStep(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::possibilities" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExploreNormalReduce" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="previousFutures" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce::previousFutures" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::previousFutures" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce::start" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce::count" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::count" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="possibilities" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce::possibilities" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreNormalReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::possibilities" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExploreLeftRecursiveReduce" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="previousFutures" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce::previousFutures" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::previousFutures" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce::start" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce::count" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::count" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="possibilities" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce::possibilities" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreLeftRecursiveReduce(&amp; collections::List&lt;* Future&gt;,vint,vint,&amp; collections::List&lt;* Future&gt;)::possibilities" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExploreCreateRootFuture" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::ExploreCreateRootFuture" OverloadKey="::vl::parsing::tabling::ParsingState::ExploreCreateRootFuture()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::Future" Name="Future">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingState::Future@s:vl.parsing.tabling.ParsingState" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TakeSnapshot" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::TakeSnapshot" OverloadKey="::vl::parsing::tabling::ParsingState::TakeSnapshot()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::StateGroup" Name="StateGroup">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling::ParsingState::StateGroup@s:vl.parsing.tabling.ParsingState" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RestoreSnapshot" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RestoreSnapshot" OverloadKey="::vl::parsing::tabling::ParsingState::RestoreSnapshot(Ptr&lt;StateGroup&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="group" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingState::RestoreSnapshot::group" OverloadKey="::vl::parsing::tabling::ParsingState::RestoreSnapshot(Ptr&lt;StateGroup&gt;)::group" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingState::StateGroup" Name="StateGroup">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingState::StateGroup@s:vl.parsing.tabling.ParsingState" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>