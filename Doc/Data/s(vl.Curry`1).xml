<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.Curry`1(^ T)">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Currize a function. Currizing means to create a new function whose argument is the first argument of the original function. Calling this function will return another function reference whose arguments is all remain arguments of the original function. Calling the returned function will call the original function.&lt;/summary&gt;
  &lt;typeparam name="T"&gt;Type of the function.&lt;/typeparam&gt;
  &lt;returns&gt;The currized function.&lt;/returns&gt;
  &lt;param name="function"&gt;The function pointer to currize.&lt;/param&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::T" OverloadKey="::vl::Curry`1(* T)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="Curry" Tags="x64, Windows;x86, Windows" NameKey="::vl::Curry" OverloadKey="::vl::Curry`1(* T)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Func`1@s:vl.Func`1" />
                                <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <SubTypeDecl ReferencingNameKey="::vl::function_binding::Binding::CurriedType" Name="CurriedType">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_binding::Binding`3&lt;function (T0, ... TArgs) : R&gt;::CurriedType@s:vl.function_binding.Binding`3" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <GenericTypeDecl>
                                  <Element>
                                    <SubTypeDecl ReferencingNameKey="::vl::function_binding::Binding" Name="Binding">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::function_binding::Binding`1@s:vl.function_binding.Binding`1" />
                                        <Key Value="::vl::function_binding::Binding`3&lt;function (T0, ... TArgs) : R&gt;@s:vl.function_binding.Binding`3" />
                                      </ReferencingOverloadKeys>
                                      <Parent>
                                        <RefTypeDecl ReferencingNameKey="::vl::function_binding" Name="function_binding">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::function_binding@ns:vl.function_binding" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Parent>
                                    </SubTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Curry`1(* T)::T@s:vl.Curry`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Static="False">
                          <Type>
                            <SubTypeDecl ReferencingNameKey="::vl::function_binding::Binding::FirstParameterType" Name="FirstParameterType">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_binding::Binding`3&lt;function (T0, ... TArgs) : R&gt;::FirstParameterType@s:vl.function_binding.Binding`3" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <GenericTypeDecl>
                                  <Element>
                                    <SubTypeDecl ReferencingNameKey="::vl::function_binding::Binding" Name="Binding">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::function_binding::Binding`1@s:vl.function_binding.Binding`1" />
                                        <Key Value="::vl::function_binding::Binding`3&lt;function (T0, ... TArgs) : R&gt;@s:vl.function_binding.Binding`3" />
                                      </ReferencingOverloadKeys>
                                      <Parent>
                                        <RefTypeDecl ReferencingNameKey="::vl::function_binding" Name="function_binding">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::function_binding@ns:vl.function_binding" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Parent>
                                    </SubTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Curry`1(* T)::T@s:vl.Curry`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="function" Tags="x64, Windows;x86, Windows" NameKey="::vl::Curry::function" OverloadKey="::vl::Curry`1(* T)::function" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Curry`1(* T)::T@s:vl.Curry`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.Curry`1(&amp; const Func{T})">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Currize a function. Currizing means to create a new function whose argument is the first argument of the original function. Calling this function will return another function reference whose arguments is all remain arguments of the original function. Calling the returned function will call the original function.&lt;/summary&gt;
  &lt;typeparam name="T"&gt;Type of the function.&lt;/typeparam&gt;
  &lt;returns&gt;The currized function.&lt;/returns&gt;
  &lt;param name="function"&gt;The function reference to currize.&lt;/param&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::T" OverloadKey="::vl::Curry`1(&amp; const Func&lt;T&gt;)::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <FuncDecl Access="Public" Name="Curry" Tags="x64, Windows;x86, Windows" NameKey="::vl::Curry" OverloadKey="::vl::Curry`1(&amp; const Func&lt;T&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Func`1@s:vl.Func`1" />
                        <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <FunctionTypeDecl CallingConvention="Default" Const="False">
                      <ReturnType>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Func`1@s:vl.Func`1" />
                                <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <SubTypeDecl ReferencingNameKey="::vl::function_binding::Binding::CurriedType" Name="CurriedType">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_binding::Binding`3&lt;function (T0, ... TArgs) : R&gt;::CurriedType@s:vl.function_binding.Binding`3" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <GenericTypeDecl>
                                  <Element>
                                    <SubTypeDecl ReferencingNameKey="::vl::function_binding::Binding" Name="Binding">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::function_binding::Binding`1@s:vl.function_binding.Binding`1" />
                                        <Key Value="::vl::function_binding::Binding`3&lt;function (T0, ... TArgs) : R&gt;@s:vl.function_binding.Binding`3" />
                                      </ReferencingOverloadKeys>
                                      <Parent>
                                        <RefTypeDecl ReferencingNameKey="::vl::function_binding" Name="function_binding">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::function_binding@ns:vl.function_binding" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Parent>
                                    </SubTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Curry`1(&amp; const Func&lt;T&gt;)::T@s:vl.Curry`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </ReturnType>
                      <Parameters>
                        <VarDecl Access="Public" Static="False">
                          <Type>
                            <SubTypeDecl ReferencingNameKey="::vl::function_binding::Binding::FirstParameterType" Name="FirstParameterType">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::function_binding::Binding`3&lt;function (T0, ... TArgs) : R&gt;::FirstParameterType@s:vl.function_binding.Binding`3" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <GenericTypeDecl>
                                  <Element>
                                    <SubTypeDecl ReferencingNameKey="::vl::function_binding::Binding" Name="Binding">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::function_binding::Binding`1@s:vl.function_binding.Binding`1" />
                                        <Key Value="::vl::function_binding::Binding`3&lt;function (T0, ... TArgs) : R&gt;@s:vl.function_binding.Binding`3" />
                                      </ReferencingOverloadKeys>
                                      <Parent>
                                        <RefTypeDecl ReferencingNameKey="::vl::function_binding" Name="function_binding">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::function_binding@ns:vl.function_binding" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Parent>
                                    </SubTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Curry`1(&amp; const Func&lt;T&gt;)::T@s:vl.Curry`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Type>
                        </VarDecl>
                      </Parameters>
                    </FunctionTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="function" Tags="x64, Windows;x86, Windows" NameKey="::vl::Curry::function" OverloadKey="::vl::Curry`1(&amp; const Func&lt;T&gt;)::function" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Func`1@s:vl.Func`1" />
                                    <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Curry`1(&amp; const Func&lt;T&gt;)::T@s:vl.Curry`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>