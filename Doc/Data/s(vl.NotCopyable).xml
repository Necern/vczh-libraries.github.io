<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::NotCopyable">
    <ClassDecl Access="Public" Name="NotCopyable" Tags="x64, Windows;x86, Windows" NameKey="::vl::NotCopyable" OverloadKey="::vl::NotCopyable" ClassType="Class">
      <Children>
        <FuncDecl Access="Private" Name="NotCopyable" Tags="x64, Windows;x86, Windows" NameKey="::vl::NotCopyable::NotCopyable" OverloadKey="::vl::NotCopyable::NotCopyable(&amp; const NotCopyable)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Tags="x64, Windows;x86, Windows" NameKey="::vl::NotCopyable::NotCopyable::" OverloadKey="::vl::NotCopyable::NotCopyable(&amp; const NotCopyable)::" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::NotCopyable" Name="NotCopyable">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::NotCopyable@s:vl.NotCopyable" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Private" Name="operator =" Tags="x64, Windows;x86, Windows" NameKey="::vl::NotCopyable::operator =" OverloadKey="::vl::NotCopyable::operator =(&amp; const NotCopyable)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::NotCopyable" Name="NotCopyable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::NotCopyable@s:vl.NotCopyable" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Tags="x64, Windows;x86, Windows" NameKey="::vl::NotCopyable::operator =::" OverloadKey="::vl::NotCopyable::operator =(&amp; const NotCopyable)::" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::NotCopyable" Name="NotCopyable">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::NotCopyable@s:vl.NotCopyable" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="NotCopyable" Tags="x64, Windows;x86, Windows" NameKey="::vl::NotCopyable::NotCopyable" OverloadKey="::vl::NotCopyable::NotCopyable()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>