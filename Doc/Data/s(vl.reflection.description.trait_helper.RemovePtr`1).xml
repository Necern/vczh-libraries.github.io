<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.trait_helper.RemovePtr`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::trait_helper::T" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="RemovePtr" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::trait_helper::RemovePtr" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::trait_helper::RemovePtr::Type" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::trait_helper::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::trait_helper::RemovePtr`1::T@s:vl.reflection.description.trait_helper.RemovePtr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.trait_helper.RemovePtr`1{^ T}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::trait_helper::T" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;::T" />
      </TypeParameters>
      <Specialization>
        <DecorateTypeDecl Decoration="Pointer">
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::trait_helper::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;::T@s:vl.reflection.description.trait_helper.RemovePtr`1{^ T}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
        </DecorateTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="RemovePtr" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::trait_helper::RemovePtr" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::trait_helper::RemovePtr::Type" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::trait_helper::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::trait_helper::RemovePtr`1&lt;* T&gt;::T@s:vl.reflection.description.trait_helper.RemovePtr`1{^ T}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.trait_helper.RemovePtr`1{Ptr{T}}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::trait_helper::T" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1&lt;Ptr&lt;T&gt;&gt;::T" />
      </TypeParameters>
      <Specialization>
        <GenericTypeDecl>
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
          <TypeArguments>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::trait_helper::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::trait_helper::RemovePtr`1&lt;Ptr&lt;T&gt;&gt;::T@s:vl.reflection.description.trait_helper.RemovePtr`1{Ptr{T}}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </TypeArguments>
        </GenericTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="RemovePtr" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::trait_helper::RemovePtr" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1&lt;Ptr&lt;T&gt;&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::trait_helper::RemovePtr::Type" OverloadKey="::vl::reflection::description::trait_helper::RemovePtr`1&lt;Ptr&lt;T&gt;&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::trait_helper::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::trait_helper::RemovePtr`1&lt;Ptr&lt;T&gt;&gt;::T@s:vl.reflection.description.trait_helper.RemovePtr`1{Ptr{T}}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>