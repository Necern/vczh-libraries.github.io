<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.compositions.GuiStackItemComposition">
    <ClassDecl Access="Public" Name="GuiStackItemComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Represents a stack item composition of a &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiStackComposition@s:vl.presentation.compositions.GuiStackComposition" /&gt;&lt;/links&gt;.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="stackParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::stackParent" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::stackParent" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition" Name="GuiStackComposition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiStackComposition@s:vl.presentation.compositions.GuiStackComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="bounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::bounds" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::bounds" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="extraMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::extraMargin" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::extraMargin" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="OnParentChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::OnParentChanged" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::OnParentChanged(* GuiGraphicsComposition,* GuiGraphicsComposition)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="oldParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::OnParentChanged::oldParent" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::OnParentChanged(* GuiGraphicsComposition,* GuiGraphicsComposition)::oldParent" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="newParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::OnParentChanged::newParent" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::OnParentChanged(* GuiGraphicsComposition,* GuiGraphicsComposition)::newParent" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="GetMinSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::GetMinSize" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::GetMinSize()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiStackItemComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::GuiStackItemComposition" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::GuiStackItemComposition()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiStackItemComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::~GuiStackItemComposition" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::~GuiStackItemComposition()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsSizeAffectParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::IsSizeAffectParent" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::IsSizeAffectParent()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::GetBounds" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::GetBounds()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::SetBounds" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::SetBounds(Rect)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the expected bounds of a stack item. In most of the cases only the size of the bounds is used.&lt;/summary&gt;
  &lt;param name="value"&gt;The expected bounds of a stack item.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::SetBounds::value" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::SetBounds(Rect)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetExtraMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::GetExtraMargin" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::GetExtraMargin()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the extra margin for this stack item. An extra margin is used to enlarge the bounds of the stack item, but only the non-extra part will be used for deciding the stack item layout.&lt;/summary&gt;
  &lt;returns&gt;The extra margin for this stack item.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetExtraMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::SetExtraMargin" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::SetExtraMargin(Margin)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the extra margin for this stack item. An extra margin is used to enlarge the bounds of the stack item, but only the non-extra part will be used for deciding the stack item layout.&lt;/summary&gt;
  &lt;param name="value"&gt;The extra margin for this stack item.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackItemComposition::SetExtraMargin::value" OverloadKey="::vl::presentation::compositions::GuiStackItemComposition::SetExtraMargin(Margin)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsSite" Name="GuiGraphicsSite">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiGraphicsSite@s:vl.presentation.compositions.GuiGraphicsSite" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackItemComposition" Name="GuiStackItemComposition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiStackItemComposition@s:vl.presentation.compositions.GuiStackItemComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>