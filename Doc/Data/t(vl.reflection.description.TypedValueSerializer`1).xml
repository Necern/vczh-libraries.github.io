<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="::vl::reflection::description::TypedValueSerializer`1">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping>
        <Map From="::vl::reflection::description::TypedValueSerializer`1::T" To="::vl::reflection::description::TypedValueSerializer`1" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypedValueSerializer`1" DisplayName="TypedValueSerializer class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypedValueSerializer`1::defaultValue" DisplayName="defaultValue field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypedValueSerializer`1::GetDefaultValue()" DisplayName="GetDefaultValue method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypedValueSerializer`1::Serialize(&amp; const T,&amp; WString)" DisplayName="Serialize method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypedValueSerializer`1::Deserialize(&amp; const WString,&amp; T)" DisplayName="Deserialize method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::TypedValueSerializer`1::TypedValueSerializer(* ITypeDescriptor,&amp; const T)" DisplayName="TypedValueSerializer constructor" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>