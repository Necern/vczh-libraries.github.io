<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::stream::TestEncoding(* unsigned char,vint,&amp; BomEncoder::Encoding,&amp; bool)">
    <FuncDecl Access="Public" Name="TestEncoding" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TestEncoding" OverloadKey="::vl::stream::TestEncoding(* unsigned char,vint,&amp; BomEncoder::Encoding,&amp; bool)" Virtual="Normal" Function="Function">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Guess the text encoding in a buffer.&lt;/summary&gt;
  &lt;param name="buffer"&gt;The buffer to guess.&lt;/param&gt;
  &lt;param name="size"&gt;Size of the buffer in bytes.&lt;/param&gt;
  &lt;param name="encoding"&gt;Returns the most possible encoding.&lt;/param&gt;
  &lt;param name="containsBom"&gt;Returns true if the BOM information is at the beginning of the buffer.&lt;/param&gt;
&lt;/Document&gt;</Document>
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="void" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="buffer" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TestEncoding::buffer" OverloadKey="::vl::stream::TestEncoding(* unsigned char,vint,&amp; BomEncoder::Encoding,&amp; bool)::buffer" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <DecorateTypeDecl Decoration="Unsigned">
                      <Element>
                        <RefTypeDecl Name="char" />
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TestEncoding::size" OverloadKey="::vl::stream::TestEncoding(* unsigned char,vint,&amp; BomEncoder::Encoding,&amp; bool)::size" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="encoding" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TestEncoding::encoding" OverloadKey="::vl::stream::TestEncoding(* unsigned char,vint,&amp; BomEncoder::Encoding,&amp; bool)::encoding" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::stream::BomEncoder::Encoding" Name="Encoding">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::stream::BomEncoder::Encoding@s:vl.stream.BomEncoder" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::stream::BomEncoder" Name="BomEncoder">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::BomEncoder@s:vl.stream.BomEncoder" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="containsBom" Tags="x64, Windows;x86, Windows" NameKey="::vl::stream::TestEncoding::containsBom" OverloadKey="::vl::stream::TestEncoding(* unsigned char,vint,&amp; BomEncoder::Encoding,&amp; bool)::containsBom" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>