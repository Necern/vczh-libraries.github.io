<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.parsing.ParsingTextRange">
    <SymbolTree NamespaceUrlName="vl.parsing">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange" DisplayName="ParsingTextRange struct" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::start" DisplayName="start field" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::end" DisplayName="end field" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::codeIndex" DisplayName="codeIndex field" Doc="true" />
        <Overloads DisplayName="ParsingTextRange constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::ParsingTextRange()" DisplayName="ParsingTextRange constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::ParsingTextRange(&amp; const ParsingTextPos,&amp; const ParsingTextPos,vint)" DisplayName="ParsingTextRange constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::ParsingTextRange(* const regex::RegexToken,* const regex::RegexToken)" DisplayName="ParsingTextRange constructor" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::operator ==(&amp; const ParsingTextRange)const" DisplayName="operator == method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::operator !=(&amp; const ParsingTextRange)const" DisplayName="operator != method" Doc="false" />
        <Overloads DisplayName="Contains method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::Contains(&amp; const ParsingTextPos)const" DisplayName="Contains method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::parsing::ParsingTextRange::Contains(&amp; const ParsingTextRange)const" DisplayName="Contains method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>