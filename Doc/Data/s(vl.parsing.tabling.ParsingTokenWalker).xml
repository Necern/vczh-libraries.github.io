<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::parsing::tabling::ParsingTokenWalker">
    <ClassDecl Access="Public" Name="ParsingTokenWalker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker" ClassType="Class">
      <Children>
        <ClassDecl Access="Protected" Name="LookAheadEnumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="walker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::walker" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::walker" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker" Name="ParsingTokenWalker">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTokenWalker@s:vl.parsing.tabling.ParsingTokenWalker" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="firstToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::firstToken" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::firstToken" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="currentToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::currentToken" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::currentToken" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="currentValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::currentValue" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::currentValue" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Protected" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::index" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::index" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="LookAheadEnumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator(* const ParsingTokenWalker,vint)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_walker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator::_walker" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator(* const ParsingTokenWalker,vint)::_walker" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker" Name="ParsingTokenWalker">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingTokenWalker@s:vl.parsing.tabling.ParsingTokenWalker" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_currentToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator::_currentToken" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator(* const ParsingTokenWalker,vint)::_currentToken" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="LookAheadEnumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator(&amp; const LookAheadEnumerator)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_enumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator::_enumerator" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::LookAheadEnumerator(&amp; const LookAheadEnumerator)::_enumerator" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator" Name="LookAheadEnumerator">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator@s:vl.parsing.tabling.ParsingTokenWalker" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Clone" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Clone" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Clone()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerator" Name="IEnumerator">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::IEnumerator`1@s:vl.collections.IEnumerator`1" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Current" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Current" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Current()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Index" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Index" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Index()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Next" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Next" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Next()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Reset" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Reset" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::LookAheadEnumerator::Reset()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerator" Name="IEnumerator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::IEnumerator`1@s:vl.collections.IEnumerator`1" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <ClassDecl Access="Protected" Name="TokenLookAhead" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="walker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead::walker" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead::walker" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker" Name="ParsingTokenWalker">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTokenWalker@s:vl.parsing.tabling.ParsingTokenWalker" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="TokenLookAhead" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead::TokenLookAhead" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead::TokenLookAhead(* const ParsingTokenWalker)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_talker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead::TokenLookAhead::_talker" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead::TokenLookAhead(* const ParsingTokenWalker)::_talker" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker" Name="ParsingTokenWalker">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingTokenWalker@s:vl.parsing.tabling.ParsingTokenWalker" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="CreateEnumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead::CreateEnumerator" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead::CreateEnumerator()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerator" Name="IEnumerator">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::IEnumerator`1@s:vl.collections.IEnumerator`1" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <ClassDecl Access="Protected" Name="ReduceLookAhead" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="walker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead::walker" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead::walker" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker" Name="ParsingTokenWalker">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTokenWalker@s:vl.parsing.tabling.ParsingTokenWalker" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="ReduceLookAhead" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead::ReduceLookAhead" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead::ReduceLookAhead(* const ParsingTokenWalker)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_walker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead::ReduceLookAhead::_walker" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead::ReduceLookAhead(* const ParsingTokenWalker)::_walker" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker" Name="ParsingTokenWalker">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing::tabling::ParsingTokenWalker@s:vl.parsing.tabling.ParsingTokenWalker" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="CreateEnumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead::CreateEnumerator" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead::CreateEnumerator()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerator" Name="IEnumerator">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::IEnumerator`1@s:vl.collections.IEnumerator`1" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <VarDecl Access="Protected" Name="tokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::tokens" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::tokens" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="LeftRef">
              <Element>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="table" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::table" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::table" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="currentToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::currentToken" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::currentToken" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="tokenLookAhead" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::tokenLookAhead" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::tokenLookAhead" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead" Name="TokenLookAhead">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::tabling::ParsingTokenWalker::TokenLookAhead@s:vl.parsing.tabling.ParsingTokenWalker" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="reduceLookAhead" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::reduceLookAhead" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::reduceLookAhead" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead" Name="ReduceLookAhead">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::tabling::ParsingTokenWalker::ReduceLookAhead@s:vl.parsing.tabling.ParsingTokenWalker" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="GetNextIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::GetNextIndex" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::GetNextIndex(vint)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::GetNextIndex::index" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::GetNextIndex(vint)const::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="GetTableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::GetTableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::GetTableTokenIndex(vint)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::GetTableTokenIndex::index" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::GetTableTokenIndex(vint)const::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ParsingTokenWalker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::ParsingTokenWalker" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::ParsingTokenWalker(&amp; collections::List&lt;regex::RegexToken&gt;,Ptr&lt;ParsingTable&gt;)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_tokens" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::ParsingTokenWalker::_tokens" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::ParsingTokenWalker(&amp; collections::List&lt;regex::RegexToken&gt;,Ptr&lt;ParsingTable&gt;)::_tokens" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::regex@ns:vl.regex" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="_table" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::ParsingTokenWalker::_table" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::ParsingTokenWalker(&amp; collections::List&lt;regex::RegexToken&gt;,Ptr&lt;ParsingTable&gt;)::_table" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~ParsingTokenWalker" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::~ParsingTokenWalker" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::~ParsingTokenWalker()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTokenLookahead" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::GetTokenLookahead" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::GetTokenLookahead()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetReduceLookahead" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::GetReduceLookahead" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::GetReduceLookahead()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerable" Name="IEnumerable">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::IEnumerable`1@s:vl.collections.IEnumerable`1" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::vint@s:vl.vint" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Reset" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::Reset" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::Reset()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Move" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::Move" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::Move()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTableTokenIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::GetTableTokenIndex" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::GetTableTokenIndex()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRegexToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::GetRegexToken" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::GetRegexToken()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::regex" Name="regex">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::regex@ns:vl.regex" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTokenIndexInStream" Tags="x64, Windows;x86, Windows" NameKey="::vl::parsing::tabling::ParsingTokenWalker::GetTokenIndexInStream" OverloadKey="::vl::parsing::tabling::ParsingTokenWalker::GetTokenIndexInStream()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>