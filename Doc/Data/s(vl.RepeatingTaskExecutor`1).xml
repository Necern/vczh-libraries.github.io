<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::RepeatingTaskExecutor`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Queued task executor. It is different from a thread pool by: 1) Task execution is single threaded, 2) If you queue a task, it will override the the unexecuted queued task.&lt;/summary&gt;
  &lt;typeparam name="T"&gt;The type of the argument to run a task.&lt;/typeparam&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::T" OverloadKey="::vl::RepeatingTaskExecutor`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="RepeatingTaskExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor" OverloadKey="::vl::RepeatingTaskExecutor`1" ClassType="Class">
          <Children>
            <VarDecl Access="Private" Name="inputLock" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::inputLock" OverloadKey="::vl::RepeatingTaskExecutor`1::inputLock" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::SpinLock" Name="SpinLock">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::SpinLock@s:vl.SpinLock" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="inputData" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::inputData" OverloadKey="::vl::RepeatingTaskExecutor`1::inputData" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::RepeatingTaskExecutor`1::T@s:vl.RepeatingTaskExecutor`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="inputDataAvailable" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::inputDataAvailable" OverloadKey="::vl::RepeatingTaskExecutor`1::inputDataAvailable" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Volatile">
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="executingEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::executingEvent" OverloadKey="::vl::RepeatingTaskExecutor`1::executingEvent" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::SpinLock" Name="SpinLock">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::SpinLock@s:vl.SpinLock" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Private" Name="executing" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::executing" OverloadKey="::vl::RepeatingTaskExecutor`1::executing" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Volatile">
                  <Element>
                    <RefTypeDecl Name="bool" />
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Private" Name="ExecutingProcInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::ExecutingProcInternal" OverloadKey="::vl::RepeatingTaskExecutor`1::ExecutingProcInternal()" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Private" Name="ExecutingProc" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::ExecutingProc" OverloadKey="::vl::RepeatingTaskExecutor`1::ExecutingProc(* void)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="argument" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::ExecutingProc::argument" OverloadKey="::vl::RepeatingTaskExecutor`1::ExecutingProc(* void)::argument" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl Name="void" />
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="Execute" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::Execute" OverloadKey="::vl::RepeatingTaskExecutor`1::Execute(&amp; const T)" Virtual="Abstract" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;This function is called when it is ready to execute a task. Task execution is single threaded. All task code should be put inside the function.&lt;/summary&gt;
  &lt;param name="input"&gt;The argument to run a task.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::Execute::input" OverloadKey="::vl::RepeatingTaskExecutor`1::Execute(&amp; const T)::input" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::RepeatingTaskExecutor`1::T@s:vl.RepeatingTaskExecutor`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="RepeatingTaskExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::RepeatingTaskExecutor" OverloadKey="::vl::RepeatingTaskExecutor`1::RepeatingTaskExecutor()" Virtual="Normal" Function="Constructor">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Create a task executor.&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="~RepeatingTaskExecutor" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::~RepeatingTaskExecutor" OverloadKey="::vl::RepeatingTaskExecutor`1::~RepeatingTaskExecutor()" Virtual="Normal" Function="Destructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="EnsureTaskFinished" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::EnsureTaskFinished" OverloadKey="::vl::RepeatingTaskExecutor`1::EnsureTaskFinished()" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Wait for all tasks to finish.&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="SubmitTask" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::SubmitTask" OverloadKey="::vl::RepeatingTaskExecutor`1::SubmitTask(&amp; const T)" Virtual="Normal" Function="Function">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Queue a task. If there is a queued task that has not been executied yet, those tasks will be canceled. Only one task can be queued at the same moment.&lt;/summary&gt;
  &lt;param name="input"&gt;The argument to run a task.&lt;/param&gt;
&lt;/Document&gt;</Document>
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="input" Tags="x64, Windows;x86, Windows" NameKey="::vl::RepeatingTaskExecutor::SubmitTask::input" OverloadKey="::vl::RepeatingTaskExecutor`1::SubmitTask(&amp; const T)::input" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::T" Name="T">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::RepeatingTaskExecutor`1::T@s:vl.RepeatingTaskExecutor`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Object@s:vl.Object" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>