<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="::vl::reflection::DescriptableObject">
    <ClassDecl Access="Public" Name="DescriptableObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject" OverloadKey="::vl::reflection::DescriptableObject" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Base class of all reflectable object. You can use pointer or smart pointer to DescriptableObject to define variables, but if you want to create a reflectable class, you should inherit from &lt;links&gt;&lt;link cref="::vl::reflection::Description`1@s:vl.reflection.Description`1" /&gt;&lt;/links&gt;.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="InternalPropertyMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::InternalPropertyMap" OverloadKey="::vl::reflection::DescriptableObject::InternalPropertyMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Object@s:vl.Object" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="DestructorProc" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::DestructorProc" OverloadKey="::vl::reflection::DescriptableObject::DestructorProc">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="obj" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="forceDisposing" Static="False">
                      <Type>
                        <RefTypeDecl Name="bool" />
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Protected" Name="referenceCounter" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::referenceCounter" OverloadKey="::vl::reflection::DescriptableObject::referenceCounter" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Volatile">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="sharedPtrDestructorProc" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::sharedPtrDestructorProc" OverloadKey="::vl::reflection::DescriptableObject::sharedPtrDestructorProc" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject::DestructorProc" Name="DestructorProc">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::DescriptableObject::DestructorProc@s:vl.reflection.DescriptableObject" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="objectSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::objectSize" OverloadKey="::vl::reflection::DescriptableObject::objectSize" Static="False">
          <Type>
            <RefTypeDecl Name="size_t" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::typeDescriptor" OverloadKey="::vl::reflection::DescriptableObject::typeDescriptor" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="internalProperties" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::internalProperties" OverloadKey="::vl::reflection::DescriptableObject::internalProperties" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject::InternalPropertyMap" Name="InternalPropertyMap">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::DescriptableObject::InternalPropertyMap@s:vl.reflection.DescriptableObject" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="DescriptableObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::DescriptableObject" OverloadKey="::vl::reflection::DescriptableObject::DescriptableObject()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~DescriptableObject" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::~DescriptableObject" OverloadKey="::vl::reflection::DescriptableObject::~DescriptableObject()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::GetTypeDescriptor" OverloadKey="::vl::reflection::DescriptableObject::GetTypeDescriptor()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the type descriptor that describe the real type of this object.&lt;/summary&gt;
  &lt;returns&gt;The real type.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetInternalProperty" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::GetInternalProperty" OverloadKey="::vl::reflection::DescriptableObject::GetInternalProperty(&amp; const WString)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get an internal property of this object. This map is totally for customization.&lt;/summary&gt;
  &lt;returns&gt;Value of the internal property of this object.&lt;/returns&gt;
  &lt;param name="name"&gt;Name of the property.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Object@s:vl.Object" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::GetInternalProperty::name" OverloadKey="::vl::reflection::DescriptableObject::GetInternalProperty(&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetInternalProperty" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::SetInternalProperty" OverloadKey="::vl::reflection::DescriptableObject::SetInternalProperty(&amp; const WString,Ptr&lt;Object&gt;)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set an internal property of this object. This map is totally for customization.&lt;/summary&gt;
  &lt;param name="name"&gt;Name of the property.&lt;/param&gt;
  &lt;param name="value"&gt;Value of the internal property of this object.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::SetInternalProperty::name" OverloadKey="::vl::reflection::DescriptableObject::SetInternalProperty(&amp; const WString,Ptr&lt;Object&gt;)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::SetInternalProperty::value" OverloadKey="::vl::reflection::DescriptableObject::SetInternalProperty(&amp; const WString,Ptr&lt;Object&gt;)::value" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Object@s:vl.Object" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispose" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::Dispose" OverloadKey="::vl::reflection::DescriptableObject::Dispose(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Try to delete this object.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded. Returns false if the object refuces to be dispose.&lt;/returns&gt;
  &lt;param name="forceDisposing"&gt;Set to true to force disposing this object. If the reference counter is not 0 if you force disposing it, it will raise a &lt;links&gt;&lt;link cref="::vl::reflection::description::ValueNotDisposableException@s:vl.reflection.description.ValueNotDisposableException" /&gt;&lt;/links&gt;.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="forceDisposing" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::DescriptableObject::Dispose::forceDisposing" OverloadKey="::vl::reflection::DescriptableObject::Dispose(bool)::forceDisposing" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>